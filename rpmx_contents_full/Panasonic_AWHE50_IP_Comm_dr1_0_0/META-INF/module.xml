<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE module [<!ENTITY components SYSTEM "components.xml">]>
<dev:module xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dev="http://www.amx.com/duet/devicesdk"  xsi:schemaLocation="http://www.amx.com/duet/devicesdk/module.xsd">
	<dev:header>
		<dev:manifest-version>1.0.0</dev:manifest-version>
		<dev:import-packages>
			<dev:import-package version="1.15.0">com.amx.duet.devicesdk</dev:import-package>
			<dev:import-package version="1.15.0">com.amx.duet.devicesdk.base</dev:import-package>
			<dev:import-package version="1.15.0">com.amx.duet.devicesdk.component</dev:import-package>
			<dev:import-package version="1.15.0">com.amx.duet.devicesdk.type</dev:import-package>
			<dev:import-package version="1.1">org.osgi.service.http</dev:import-package>
			<dev:import-package version="1.0.1">org.osgi.service.device</dev:import-package>
			<dev:import-package version="1.0.1">com.amx.duet.driver</dev:import-package>
			<dev:import-package version="1.0.1">com.amx.duet.core.osgi</dev:import-package>
			<dev:import-package version="1.0.2">com.amx.duet.da</dev:import-package>
			<dev:import-package version="1.0.1">com.amx.duet.util.metadata</dev:import-package>
			<dev:import-package version="1.0.1">com.amx.duet.util</dev:import-package>
		</dev:import-packages>
		<dev:device-models>
			<dev:device-model>AW-HE50</dev:device-model>
			<dev:device-model>AW-HE120</dev:device-model>
			<dev:device-model>AW-HE60</dev:device-model>
		</dev:device-models>
		<dev:bundle-version>1.0.5</dev:bundle-version>
		<dev:bundle-copyright>(C) Copyright AMX Corp. 2004 - 2011. All Rights Reserved.</dev:bundle-copyright>
		<dev:bundle-name>Panasonic_AWHE50_IP_Comm_dr1_0_0</dev:bundle-name>
		<dev:device-sdkclass>com.amx.duet.devicesdk.Camera</dev:device-sdkclass>
		<dev:amx-type>Duet</dev:amx-type>
		<dev:device-category>IP</dev:device-category>
		<dev:duet-firmware-version>3.50.430</dev:duet-firmware-version>
		<dev:bundle-activator>com.amx.duet.impl.Panasonic.AWHE50.dr1_0_0.Activator</dev:bundle-activator>
		<dev:device-make>Panasonic</dev:device-make>
		<dev:device-revision>1.0.0</dev:device-revision>
		<dev:device-sdkinterface>com.amx.duet.devicesdk.ICamera2</dev:device-sdkinterface>
		<dev:export-packages>
			<dev:export-package version="1.0.5">com.amx.duet.Panasonic.AWHE50.dr1_0_0</dev:export-package>
			<dev:export-package version="1.0.5">com.amx.duet.impl.Panasonic.AWHE50.dr1_0_0</dev:export-package>
			<dev:export-package version="1.0.5">com.amx.duet.tools.Panasonic.AWHE50.net.http.dr1_0_0</dev:export-package>
			<dev:export-package version="1.0.5">com.amx.duet.util.regexp.Panasonic.AWHE50.dr1_0_0</dev:export-package>
			<dev:export-package version="1.0.5">com.amx.duet.util.tools.Panasonic.AWHE50.dr1_0_0</dev:export-package>
			<dev:export-package version="1.0.5">org.apache.commons.codec.binary.dr1_0_0</dev:export-package>
			<dev:export-package version="1.0.5">org.apache.commons.codec.digest.dr1_0_0</dev:export-package>
			<dev:export-package version="1.0.5">org.apache.commons.codec.dr1_0_0</dev:export-package>
			<dev:export-package version="1.0.5">org.apache.commons.codec.language.dr1_0_0</dev:export-package>
			<dev:export-package version="1.0.5">org.apache.commons.codec.net.dr1_0_0</dev:export-package>
			<dev:export-package version="1.0.5">org.apache.commons.httpclient.auth.dr1_0_0</dev:export-package>
			<dev:export-package version="1.0.5">org.apache.commons.httpclient.cookie.dr1_0_0</dev:export-package>
			<dev:export-package version="1.0.5">org.apache.commons.httpclient.dr1_0_0</dev:export-package>
			<dev:export-package version="1.0.5">org.apache.commons.httpclient.methods.dr1_0_0</dev:export-package>
			<dev:export-package version="1.0.5">org.apache.commons.httpclient.methods.multipart.dr1_0_0</dev:export-package>
			<dev:export-package version="1.0.5">org.apache.commons.httpclient.params.dr1_0_0</dev:export-package>
			<dev:export-package version="1.0.5">org.apache.commons.httpclient.protocol.dr1_0_0</dev:export-package>
			<dev:export-package version="1.0.5">org.apache.commons.httpclient.util.dr1_0_0</dev:export-package>
			<dev:export-package version="1.0.5">org.apache.commons.logging.dr1_0_0</dev:export-package>
			<dev:export-package version="1.0.5">org.apache.commons.logging.impl.dr1_0_0</dev:export-package>
		</dev:export-packages>
		<dev:device-levels>35</dev:device-levels>
		<dev:router-service>com.amx.duet.routers.snapi.ISNAPIRouter</dev:router-service>
		<dev:file-dependencies>
			<dev:file-dependency version="1.15.0">devicesdkrt.jar</dev:file-dependency>
			<dev:file-dependency version="1.15.0">snapirouter.jar</dev:file-dependency>
		</dev:file-dependencies>
		<dev:device-class>com.amx.duet.impl.Panasonic.AWHE50.dr1_0_0.PanasonicCamera</dev:device-class>
		<dev:bundle-vendor>AMX LLC.</dev:bundle-vendor>
		<dev:device-channels>301</dev:device-channels>
		<dev:device-interface>com.amx.duet.impl.Panasonic.AWHE50.dr1_0_0.IPanasonicCamera</dev:device-interface>
		<dev:user-defined-entries>
			<dev:user-defined-entry>
				<dev:user-defined-entry-name>DynamicImport-Package</dev:user-defined-entry-name>
				<dev:user-defined-entry-value>*</dev:user-defined-entry-value>
			</dev:user-defined-entry>
			<dev:user-defined-entry>
				<dev:user-defined-entry-name>PROPERTY-Has-Auto-Focus</dev:user-defined-entry-name>
				<dev:user-defined-entry-value>true</dev:user-defined-entry-value>
			</dev:user-defined-entry>
			<dev:user-defined-entry>
				<dev:user-defined-entry-name>PROPERTY-Has-Auto-Focus-Cycle</dev:user-defined-entry-name>
				<dev:user-defined-entry-value>true</dev:user-defined-entry-value>
			</dev:user-defined-entry>
			<dev:user-defined-entry>
				<dev:user-defined-entry-name>PROPERTY-Has-Auto-Iris</dev:user-defined-entry-name>
				<dev:user-defined-entry-value>true</dev:user-defined-entry-value>
			</dev:user-defined-entry>
			<dev:user-defined-entry>
				<dev:user-defined-entry-name>PROPERTY-Has-Auto-Iris-Cycle</dev:user-defined-entry-name>
				<dev:user-defined-entry-value>true</dev:user-defined-entry-value>
			</dev:user-defined-entry>
			<dev:user-defined-entry>
				<dev:user-defined-entry-name>PROPERTY-Has-Camera-Preset</dev:user-defined-entry-name>
				<dev:user-defined-entry-value>true</dev:user-defined-entry-value>
			</dev:user-defined-entry>
			<dev:user-defined-entry>
				<dev:user-defined-entry-name>PROPERTY-Has-Camera-Preset-Cycle</dev:user-defined-entry-name>
				<dev:user-defined-entry-value>true</dev:user-defined-entry-value>
			</dev:user-defined-entry>
			<dev:user-defined-entry>
				<dev:user-defined-entry-name>PROPERTY-Has-Focus</dev:user-defined-entry-name>
				<dev:user-defined-entry-value>true</dev:user-defined-entry-value>
			</dev:user-defined-entry>
			<dev:user-defined-entry>
				<dev:user-defined-entry-name>PROPERTY-Has-Focus-Ramp</dev:user-defined-entry-name>
				<dev:user-defined-entry-value>true</dev:user-defined-entry-value>
			</dev:user-defined-entry>
			<dev:user-defined-entry>
				<dev:user-defined-entry-name>PROPERTY-Has-Focus-Speed</dev:user-defined-entry-name>
				<dev:user-defined-entry-value>true</dev:user-defined-entry-value>
			</dev:user-defined-entry>
			<dev:user-defined-entry>
				<dev:user-defined-entry-name>PROPERTY-Has-Iris</dev:user-defined-entry-name>
				<dev:user-defined-entry-value>true</dev:user-defined-entry-value>
			</dev:user-defined-entry>
			<dev:user-defined-entry>
				<dev:user-defined-entry-name>PROPERTY-Has-Iris-Ramp</dev:user-defined-entry-name>
				<dev:user-defined-entry-value>true</dev:user-defined-entry-value>
			</dev:user-defined-entry>
			<dev:user-defined-entry>
				<dev:user-defined-entry-name>PROPERTY-Has-Iris-Speed</dev:user-defined-entry-name>
				<dev:user-defined-entry-value>true</dev:user-defined-entry-value>
			</dev:user-defined-entry>
			<dev:user-defined-entry>
				<dev:user-defined-entry-name>PROPERTY-Has-Pan-Ramp</dev:user-defined-entry-name>
				<dev:user-defined-entry-value>true</dev:user-defined-entry-value>
			</dev:user-defined-entry>
			<dev:user-defined-entry>
				<dev:user-defined-entry-name>PROPERTY-Has-Pan-Tilt</dev:user-defined-entry-name>
				<dev:user-defined-entry-value>true</dev:user-defined-entry-value>
			</dev:user-defined-entry>
			<dev:user-defined-entry>
				<dev:user-defined-entry-name>PROPERTY-Has-Pan-Tilt-Speed</dev:user-defined-entry-name>
				<dev:user-defined-entry-value>true</dev:user-defined-entry-value>
			</dev:user-defined-entry>
			<dev:user-defined-entry>
				<dev:user-defined-entry-name>PROPERTY-Has-Power</dev:user-defined-entry-name>
				<dev:user-defined-entry-value>true</dev:user-defined-entry-value>
			</dev:user-defined-entry>
			<dev:user-defined-entry>
				<dev:user-defined-entry-name>PROPERTY-Has-Power-Cycle</dev:user-defined-entry-name>
				<dev:user-defined-entry-value>true</dev:user-defined-entry-value>
			</dev:user-defined-entry>
			<dev:user-defined-entry>
				<dev:user-defined-entry-name>PROPERTY-Has-Tilt-Ramp</dev:user-defined-entry-name>
				<dev:user-defined-entry-value>true</dev:user-defined-entry-value>
			</dev:user-defined-entry>
			<dev:user-defined-entry>
				<dev:user-defined-entry-name>PROPERTY-Has-Zoom</dev:user-defined-entry-name>
				<dev:user-defined-entry-value>true</dev:user-defined-entry-value>
			</dev:user-defined-entry>
			<dev:user-defined-entry>
				<dev:user-defined-entry-name>PROPERTY-Has-Zoom-Ramp</dev:user-defined-entry-name>
				<dev:user-defined-entry-value>true</dev:user-defined-entry-value>
			</dev:user-defined-entry>
			<dev:user-defined-entry>
				<dev:user-defined-entry-name>PROPERTY-Has-Zoom-Speed</dev:user-defined-entry-name>
				<dev:user-defined-entry-value>true</dev:user-defined-entry-value>
			</dev:user-defined-entry>
		</dev:user-defined-entries>
		<dev:module-init-entries></dev:module-init-entries>
	</dev:header>
	<dev:type-info>
	<dev:class superclass="com.amx.duet.impl.Panasonic.AWHE50.dr1_0_0.SuperCamera" serializable="true" name="com.amx.duet.impl.Panasonic.AWHE50.dr1_0_0.PanasonicCamera">
		<dev:extends>
			<dev:extend name="com.amx.duet.impl.Panasonic.AWHE50.dr1_0_0.IPanasonicCamera"></dev:extend>
			<dev:extend name="com.amx.duet.devicesdk.component.IMenuComponent"></dev:extend>
			<dev:extend name="com.amx.duet.devicesdk.component.ILampComponent"></dev:extend>
		</dev:extends>
		<dev:fields>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="4" const="4" name="LOG_DEBUG" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="3" const="3" name="LOG_INFO" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="2" const="2" name="LOG_WARNING" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="1" const="1" name="LOG_ERROR" static="true"></dev:field>
			<dev:field visibility="public" fulltype="com.amx.duet.Panasonic.AWHE50.dr1_0_0.Range" type="Range" name="panelRange"></dev:field>
			<dev:field visibility="public" fulltype="com.amx.duet.impl.Panasonic.AWHE50.dr1_0_0.PanasonicAWHE50Command" type="PanasonicAWHE50Command" name="command"></dev:field>
			<dev:field visibility="public" fulltype="com.amx.duet.impl.Panasonic.AWHE50.dr1_0_0.PanasonicAWHE50Response" type="PanasonicAWHE50Response" name="response"></dev:field>
			<dev:field visibility="public" fulltype="java.util.Vector" type="Vector" name="CameraComponents"></dev:field>
			<dev:field visibility="public" fulltype="java.util.Vector" type="Vector" name="LampComponents"></dev:field>
			<dev:field visibility="public" fulltype="java.util.Vector" type="Vector" name="MenuComponents"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="PanasonicCamera"></dev:constructor>
			<dev:constructor visibility="public" name="PanasonicCamera">
				<dev:params>
					<dev:param type="org.osgi.framework.BundleContext" comment="BundleContext bctxt" name="bctxt"></dev:param>
					<dev:param type="com.amx.duet.da.NetLinxDevice" comment="NetLinxDevice" name="nd"></dev:param>
					<dev:param type="java.util.Properties" comment="Properties" name="props"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="void" name="cycleAutoFocus"></dev:method>
			<dev:method visibility="public" type="void" name="cycleAutoIris"></dev:method>
			<dev:method visibility="public" type="void" name="cycleCameraPreset"></dev:method>
			<dev:method visibility="public" returncomment="[1..100]" type="int" name="getCameraPreset"></dev:method>
			<dev:method visibility="public" returncomment="[100]" type="int" name="getCameraPresetCount"></dev:method>
			<dev:method visibility="public" returncomment="[0..255]" type="int" name="getFocus"></dev:method>
			<dev:method visibility="public" returncomment="[] p=com.amx.duet.devicesdk.type.FocusRamp[FAR,NEAR,STOP,UNKNOWN]" type="com.amx.duet.devicesdk.type.FocusRamp" name="getFocusRamp"></dev:method>
			<dev:method visibility="public" returncomment="[0..255]" type="int" name="getFocusSpeed"></dev:method>
			<dev:method visibility="public" returncomment="[0..255]" type="int" name="getIris"></dev:method>
			<dev:method visibility="public" returncomment="[] p=com.amx.duet.devicesdk.type.IrisRamp[OPEN,CLOSE,STOP,UNKNOWN]" type="com.amx.duet.devicesdk.type.IrisRamp" name="getIrisRamp"></dev:method>
			<dev:method visibility="public" returncomment="[0..255]" type="int" name="getIrisSpeed"></dev:method>
			<dev:method visibility="public" returncomment="[] p=com.amx.duet.devicesdk.type.PanRamp[RIGHT,LEFT,STOP,UNKNOWN]  PanRamp - pan ramp setting" type="com.amx.duet.devicesdk.type.PanRamp" name="getPanRamp"></dev:method>
			<dev:method visibility="public" returncomment="[0..255]" type="int" name="getPanSpeed"></dev:method>
			<dev:method visibility="public" returncomment="[] p=com.amx.duet.devicesdk.type.TiltRamp[UP,DOWN,STOP,UNKNOWN]  TiltRamp - tilt ramp setting" type="com.amx.duet.devicesdk.type.TiltRamp" name="getTiltRamp"></dev:method>
			<dev:method visibility="public" returncomment="[0..255]" type="int" name="getTiltSpeed"></dev:method>
			<dev:method visibility="public" returncomment="[0..255]" type="int" name="getZoom"></dev:method>
			<dev:method visibility="public" returncomment="[] p=com.amx.duet.devicesdk.type.ZoomRamp[IN,OUT,STOP,UNKNOWN]  ZoomRamp - zoom ramp setting" type="com.amx.duet.devicesdk.type.ZoomRamp" name="getZoomRamp"></dev:method>
			<dev:method visibility="public" returncomment="[0..255]" type="int" name="getZoomSpeed"></dev:method>
			<dev:method visibility="public" returncomment="boolean" type="boolean" name="isAutoFocusOn"></dev:method>
			<dev:method visibility="public" returncomment="boolean" type="boolean" name="isAutoIrisOn"></dev:method>
			<dev:method visibility="public" type="void" name="saveCameraPreset">
				<dev:params>
					<dev:param type="int" comment="[1..100]" name="preset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setAutoFocusOn">
				<dev:params>
					<dev:param type="boolean" comment="boolean" name="state"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setAutoIrisOn">
				<dev:params>
					<dev:param type="boolean" comment="boolean" name="state"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setCameraPreset">
				<dev:params>
					<dev:param type="int" comment="[1..100]" name="preset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setFocus">
				<dev:params>
					<dev:param type="int" comment="[0..255]" name="focus"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setFocusRamp">
				<dev:params>
					<dev:param type="com.amx.duet.devicesdk.type.FocusRamp" comment="[] p=com.amx.duet.devicesdk.type.FocusRamp[FAR,NEAR,STOP,UNKNOWN]" name="rf"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setFocusSpeed">
				<dev:params>
					<dev:param type="int" comment="[0..255]" name="speed"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setIris">
				<dev:params>
					<dev:param type="int" comment="[0..255]" name="iris"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setIrisRamp">
				<dev:params>
					<dev:param type="com.amx.duet.devicesdk.type.IrisRamp" comment="[] p=com.amx.duet.devicesdk.type.IrisRamp[OPEN,CLOSE,STOP,UNKNOWN]" name="ri"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setIrisSpeed">
				<dev:params>
					<dev:param type="int" comment="[0..255]" name="speed"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setPan">
				<dev:params>
					<dev:param type="int" comment="[0..255]" name="pan"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="[0..255]" type="int" name="getPan"></dev:method>
			<dev:method visibility="public" type="void" name="setDevicePanLevel">
				<dev:params>
					<dev:param type="int" comment="[0..65535]" name="pan"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="[0..65535]" type="int" name="getDevicePanLevel"></dev:method>
			<dev:method visibility="public" type="void" name="setPanRamp">
				<dev:params>
					<dev:param type="com.amx.duet.devicesdk.type.PanRamp" comment="[] p=com.amx.duet.devicesdk.type.PanRamp[RIGHT,LEFT,STOP]" name="rp"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setPanSpeed">
				<dev:params>
					<dev:param type="int" comment="[0..255]" name="speed"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setTilt">
				<dev:params>
					<dev:param type="int" comment="[0..255]" name="tilt"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="[0..255]" type="int" name="getTilt"></dev:method>
			<dev:method visibility="public" type="void" name="setDeviceTiltLevel">
				<dev:params>
					<dev:param type="int" comment="[0..65535]" name="tilt"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="[0..65535]" type="int" name="getDeviceTiltLevel"></dev:method>
			<dev:method visibility="public" type="void" name="setTiltRamp">
				<dev:params>
					<dev:param type="com.amx.duet.devicesdk.type.TiltRamp" comment="[] p=com.amx.duet.devicesdk.type.TiltRamp[UP,DOWN,STOP]" name="rt"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setTiltSpeed">
				<dev:params>
					<dev:param type="int" comment="[0..255]" name="speed"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setZoom">
				<dev:params>
					<dev:param type="int" comment="[0..255]" name="zoom"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setZoomRamp">
				<dev:params>
					<dev:param type="com.amx.duet.devicesdk.type.ZoomRamp" comment="[] p=com.amx.duet.devicesdk.type.ZoomRamp[IN,OUT,STOP]" name="rz"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setZoomSpeed">
				<dev:params>
					<dev:param type="int" comment="[0..255]" name="speed"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="moveMenuCursor">
				<dev:params>
					<dev:param type="com.amx.duet.devicesdk.type.Navigation" comment="[] p=com.amx.duet.devicesdk.type.Navigation[UP,DOWN]" name="direction"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="selectMenuItem"></dev:method>
			<dev:method visibility="public" type="void" name="pressMenuButton">
				<dev:params>
					<dev:param type="com.amx.duet.devicesdk.type.Button" comment="[] p=com.amx.duet.devicesdk.type.Button[CANCEL,EXIT,ENTER,RETURN,CLEAR]  p=com.amx.duet.devicesdk.type.ExtendedButton[MENU,EXIT]" name="button"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="com.amx.duet.Panasonic.AWHE50.dr1_0_0.ValidateUtil">
		<dev:methods>
			<dev:constructor visibility="public" name="ValidateUtil"></dev:constructor>
			<dev:method visibility="public" returncomment="String containing the current baud rate setting, or the default value" type="java.lang.String" name="validateBaudRate" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="String containing the device&apos;s current baud rate setting" name="rate"></dev:param>
					<dev:param type="java.lang.String[]" comment="an array of Strings containing all valid baud rates for the device" name="validRates"></dev:param>
					<dev:param type="java.lang.String" comment="String containing the device&apos;s default baud rate" name="defaultRate"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="String containing the current device ID setting, or the default value" type="java.lang.String" name="validateDeviceID" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="String containing the device&apos;s current device ID setting" name="deviceID"></dev:param>
					<dev:param type="int" comment="integer, represents the smallest valid ID" name="nMinID"></dev:param>
					<dev:param type="int" comment="integer, represents the largest valid ID" name="nMaxID"></dev:param>
					<dev:param type="java.lang.String" comment="String containing the device&apos;s default ID" name="defaultID"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="String containing the current poll time setting, or the default value in   milliseconds converted to seconds" type="java.lang.String" name="validatePollTime" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="String containing the device&apos;s current poll time setting" name="polltime"></dev:param>
					<dev:param type="long" comment="minimum poll time value." name="lMin"></dev:param>
					<dev:param type="long" comment="maximum poll time value." name="lMax"></dev:param>
					<dev:param type="long" comment="integer, represents the default poll time in milliseconds" name="lTime"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="java.lang.String" name="validateTimeoutCount" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="" name="timeout"></dev:param>
					<dev:param type="int" comment="" name="nMax"></dev:param>
					<dev:param type="int" comment="" name="nDefault"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="java.lang.String" name="validateReconnnectTime" static="true">
				<dev:params>
					<dev:param type="java.lang.String" name="connectTime"></dev:param>
					<dev:param type="long" comment="" name="lMin"></dev:param>
					<dev:param type="long" comment="" name="lMax"></dev:param>
					<dev:param type="long" comment="" name="lTime"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="true if this is a valid DPS; false otherwise" type="boolean" final="true" name="isValidDPS" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="String containing the DPS to validate" name="dps"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="true if this is a valid DPS; false otherwise" type="boolean" final="true" name="isValidDPS" static="true">
				<dev:params>
					<dev:param type="com.amx.duet.core.master.netlinx.DPS" comment="DPS to validate" name="dps"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="true if this is a valid IP address; false otherwise" type="boolean" final="true" name="isValidIP" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="String containing the address to validate" name="ip"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="int value contained in the string" type="int" name="ATOI" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="- String containing an int value" name="str"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="String containing the current IP connection type setting, or the default value." type="java.lang.String" name="validateIPConnectType" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="String containing the device&apos;s current IP connection type setting." name="connectType"></dev:param>
					<dev:param type="java.lang.String[]" comment="an array of Strings containing all valid IP connection types for the device." name="validTypes"></dev:param>
					<dev:param type="java.lang.String" comment="String containing the device&apos;s default IP connection type." name="defaultType"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="com.amx.duet.Panasonic.AWHE50.dr1_0_0.Range">
		<dev:methods>
			<dev:constructor visibility="public" name="Range">
				<dev:params>
					<dev:param type="double" comment="The minimum value of the range." name="minValue"></dev:param>
					<dev:param type="double" comment="The maximum value of the range." name="maxValue"></dev:param>
					<dev:param type="double" comment="The increment between each discrete value of the range." name="increment"></dev:param>
					<dev:param type="double" comment="The current value of range." name="currentValue"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="Range">
				<dev:params>
					<dev:param type="double" comment="The minimum value of the range." name="minValue"></dev:param>
					<dev:param type="double" comment="The maximum value of the range." name="maxValue"></dev:param>
					<dev:param type="double" comment="The increment between each discrete value of the range." name="increment"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="Returns the currentValue." type="double" name="getCurrentValue"></dev:method>
			<dev:method visibility="public" returncomment="Returns the _increment." type="double" name="getIncrement"></dev:method>
			<dev:method visibility="public" returncomment="Returns the maxValue." type="double" name="getMaxValue"></dev:method>
			<dev:method visibility="public" returncomment="Returns the minValue." type="double" name="getMinValue"></dev:method>
			<dev:method visibility="public" returncomment="The discrete position that most closely matches the currentValue." type="int" name="getPosition"></dev:method>
			<dev:method visibility="public" type="void" name="setPosition">
				<dev:params>
					<dev:param type="int" name="position"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The discrete position that most closely matches the value." type="int" name="getPosition">
				<dev:params>
					<dev:param type="double" comment="The value you want to evaluate the position of." name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The value within this range that most closely matches the          position of the value within sourceRange." type="double" name="getScaledValue">
				<dev:params>
					<dev:param type="com.amx.duet.Panasonic.AWHE50.dr1_0_0.Range" comment="The range you want to evaluate the discrete position of the             value." name="sourceRange"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The value of the position within the range." type="double" name="getValue">
				<dev:params>
					<dev:param type="int" comment="The discrete position of this range." name="step"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The value for this range adjusted by the offset." type="double" name="getValueForOffset">
				<dev:params>
					<dev:param type="int" comment="The number of discrete units to adjust." name="offset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The number of discrete values within the range." type="int" name="numberOfSteps"></dev:method>
			<dev:method visibility="public" returncomment="The discrete position of this range that most closely matches the          value contained in the sourceRange." type="int" name="scale">
				<dev:params>
					<dev:param type="com.amx.duet.Panasonic.AWHE50.dr1_0_0.Range" comment="The range you want to evaluate the discrete position of the             value." name="sourceRange"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setCurrentValue">
				<dev:params>
					<dev:param type="double" comment="The currentValue to set." name="value"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class abstract="true" name="com.amx.duet.Panasonic.AWHE50.dr1_0_0.RampListener"></dev:class>
	<dev:class superclass="java.lang.Object" name="com.amx.duet.Panasonic.AWHE50.dr1_0_0.Ramp">
		<dev:extends>
			<dev:extend name="com.amx.duet.util.TimelineListener"></dev:extend>
		</dev:extends>
		<dev:fields>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="0" const="0" name="STOP" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="1" const="1" name="UP" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="2" const="2" name="DOWN" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="Ramp">
				<dev:params>
					<dev:param type="com.amx.duet.Panasonic.AWHE50.dr1_0_0.RampListener" comment="" name="listener"></dev:param>
					<dev:param type="int" comment="" name="speed"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="Ramp">
				<dev:params>
					<dev:param type="com.amx.duet.Panasonic.AWHE50.dr1_0_0.RampListener" comment="" name="listener"></dev:param>
					<dev:param type="int" comment="" name="speed"></dev:param>
					<dev:param type="int" name="_offset"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="Ramp">
				<dev:params>
					<dev:param type="com.amx.duet.Panasonic.AWHE50.dr1_0_0.RampListener" name="listener"></dev:param>
					<dev:param type="com.amx.duet.Panasonic.AWHE50.dr1_0_0.Range" comment="" name="range"></dev:param>
					<dev:param type="int" comment="" name="speed"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="Ramp">
				<dev:params>
					<dev:param type="com.amx.duet.Panasonic.AWHE50.dr1_0_0.RampListener" name="listener"></dev:param>
					<dev:param type="double" comment="" name="minValue"></dev:param>
					<dev:param type="double" comment="" name="maxValue"></dev:param>
					<dev:param type="double" comment="" name="step"></dev:param>
					<dev:param type="int" comment="" name="speed"></dev:param>
					<dev:param type="double" comment="" name="currentValue"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="Ramp">
				<dev:params>
					<dev:param type="com.amx.duet.Panasonic.AWHE50.dr1_0_0.RampListener" name="listener"></dev:param>
					<dev:param type="double" comment="" name="minValue"></dev:param>
					<dev:param type="double" comment="" name="maxValue"></dev:param>
					<dev:param type="double" comment="" name="step"></dev:param>
					<dev:param type="int" comment="" name="speed"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="Ramp">
				<dev:params>
					<dev:param type="com.amx.duet.Panasonic.AWHE50.dr1_0_0.RampListener" name="listener"></dev:param>
					<dev:param type="double" comment="" name="minValue"></dev:param>
					<dev:param type="double" comment="" name="maxValue"></dev:param>
					<dev:param type="double" comment="" name="step"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="Ramp">
				<dev:params>
					<dev:param type="com.amx.duet.Panasonic.AWHE50.dr1_0_0.RampListener" name="listener"></dev:param>
					<dev:param type="double" comment="" name="minValue"></dev:param>
					<dev:param type="double" comment="" name="maxValue"></dev:param>
					<dev:param type="double" comment="" name="step"></dev:param>
					<dev:param type="double" comment="" name="currentValue"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="void" name="dispose"></dev:method>
			<dev:method visibility="public" type="void" name="rampUp"></dev:method>
			<dev:method visibility="public" type="void" name="rampDown"></dev:method>
			<dev:method visibility="public" returncomment="" type="double" name="rampStop"></dev:method>
			<dev:method visibility="public" returncomment="int representing the ramp status; 0=STOP, 1=UP, 2=DOWN." type="int" name="getRampStatus"></dev:method>
			<dev:method visibility="public" type="void" name="setRampValue">
				<dev:params>
					<dev:param type="double" comment="" name="currentValue"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setScaledRampValue">
				<dev:params>
					<dev:param type="double" comment="" name="currentValue"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="double" name="getRampValue"></dev:method>
			<dev:method visibility="public" returncomment="" type="com.amx.duet.Panasonic.AWHE50.dr1_0_0.Range" name="getRampRange"></dev:method>
			<dev:method visibility="public" type="void" name="setRampSpeed">
				<dev:params>
					<dev:param type="int" comment="" name="speed"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="int" name="getRampSpeed"></dev:method>
			<dev:method visibility="public" type="void" name="setRampOffset">
				<dev:params>
					<dev:param type="int" comment="" name="offset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="int" name="getRampOffset"></dev:method>
			<dev:method visibility="public" type="void" name="setOverallTime">
				<dev:params>
					<dev:param type="int" comment="" name="seconds"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="int" name="getOverallTime"></dev:method>
			<dev:method visibility="public" type="void" name="setCurrentPosition">
				<dev:params>
					<dev:param type="int" comment="" name="position"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="int" name="getCurrentPosition"></dev:method>
			<dev:method visibility="public" returncomment="" type="int" name="getNumberOfCommands"></dev:method>
			<dev:method visibility="public" type="void" name="setPanelRange">
				<dev:params>
					<dev:param type="double" comment="" name="minValue"></dev:param>
					<dev:param type="double" comment="" name="maxValue"></dev:param>
					<dev:param type="double" comment="" name="increment"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="com.amx.duet.Panasonic.AWHE50.dr1_0_0.Range" name="getPanelRange"></dev:method>
			<dev:method visibility="public" returncomment="" type="double" name="getPanelValue"></dev:method>
			<dev:method visibility="public" returncomment="" type="double" name="getPanelValue">
				<dev:params>
					<dev:param type="int" name="offset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="handleTimelineEvent">
				<dev:params>
					<dev:param type="com.amx.duet.util.Timeline" name="timeline"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="com.amx.duet.Panasonic.AWHE50.dr1_0_0.PrintfFormat">
		<dev:fields></dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="PrintfFormat">
				<dev:params>
					<dev:param type="java.lang.String" comment="Control string." name="fmtArg"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="PrintfFormat">
				<dev:params>
					<dev:param type="java.util.Locale" name="locale"></dev:param>
					<dev:param type="java.lang.String" comment="Control string." name="fmtArg"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="The formatted String." type="java.lang.String" name="sprintf">
				<dev:params>
					<dev:param type="java.lang.Object[]" comment="The array of objects to format." name="o"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the formatted String." type="java.lang.String" name="sprintf"></dev:method>
			<dev:method visibility="public" returncomment="The formatted String." type="java.lang.String" name="sprintf">
				<dev:params>
					<dev:param type="int" comment="The int to format." name="x"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The formatted String." type="java.lang.String" name="sprintf">
				<dev:params>
					<dev:param type="long" comment="The long to format." name="x"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The formatted String." type="java.lang.String" name="sprintf">
				<dev:params>
					<dev:param type="double" comment="The double to format." name="x"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The formatted String." type="java.lang.String" name="sprintf">
				<dev:params>
					<dev:param type="java.lang.String" comment="The String to format." name="x"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the formatted String." type="java.lang.String" name="sprintf">
				<dev:params>
					<dev:param type="java.lang.Object" comment="the Object to format." name="x"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class abstract="true" name="com.amx.duet.Panasonic.AWHE50.dr1_0_0.ICommListener">
		<dev:class superclass="java.lang.Object" name="com.amx.duet.Panasonic.AWHE50.dr1_0_0.ICommListener.Message">
			<dev:fields>
				<dev:field visibility="public" fulltype="byte[]" type="byte" name="msg"></dev:field>
				<dev:field visibility="public" fulltype="int" type="int" name="headerLen"></dev:field>
				<dev:field visibility="public" fulltype="int" type="int" name="contentLen"></dev:field>
				<dev:field visibility="public" fulltype="int" type="int" name="footerLen"></dev:field>
			</dev:fields>
			<dev:methods>
				<dev:constructor visibility="public" name="ICommListener.Message">
					<dev:params>
						<dev:param type="byte[]" name="msg"></dev:param>
					</dev:params>
				</dev:constructor>
				<dev:constructor visibility="public" name="ICommListener.Message">
					<dev:params>
						<dev:param type="byte[]" name="msg"></dev:param>
						<dev:param type="int" name="headerLen"></dev:param>
						<dev:param type="int" name="contentLen"></dev:param>
						<dev:param type="int" name="footerLen"></dev:param>
					</dev:params>
				</dev:constructor>
				<dev:method visibility="public" type="int" name="length"></dev:method>
			</dev:methods>
		</dev:class>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="com.amx.duet.Panasonic.AWHE50.dr1_0_0.ICommListener.Message">
		<dev:fields>
			<dev:field visibility="public" fulltype="byte[]" type="byte" name="msg"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" name="headerLen"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" name="contentLen"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" name="footerLen"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="ICommListener.Message">
				<dev:params>
					<dev:param type="byte[]" name="msg"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="ICommListener.Message">
				<dev:params>
					<dev:param type="byte[]" name="msg"></dev:param>
					<dev:param type="int" name="headerLen"></dev:param>
					<dev:param type="int" name="contentLen"></dev:param>
					<dev:param type="int" name="footerLen"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="int" name="length"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="com.amx.duet.Panasonic.AWHE50.dr1_0_0.HexUtil">
		<dev:methods>
			<dev:constructor visibility="public" name="HexUtil"></dev:constructor>
			<dev:method visibility="public" returncomment="An integer representing the converted string. Any non-hexadecimal characters in the   string are ignored. hextoi returns a value representing the first complete set of characters that   represents an integer. Valid characters are &quot;0&quot; through &quot;9&quot;, &quot;A&quot; through &quot;F&quot; and &quot;a&quot; through &quot;f&quot;.   If no valid characters are found, zero is returned as a result." type="int" final="true" name="hextoi" static="true">
				<dev:params>
					<dev:param type="java.lang.String" name="hex"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="An integer representing the converted string. Any non-hexadecimal characters in the   string are ignored. hextoi returns a value representing the first complete set of characters that   represents an integer. Valid characters are &quot;0&quot; through &quot;9&quot;, &quot;A&quot; through &quot;F&quot; and &quot;a&quot; through &quot;f&quot;.   If no valid characters are found, zero is returned as a result." type="int" final="true" name="hextoi" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="a string in the form of &quot;ffff&quot; (not case sensitive)" name="hex"></dev:param>
					<dev:param type="boolean" comment="endianness; true if big endian; false if little endian" name="big"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="A character string that contains the hexadecimal representation of the specified integer." type="java.lang.String" final="true" name="itohex" static="true">
				<dev:params>
					<dev:param type="int" comment="integer to be converted to a hexadecimal string." name="value"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="com.amx.duet.Panasonic.AWHE50.dr1_0_0.FormatUtil">
		<dev:methods>
			<dev:constructor visibility="public" name="FormatUtil"></dev:constructor>
			<dev:method visibility="public" returncomment="the formatted string" type="java.lang.String" name="sprintf" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="String containing format information" name="fmtStr"></dev:param>
					<dev:param type="java.lang.Object[]" comment="object array containing values to format into string" name="o"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the formatted string" type="java.lang.String" name="sprintf" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="String containing format information" name="fmtStr"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the formatted string" type="java.lang.String" name="sprintf" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="String containing format information" name="fmtStr"></dev:param>
					<dev:param type="double" comment="double value to format into string" name="d"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the formatted string" type="java.lang.String" name="sprintf" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="String containing format information" name="fmtStr"></dev:param>
					<dev:param type="int" comment="int value to format into string" name="i"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the formatted string" type="java.lang.String" name="sprintf" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="String containing format information" name="fmtStr"></dev:param>
					<dev:param type="long" comment="long value to format into string" name="l"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the formatted string" type="java.lang.String" name="sprintf" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="String containing format information" name="fmtStr"></dev:param>
					<dev:param type="java.lang.String" comment="String value to format into string" name="s"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the formatted string" type="java.lang.String" name="sprintf" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="String containing format information" name="fmtStr"></dev:param>
					<dev:param type="java.lang.Object" comment="Object value to format into string" name="o"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="ASCII hex representation of byte array" type="java.lang.String" name="toAsciiHexString" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="byte[] to convert" name="bArr"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="ASCII hex representation of byte array" type="java.lang.String" name="toAsciiHexString" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="byte[] to convert" name="bArr"></dev:param>
					<dev:param type="boolean" comment="endianness; true if big endian; false if little endian" name="big"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="byte[] of values parsed from string" type="byte[]" name="fromAsciiHexString" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="string containing ASCII hex representation" name="inStr"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="byte[] of values parsed from string" type="byte[]" name="fromAsciiHexString" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="string containing ASCII hex representation" name="inStr"></dev:param>
					<dev:param type="boolean" comment="endianness; true if big endian; false if little endian" name="big"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="com.amx.duet.Panasonic.AWHE50.dr1_0_0.CommManager">
		<dev:extends>
			<dev:extend name="com.amx.duet.util.TimelineListener"></dev:extend>
			<dev:extend name="com.amx.duet.util.TimerListener"></dev:extend>
			<dev:extend name="com.amx.duet.tools.Panasonic.AWHE50.net.http.dr1_0_0.IHttpPostWrapper"></dev:extend>
		</dev:extends>
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.Integer" type="Integer" final="true" name="POLL_TIME_MIN" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.Integer" type="Integer" final="true" name="POLL_TIME_MAX" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.Integer" type="Integer" final="true" name="RECONNECT_TIME_MIN" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.Integer" type="Integer" final="true" name="RECONNECT_TIME_MAX" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.Integer" type="Integer" final="true" name="DEFAULT_CONNECT_TIME" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.Integer" type="Integer" final="true" name="DEFAULT_POLL_TIME" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.Integer" type="Integer" final="true" name="DEFAULT_QUEUE_TIME" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.Integer" type="Integer" final="true" name="DEFAULT_HEART_TIME" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.Integer" type="Integer" final="true" name="DEFAULT_TIMEOUT_COUNT" static="true"></dev:field>
			<dev:field visibility="public" fulltype="long" type="long" final="true" constexpr="10000l" const="10000" name="TIME_OUT" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;Baud_Rate&quot;" const="Baud_Rate" name="BAUD_RATE" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;Poll_Time&quot;" const="Poll_Time" name="POLL_TIME" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;Device_ID&quot;" const="Device_ID" name="DEVICE_ID" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;Reconnect_Time&quot;" const="Reconnect_Time" name="RECONNECT_TIME" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;Password&quot;" const="Password" name="PASSWORD" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;User_Name&quot;" const="User_Name" name="USERNAME" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;IP_Address&quot;" const="IP_Address" name="IP_ADDRESS" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;Port&quot;" const="Port" name="IP_PORT" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;IP_Type&quot;" const="IP_Type" name="IP_TYPE" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;Timeout_Count&quot;" const="Timeout_Count" name="TIMEOUT_COUNT" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;System_Diagnostic&quot;" const="System_Diagnostic" name="SYSTEM_DIAGNOSTIC" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;Model&quot;" const="Model" name="MODEL" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="1" const="1" name="IP_ONLY" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="2" const="2" name="IP_SERIAL" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="3" const="3" name="SERIAL_ONLY" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="0" const="0" name="MIN_LVL" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="255" const="255" name="MAX_LVL" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="-255" const="-255" name="MIN_ADJUST" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="255" const="255" name="MAX_ADJUST" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="4" const="4" name="DEBUG" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="4" const="4" name="INFO" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="4" const="4" name="WARNING" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="4" const="4" name="ERROR" static="true"></dev:field>
			<dev:field visibility="public" fulltype="char" type="char" final="true" constexpr="34" const="34" name="DOUBLE_QUOTE" static="true"></dev:field>
			<dev:field visibility="public" fulltype="char" type="char" final="true" constexpr="39" const="39" name="SINGLE_QUOTE" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="CommManager"></dev:constructor>
			<dev:constructor visibility="public" name="CommManager">
				<dev:params>
					<dev:param type="com.amx.duet.devicesdk.base.Module" name="mod"></dev:param>
					<dev:param type="com.amx.duet.da.NetLinxDevice" name="nd"></dev:param>
					<dev:param type="java.util.Properties" name="props"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="void" name="setCommonDevice">
				<dev:params>
					<dev:param type="com.amx.duet.devicesdk.base.Module" comment="object of type Module" name="mod"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="device object of type Module" type="com.amx.duet.devicesdk.base.Module" name="getCommonDevice"></dev:method>
			<dev:method visibility="public" returncomment="true if the device is online; false otherwise." type="boolean" name="isDeviceOnLine"></dev:method>
			<dev:method visibility="public" returncomment="true if the data is initialized; false otherwise." type="boolean" name="isDataInitialized"></dev:method>
			<dev:method visibility="public" returncomment="boolean value sent to the processDeviceOnlineEvent" type="boolean" name="setOnlineState">
				<dev:params>
					<dev:param type="boolean" comment="is the boolean value to be set" name="state"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="boolean value sent to the processDataInitializedEvent" type="boolean" name="setDataInitializedState">
				<dev:params>
					<dev:param type="boolean" comment="is the boolean value to be set" name="state"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="true if the module is in diagnostic mode; false otherwise." type="boolean" name="isInDiagnosticMode"></dev:method>
			<dev:method visibility="public" type="void" name="setNetLinxDevice">
				<dev:params>
					<dev:param type="com.amx.duet.da.NetLinxDevice" comment="NetLinxDevice" name="nd"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="NetLinxDevice" type="com.amx.duet.da.NetLinxDevice" name="getNetLinxDevice"></dev:method>
			<dev:method visibility="public" type="void" name="setValidBaudRates">
				<dev:params>
					<dev:param type="java.lang.String[]" comment="String[] of baud rates." name="rates"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="String[] of baud rates." type="java.lang.String[]" name="getValidBaudRates"></dev:method>
			<dev:method visibility="public" type="void" name="setDefaultBaudRate">
				<dev:params>
					<dev:param type="int" comment="int containing the baud rate." name="rate"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="true if the connection type is IP; false otherwise." type="boolean" name="isIPControlled"></dev:method>
			<dev:method visibility="public" type="void" name="setDefaultIPAddress">
				<dev:params>
					<dev:param type="java.lang.String" comment="String containing the IP address." name="ipAddress"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setDefaultIPAddress">
				<dev:params>
					<dev:param type="java.lang.String" comment="String containing the IP address." name="ipAddress"></dev:param>
					<dev:param type="int" comment="int containing the IP port." name="port"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setMaxTimeout">
				<dev:params>
					<dev:param type="int" comment="Maximum number of retries" name="count"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="Maximum number of retries" type="int" name="getMaxTimeout"></dev:method>
			<dev:method visibility="public" type="void" name="setTimeoutCount">
				<dev:params>
					<dev:param type="int" comment="Timeout count value." name="count"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="incrementTimeout"></dev:method>
			<dev:method visibility="public" returncomment="Timeout count value." type="int" name="getTimeoutCount"></dev:method>
			<dev:method visibility="public" returncomment="true if disposing; false otherwise." type="boolean" name="isDisposing"></dev:method>
			<dev:method visibility="public" returncomment="true if polling; false otherwise." type="boolean" name="isPolling"></dev:method>
			<dev:method visibility="public" returncomment="true if heartbeating; false otherwise." type="boolean" name="isHeartbeating"></dev:method>
			<dev:method visibility="public" returncomment="true if queing; false otherwise." type="boolean" name="isQueing"></dev:method>
			<dev:method visibility="public" returncomment="The String formatted property key." type="java.lang.String" name="getPropertyKey">
				<dev:params>
					<dev:param type="java.lang.String" comment="String used for matching." name="key"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="Property object containing the key/value pair." type="com.amx.duet.Panasonic.AWHE50.dr1_0_0.CommManager.Property" name="validateProperty">
				<dev:params>
					<dev:param type="java.lang.String" comment="String to lookup." name="key"></dev:param>
					<dev:param type="java.lang.String" comment="String to validate and set." name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="refresh"></dev:method>
			<dev:method visibility="public" type="void" name="reinitialize"></dev:method>
			<dev:method visibility="public" type="void" name="dispose"></dev:method>
			<dev:method visibility="public" type="void" name="lockQueue">
				<dev:params>
					<dev:param type="boolean" comment="" name="bLock"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="true if the queue is to be locked; false otherwise." type="boolean" name="isQueueLocked"></dev:method>
			<dev:method visibility="public" type="void" name="intitializeConnection">
				<dev:params>
					<dev:param type="boolean" name="isDeqOnReply"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="handleOnlineEvent"></dev:method>
			<dev:method visibility="public" type="void" name="handleOfflineEvent"></dev:method>
			<dev:method visibility="public" type="void" name="handleTimelineEvent">
				<dev:params>
					<dev:param type="com.amx.duet.util.Timeline" name="timeline"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="handleTimerEvent">
				<dev:params>
					<dev:param type="com.amx.duet.util.Timer" name="timer"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="killResponseTimer"></dev:method>
			<dev:method visibility="public" type="void" name="startResponseTimer"></dev:method>
			<dev:method visibility="public" type="void" name="startResponseTimer">
				<dev:params>
					<dev:param type="long" comment="Amount of time before timer times out." name="lTimeout"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setDeQueueTime">
				<dev:params>
					<dev:param type="long" comment="long" name="lTime"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="long" type="long" name="getDeQueueTime"></dev:method>
			<dev:method visibility="public" type="void" name="pauseQueueTimeline"></dev:method>
			<dev:method visibility="public" type="void" name="restartQueueTimeline"></dev:method>
			<dev:method visibility="public" type="void" name="killQueueTimeline"></dev:method>
			<dev:method visibility="public" type="void" name="startQueueTimeline"></dev:method>
			<dev:method visibility="public" type="void" name="killHeartbeatTimeline"></dev:method>
			<dev:method visibility="public" type="void" name="startHeartbeatTimeline"></dev:method>
			<dev:method visibility="public" type="void" name="startPolling"></dev:method>
			<dev:method visibility="public" type="void" name="stopPolling"></dev:method>
			<dev:method visibility="public" type="void" name="sendString">
				<dev:params>
					<dev:param type="java.lang.String" comment="Message to be sent to the device." name="msg"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="handleHttpPostReply">
				<dev:params>
					<dev:param type="java.lang.String" comment="" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="handleHttpPostState">
				<dev:params>
					<dev:param type="int" comment="" name="state"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="handleSuccessfulEvent"></dev:method>
			<dev:method visibility="public" type="void" name="setCTSEnable">
				<dev:params>
					<dev:param type="com.amx.duet.da.NetLinxDevice" name="device"></dev:param>
					<dev:param type="boolean" comment="" name="on"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setBaud">
				<dev:params>
					<dev:param type="com.amx.duet.da.NetLinxDevice" name="device"></dev:param>
					<dev:param type="java.lang.String" comment="" name="baud"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setBaud">
				<dev:params>
					<dev:param type="com.amx.duet.da.NetLinxDevice" name="device"></dev:param>
					<dev:param type="java.lang.String" comment="" name="baud"></dev:param>
					<dev:param type="boolean" comment="" name="temporary"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setCharDelay">
				<dev:params>
					<dev:param type="com.amx.duet.da.NetLinxDevice" name="device"></dev:param>
					<dev:param type="int" comment="" name="time"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="set9BitMode">
				<dev:params>
					<dev:param type="com.amx.duet.da.NetLinxDevice" name="device"></dev:param>
					<dev:param type="boolean" comment="" name="on"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setReceiveEnable">
				<dev:params>
					<dev:param type="com.amx.duet.da.NetLinxDevice" name="device"></dev:param>
					<dev:param type="boolean" comment="" name="on"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setHardwareHandshake">
				<dev:params>
					<dev:param type="com.amx.duet.da.NetLinxDevice" name="device"></dev:param>
					<dev:param type="boolean" comment="" name="on"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setSoftwareHandshake">
				<dev:params>
					<dev:param type="com.amx.duet.da.NetLinxDevice" name="device"></dev:param>
					<dev:param type="boolean" comment="" name="on"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="sendCommandFeedback">
				<dev:params>
					<dev:param type="java.lang.String" comment="is the response to return to the UI" name="msg"></dev:param>
					<dev:param type="com.amx.duet.devicesdk.base.AdvancedEvent" comment="contains information for Java users" name="advEv"></dev:param>
					<dev:param type="int" comment="is the instantiation to which the response should be sent" name="zone"></dev:param>
					<dev:param type="com.amx.duet.da.NetLinxDevice" comment="is the virtual device to which the response should be sent" name="device"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="sendCommandFeedback">
				<dev:params>
					<dev:param type="java.lang.String" comment="is the response to return to the UI" name="msg"></dev:param>
					<dev:param type="com.amx.duet.devicesdk.base.AdvancedEvent" comment="contains information for Java users" name="advEv"></dev:param>
					<dev:param type="int" comment="is the instantiation to which the response should be sent" name="zone"></dev:param>
					<dev:param type="com.amx.duet.core.master.netlinx.DPS" comment="is the virtual device to which the response should be sent" name="dps"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="sendLevelFeedback">
				<dev:params>
					<dev:param type="int" comment="level number" name="levelID"></dev:param>
					<dev:param type="int" comment="level value" name="levelValue"></dev:param>
					<dev:param type="com.amx.duet.devicesdk.base.AdvancedEvent" comment="contains information for Java users" name="advEv"></dev:param>
					<dev:param type="int" comment="the instantiation to which the response should be sent" name="zone"></dev:param>
					<dev:param type="com.amx.duet.da.NetLinxDevice" comment="is the virtual device to which the response should be sent" name="device"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="sendLevelFeedback">
				<dev:params>
					<dev:param type="int" comment="level number" name="levelID"></dev:param>
					<dev:param type="int" comment="level value" name="levelValue"></dev:param>
					<dev:param type="com.amx.duet.devicesdk.base.AdvancedEvent" comment="contains information for Java users" name="advEv"></dev:param>
					<dev:param type="int" comment="the instantiation to which the response should be sent" name="zone"></dev:param>
					<dev:param type="com.amx.duet.core.master.netlinx.DPS" comment="is the virtual device to which the response should be sent" name="dps"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="sendChannelFeedback">
				<dev:params>
					<dev:param type="int" comment="integer, channel number" name="chanID"></dev:param>
					<dev:param type="boolean" comment="boolean, channel state" name="state"></dev:param>
					<dev:param type="com.amx.duet.devicesdk.base.AdvancedEvent" comment="AdvancedEvent Object" name="advEv"></dev:param>
					<dev:param type="int" comment="integer, port to return the data on" name="zone"></dev:param>
					<dev:param type="com.amx.duet.da.NetLinxDevice" comment="the virtual device to which the response should be sent" name="device"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="sendChannelFeedback">
				<dev:params>
					<dev:param type="int" comment="integer, channel number" name="chanID"></dev:param>
					<dev:param type="boolean" comment="boolean, channel state" name="state"></dev:param>
					<dev:param type="com.amx.duet.devicesdk.base.AdvancedEvent" comment="AdvancedEvent Object" name="advEv"></dev:param>
					<dev:param type="int" comment="integer, port to return the data on" name="zone"></dev:param>
					<dev:param type="com.amx.duet.core.master.netlinx.DPS" comment="the virtual device to which the response should be sent" name="dps"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;UL&gt;  &lt;LI&gt;0 = not IP controlled  &lt;LI&gt;1 = definately IP controlled  &lt;LI&gt;2 = could be IP controlled or serial controlled  &lt;/UL&gt;" type="int" name="getConnectionType"></dev:method>
			<dev:method visibility="public" returncomment="true if this is a SerialDevice; false otherwise" type="boolean" name="isSerialControlled">
				<dev:params>
					<dev:param type="com.amx.duet.da.NetLinxDevice" comment="" name="nd"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="true if this was loaded dynamically; false otherwise." type="boolean" name="isDynamicDevice"></dev:method>
			<dev:method visibility="public" returncomment="DPS for the virtual device" type="com.amx.duet.core.master.netlinx.DPS" name="getVirtualDPS"></dev:method>
			<dev:method visibility="public" returncomment="port number from the advance event DPS" type="int" name="getAdvancedIndex">
				<dev:params>
					<dev:param type="com.amx.duet.core.master.netlinx.DPS" comment="Advance Event object&apos;s DPS" name="eventDPS"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="true if the name is valid; false otherwise." type="boolean" name="IsFileNameValid">
				<dev:params>
					<dev:param type="java.lang.String" comment="" name="strFileName"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The newly created timer." type="com.amx.duet.util.Timer" name="startTimer">
				<dev:params>
					<dev:param type="java.lang.String" comment="String name of the timer to ." name="name"></dev:param>
					<dev:param type="long" comment="Timeout value." name="lTime"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="restartTimeline">
				<dev:params>
					<dev:param type="com.amx.duet.util.Timeline" comment="Timeline to restart." name="timeline"></dev:param>
					<dev:param type="long[]" comment="Times to reload." name="alTimes"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The (hopefully) destroyed timer object." type="com.amx.duet.util.Timer" name="stopTimer">
				<dev:params>
					<dev:param type="com.amx.duet.util.Timer" comment="The Timer object to stop and destroy." name="timer"></dev:param>
					<dev:param type="java.lang.String" comment="String name of the timer to destroy." name="name"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="Returns the responseTimeout." type="long" name="getResponseTimeout"></dev:method>
			<dev:method visibility="public" type="void" name="setResponseTimeout">
				<dev:params>
					<dev:param type="long" comment="The responseTimeout to set." name="responseTimeout"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="java.util.ArrayList" name="parseCSVValue" static="true">
				<dev:params>
					<dev:param type="char" name="quotetype"></dev:param>
					<dev:param type="java.lang.String" name="value"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
		<dev:class superclass="java.lang.Object" name="com.amx.duet.Panasonic.AWHE50.dr1_0_0.CommManager.Property">
			<dev:fields>
				<dev:field visibility="public" fulltype="java.lang.String" type="String" name="key"></dev:field>
				<dev:field visibility="public" fulltype="java.lang.String" type="String" name="value"></dev:field>
			</dev:fields>
		</dev:class>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="com.amx.duet.Panasonic.AWHE50.dr1_0_0.CommManager.Property">
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" name="key"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" name="value"></dev:field>
		</dev:fields>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="com.amx.duet.Panasonic.AWHE50.dr1_0_0.ByteBuffer">
		<dev:fields>
			<dev:field visibility="public" fulltype="byte" type="byte" final="true" constexpr="0" const="0" name="BIG_ENDIAN" static="true"></dev:field>
			<dev:field visibility="public" fulltype="byte" type="byte" final="true" constexpr="1" const="1" name="LITTLE_ENDIAN" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="ByteBuffer"></dev:constructor>
			<dev:constructor visibility="public" name="ByteBuffer">
				<dev:params>
					<dev:param type="int" comment="the initial value of the byte array" name="b"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="ByteBuffer">
				<dev:params>
					<dev:param type="byte[]" comment="a &lt;TT&gt;byte[]&lt;/TT&gt;." name="original"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="ByteBuffer">
				<dev:params>
					<dev:param type="byte[]" comment="array that is the source of bytes." name="value"></dev:param>
					<dev:param type="int" comment="the initial offset." name="offset"></dev:param>
					<dev:param type="int" comment="the length." name="size"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="ByteBuffer">
				<dev:params>
					<dev:param type="java.lang.String" comment="the initial value of the byte array" name="value"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="ByteBuffer">
				<dev:params>
					<dev:param type="char[]" comment="the initial value of the byte array" name="value"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="void" name="append">
				<dev:params>
					<dev:param type="int" comment="" name="b"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="append">
				<dev:params>
					<dev:param type="byte[]" comment="" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="append">
				<dev:params>
					<dev:param type="byte[]" comment="" name="value"></dev:param>
					<dev:param type="int" comment="" name="offset"></dev:param>
					<dev:param type="int" comment="" name="size"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="append">
				<dev:params>
					<dev:param type="java.lang.String" comment="" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="append">
				<dev:params>
					<dev:param type="char[]" comment="" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="byte" name="byteAt">
				<dev:params>
					<dev:param type="int" comment="" name="index"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="int" name="UByteAt">
				<dev:params>
					<dev:param type="int" comment="" name="index"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="char" name="charAt">
				<dev:params>
					<dev:param type="int" comment="" name="index"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="boolean" name="getBoolean">
				<dev:params>
					<dev:param type="int" comment="" name="index"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="char" name="getChar">
				<dev:params>
					<dev:param type="int" comment="" name="index"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="short" name="getShort">
				<dev:params>
					<dev:param type="int" comment="" name="index"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="int" name="getInt">
				<dev:params>
					<dev:param type="int" comment="" name="index"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="long" name="getLong">
				<dev:params>
					<dev:param type="int" comment="" name="index"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="float" name="getFloat">
				<dev:params>
					<dev:param type="int" comment="" name="index"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="double" name="getDouble">
				<dev:params>
					<dev:param type="int" comment="" name="index"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="java.lang.String" name="getString">
				<dev:params>
					<dev:param type="int" comment="" name="index"></dev:param>
					<dev:param type="int" comment="" name="length"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="byte[]" name="toByteArray"></dev:method>
			<dev:method visibility="public" returncomment="" type="char[]" name="toCharArray"></dev:method>
			<dev:method visibility="public" returncomment="String representation of a byte array" type="java.lang.String" name="toString"></dev:method>
			<dev:method visibility="public" returncomment="ASCII hex representation of a byte array" type="java.lang.String" name="toHex"></dev:method>
			<dev:method visibility="public" returncomment="the number of valid bytes in the byte array." type="int" name="length"></dev:method>
			<dev:method visibility="public" type="void" name="clear"></dev:method>
			<dev:method visibility="public" returncomment="the index of the first occurrence of the byte in the           byte sequence represented by this object, or           &lt;code&gt;-1&lt;/code&gt; if the byte does not occur." type="int" name="indexof">
				<dev:params>
					<dev:param type="int" comment="a byte." name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="int" name="indexof">
				<dev:params>
					<dev:param type="int" comment="" name="value"></dev:param>
					<dev:param type="int" comment="" name="fromIndex"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="int" name="indexof">
				<dev:params>
					<dev:param type="byte[]" comment="" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="int" name="indexof">
				<dev:params>
					<dev:param type="byte[]" comment="" name="value"></dev:param>
					<dev:param type="int" comment="" name="fromIndex"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="int" name="indexof">
				<dev:params>
					<dev:param type="char[]" comment="" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="int" name="indexof">
				<dev:params>
					<dev:param type="char[]" comment="" name="value"></dev:param>
					<dev:param type="int" comment="" name="fromIndex"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="if the string argument occurs as a substring within this           object, then the index of the first character of the first           such substring is returned; if it does not occur as a           substring, &lt;code&gt;-1&lt;/code&gt; is returned." type="int" name="indexof">
				<dev:params>
					<dev:param type="java.lang.String" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="int" name="indexof">
				<dev:params>
					<dev:param type="java.lang.String" comment="" name="value"></dev:param>
					<dev:param type="int" comment="" name="fromIndex"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="true if the character sequence represented by the argument is a prefix of the character sequence   represented by this byte buffer; false otherwise. Note also that true will be returned if the argument   is an empty string or is equal to this ByteBuffer object as determined by the equals(Object) method." type="boolean" name="startsWith">
				<dev:params>
					<dev:param type="java.lang.String" comment="the prefix" name="str"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="true if the character sequence represented by the argument is a suffix of the character sequence   represented by this object; false otherwise. Note that the result will be true if the argument is the   empty string or is equal to this ByteBuffer object as determined by the equals(Object) method." type="boolean" name="endsWith">
				<dev:params>
					<dev:param type="java.lang.String" comment="the suffix." name="str"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="An empty byte buffer." type="com.amx.duet.Panasonic.AWHE50.dr1_0_0.ByteBuffer" name="delete"></dev:method>
			<dev:method visibility="public" returncomment="This byte buffer." type="com.amx.duet.Panasonic.AWHE50.dr1_0_0.ByteBuffer" name="delete">
				<dev:params>
					<dev:param type="int" comment="The number of characters to remove from beginning to &lt;code&gt;len&lt;/code&gt;." name="len"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="This byte buffer." type="com.amx.duet.Panasonic.AWHE50.dr1_0_0.ByteBuffer" name="delete">
				<dev:params>
					<dev:param type="int" comment="The beginning index, inclusive." name="start"></dev:param>
					<dev:param type="int" comment="The ending index, exclusive." name="end"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="This byte buffer." type="com.amx.duet.Panasonic.AWHE50.dr1_0_0.ByteBuffer" name="replace">
				<dev:params>
					<dev:param type="int" comment="The beginning index, inclusive." name="start"></dev:param>
					<dev:param type="int" comment="The ending index, exclusive." name="end"></dev:param>
					<dev:param type="byte[]" comment="Byte[] that will replace previous contents." name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the newly replaced bytes" type="com.amx.duet.Panasonic.AWHE50.dr1_0_0.ByteBuffer" name="replace">
				<dev:params>
					<dev:param type="byte[]" comment="Pattern to remove from source." name="pattern"></dev:param>
					<dev:param type="byte[]" comment="Pattern to replace removed pattern with." name="replace"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the newly replaced bytes" type="com.amx.duet.Panasonic.AWHE50.dr1_0_0.ByteBuffer" name="replace">
				<dev:params>
					<dev:param type="int" comment="The beginning index, inclusive." name="start"></dev:param>
					<dev:param type="int" comment="The ending index, exclusive." name="end"></dev:param>
					<dev:param type="byte[]" comment="Pattern to remove from source." name="pattern"></dev:param>
					<dev:param type="byte[]" comment="Pattern to replace removed pattern with." name="replace"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the newly replaced bytes" type="com.amx.duet.Panasonic.AWHE50.dr1_0_0.ByteBuffer" name="replace">
				<dev:params>
					<dev:param type="byte[][]" comment="Patterns to remove from source." name="pattern"></dev:param>
					<dev:param type="byte[][]" comment="Patterns to replace removed patterns with." name="replace"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the newly replaced bytes" type="com.amx.duet.Panasonic.AWHE50.dr1_0_0.ByteBuffer" name="replace">
				<dev:params>
					<dev:param type="int" comment="The beginning index, inclusive." name="start"></dev:param>
					<dev:param type="int" comment="The ending index, exclusive." name="end"></dev:param>
					<dev:param type="byte[][]" comment="Patterns to remove from source." name="pattern"></dev:param>
					<dev:param type="byte[][]" comment="Patterns to replace removed patterns with." name="replace"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The new ByteBuffer." type="com.amx.duet.Panasonic.AWHE50.dr1_0_0.ByteBuffer" name="substring">
				<dev:params>
					<dev:param type="int" comment="The beginning index, inclusive." name="start"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The new ByteBuffer." type="com.amx.duet.Panasonic.AWHE50.dr1_0_0.ByteBuffer" name="substring">
				<dev:params>
					<dev:param type="int" comment="The beginning index, inclusive." name="start"></dev:param>
					<dev:param type="int" comment="The ending index, exclusive." name="end"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="empty string or the logged data." type="java.lang.String" name="logHex" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="data to log" name="message"></dev:param>
					<dev:param type="int" comment="number of bytes to log" name="length"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="empty string or the logged data." type="java.lang.String" name="logHex" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="data to log" name="message"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="byte[]" name="toBytes" static="true">
				<dev:params>
					<dev:param type="boolean" comment="" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="byte[]" name="toBytes" static="true">
				<dev:params>
					<dev:param type="byte" comment="" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="byte[]" name="toBytes" static="true">
				<dev:params>
					<dev:param type="char" comment="" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="byte[]" name="toBytes" static="true">
				<dev:params>
					<dev:param type="short" comment="" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="byte[]" name="toBytes" static="true">
				<dev:params>
					<dev:param type="int" comment="" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="byte[]" name="toBytes" static="true">
				<dev:params>
					<dev:param type="long" comment="" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="byte[]" name="toBytes" static="true">
				<dev:params>
					<dev:param type="float" comment="" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="byte[]" name="toBytes" static="true">
				<dev:params>
					<dev:param type="double" comment="" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="byte[]" name="toBytes" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="" name="value"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="com.amx.duet.Panasonic.AWHE50.dr1_0_0.Bits">
		<dev:methods>
			<dev:constructor visibility="public" name="Bits"></dev:constructor>
			<dev:method visibility="public" returncomment="" type="boolean" final="true" name="getBoolean" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="" name="b"></dev:param>
					<dev:param type="int" comment="" name="off"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="char" final="true" name="getChar" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="" name="b"></dev:param>
					<dev:param type="int" comment="" name="off"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="short" final="true" name="getShort" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="" name="b"></dev:param>
					<dev:param type="int" comment="" name="off"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="int" final="true" name="getInt" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="" name="b"></dev:param>
					<dev:param type="int" comment="" name="off"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="float" final="true" name="getFloat" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="" name="b"></dev:param>
					<dev:param type="int" comment="" name="off"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="long" final="true" name="getLong" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="" name="b"></dev:param>
					<dev:param type="int" comment="" name="off"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="double" final="true" name="getDouble" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="" name="b"></dev:param>
					<dev:param type="int" comment="" name="off"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" final="true" name="putBoolean" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="" name="b"></dev:param>
					<dev:param type="int" comment="" name="off"></dev:param>
					<dev:param type="boolean" comment="" name="val"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" final="true" name="putChar" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="" name="b"></dev:param>
					<dev:param type="int" comment="" name="off"></dev:param>
					<dev:param type="char" comment="" name="val"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" final="true" name="putShort" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="" name="b"></dev:param>
					<dev:param type="int" comment="" name="off"></dev:param>
					<dev:param type="short" comment="" name="val"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" final="true" name="putInt" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="" name="b"></dev:param>
					<dev:param type="int" comment="" name="off"></dev:param>
					<dev:param type="int" comment="" name="val"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" final="true" name="putFloat" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="" name="b"></dev:param>
					<dev:param type="int" comment="" name="off"></dev:param>
					<dev:param type="float" comment="" name="val"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" final="true" name="putLong" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="" name="b"></dev:param>
					<dev:param type="int" comment="" name="off"></dev:param>
					<dev:param type="long" comment="" name="val"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" final="true" name="putDouble" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="" name="b"></dev:param>
					<dev:param type="int" comment="" name="off"></dev:param>
					<dev:param type="double" comment="" name="val"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="true if the bit is set; false otherwise." type="boolean" final="true" name="isBitSet" static="true">
				<dev:params>
					<dev:param type="int" comment="8 bit value" name="value"></dev:param>
					<dev:param type="int" comment="0-7 (bytes 1-8 respectively)" name="pos"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the byte array in reverse order." type="byte[]" final="true" name="flipBytes" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="byte array to flip." name="b"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="com.amx.duet.devicesdk.Camera" abstract="true" serializable="true" name="com.amx.duet.impl.Panasonic.AWHE50.dr1_0_0.SuperCamera">
		<dev:extends>
			<dev:extend name="com.amx.duet.Panasonic.AWHE50.dr1_0_0.ICommListener"></dev:extend>
		</dev:extends>
		<dev:fields>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="1" const="1" name="PRIORITY_LOW" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="2" const="2" name="PRIORITY_MID" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="3" const="3" name="PRIORITY_HIGH" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" name="Priority" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="SuperCamera"></dev:constructor>
			<dev:constructor visibility="public" name="SuperCamera">
				<dev:params>
					<dev:param type="org.osgi.framework.BundleContext" comment="" name="bctxt"></dev:param>
					<dev:param type="com.amx.duet.da.NetLinxDevice" comment="" name="nd"></dev:param>
					<dev:param type="java.util.Properties" comment="" name="props"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="void" name="setCommPort"></dev:method>
			<dev:method visibility="public" returncomment="String" type="java.lang.String" name="getFWVersion"></dev:method>
			<dev:method visibility="public" type="void" name="setFWVersion">
				<dev:params>
					<dev:param type="java.lang.String" comment="" name="version"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="updateFWVersion">
				<dev:params>
					<dev:param type="int" name="locale"></dev:param>
					<dev:param type="java.lang.String" name="version"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="handleCommandEvent">
				<dev:params>
					<dev:param type="com.amx.duet.core.master.netlinx.Event" name="evt"></dev:param>
					<dev:param type="java.lang.String" name="cmd"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="handleErrorEvent">
				<dev:params>
					<dev:param type="int" name="error"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="boolean" name="isDeviceOnLine"></dev:method>
			<dev:method visibility="public" type="boolean" name="isDataInitialized"></dev:method>
			<dev:method visibility="public" type="void" name="setDeviceOnLine">
				<dev:params>
					<dev:param type="boolean" comment="True for ON; false for OFF" name="state"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setDataInitialized">
				<dev:params>
					<dev:param type="boolean" comment="True for ON; false for OFF" name="state"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="enQueue">
				<dev:params>
					<dev:param type="com.amx.duet.Panasonic.AWHE50.dr1_0_0.ICommListener.Message" name="msg"></dev:param>
					<dev:param type="int" name="priority"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="enQueue">
				<dev:params>
					<dev:param type="com.amx.duet.Panasonic.AWHE50.dr1_0_0.ICommListener.Message" comment="" name="msg"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="enQueue">
				<dev:params>
					<dev:param type="java.lang.String" comment="" name="msg"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="enQueue">
				<dev:params>
					<dev:param type="byte[]" comment="" name="msg"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="enQueue">
				<dev:params>
					<dev:param type="byte[]" comment="" name="msg"></dev:param>
					<dev:param type="int" comment="" name="priority"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="deQueue"></dev:method>
			<dev:method visibility="public" returncomment="" type="boolean" name="isDequeOnReply"></dev:method>
			<dev:method visibility="public" type="void" name="pollEvent"></dev:method>
			<dev:method visibility="public" type="void" name="heartbeatEvent"></dev:method>
			<dev:method visibility="public" type="void" name="handleIncomingData">
				<dev:params>
					<dev:param type="int" name="bytesReceived"></dev:param>
					<dev:param type="byte[]" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="handleOnlineEvent"></dev:method>
			<dev:method visibility="public" type="void" name="handleOfflineEvent"></dev:method>
			<dev:method visibility="public" type="void" name="parseResponse">
				<dev:params>
					<dev:param type="com.amx.duet.Panasonic.AWHE50.dr1_0_0.ByteBuffer" name="response"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="refresh"></dev:method>
			<dev:method visibility="public" type="void" name="reinitialize"></dev:method>
			<dev:method visibility="public" returncomment="String" type="java.lang.String" name="getProperty">
				<dev:params>
					<dev:param type="java.lang.String" comment="String" name="key"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setProperty">
				<dev:params>
					<dev:param type="java.lang.String" comment="String" name="key"></dev:param>
					<dev:param type="java.lang.String" comment="String" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="dispose"></dev:method>
			<dev:method visibility="public" type="void" name="passThru">
				<dev:params>
					<dev:param type="byte[]" comment="byte[]" name="buffer"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The adjusted device level in the panel range." type="double" final="true" name="adjustLevel">
				<dev:params>
					<dev:param type="int" comment="The current DeviceSDK (panel) level value." name="panelLevel"></dev:param>
					<dev:param type="double" comment="The protocol command parameter min value" name="protocolParameter_min"></dev:param>
					<dev:param type="double" comment="The protocol command parameter max value" name="protocolParameter_max"></dev:param>
					<dev:param type="double" comment="The protocol command parameter step value" name="protocolParameter_step"></dev:param>
					<dev:param type="int" comment="The direction to adjust the level by." name="offset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setDeQueueTime">
				<dev:params>
					<dev:param type="long" comment="in milliseconds." name="time"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="startPolling"></dev:method>
			<dev:method visibility="public" type="boolean" name="isPolling"></dev:method>
			<dev:method visibility="public" type="void" name="stopPolling"></dev:method>
		</dev:methods>
		<dev:class superclass="java.lang.Object" name="com.amx.duet.impl.Panasonic.AWHE50.dr1_0_0.SuperCamera.CheckPoint">
			<dev:fields>
				<dev:field visibility="public" fulltype="int" type="int" name="responseID"></dev:field>
				<dev:field visibility="public" fulltype="com.amx.duet.Panasonic.AWHE50.dr1_0_0.ByteBuffer" type="ByteBuffer" name="header"></dev:field>
				<dev:field visibility="public" fulltype="com.amx.duet.Panasonic.AWHE50.dr1_0_0.ByteBuffer" type="ByteBuffer" name="footer"></dev:field>
			</dev:fields>
		</dev:class>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="com.amx.duet.impl.Panasonic.AWHE50.dr1_0_0.SuperCamera.CheckPoint">
		<dev:fields>
			<dev:field visibility="public" fulltype="int" type="int" name="responseID"></dev:field>
			<dev:field visibility="public" fulltype="com.amx.duet.Panasonic.AWHE50.dr1_0_0.ByteBuffer" type="ByteBuffer" name="header"></dev:field>
			<dev:field visibility="public" fulltype="com.amx.duet.Panasonic.AWHE50.dr1_0_0.ByteBuffer" type="ByteBuffer" name="footer"></dev:field>
		</dev:fields>
	</dev:class>
	<dev:class superclass="com.amx.duet.devicesdk.component.MenuComponentImpl" name="com.amx.duet.impl.Panasonic.AWHE50.dr1_0_0.PanasonicMenuComponentImpl">
		<dev:methods>
			<dev:constructor visibility="public" name="PanasonicMenuComponentImpl">
				<dev:params>
					<dev:param type="com.amx.duet.devicesdk.component.IMenuComponent" name="abstraction"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="PanasonicMenuComponentImpl">
				<dev:params>
					<dev:param type="com.amx.duet.devicesdk.component.IMenuComponent" name="caller"></dev:param>
					<dev:param type="int" name="index"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="void" name="moveMenuCursor">
				<dev:params>
					<dev:param type="com.amx.duet.devicesdk.type.Navigation" comment="[] p=com.amx.duet.devicesdk.type.Navigation[UP,DOWN]" name="direction"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="pressMenuButton">
				<dev:params>
					<dev:param type="com.amx.duet.devicesdk.type.Button" comment="[] p=com.amx.duet.devicesdk.type.Button[CANCEL,EXIT,ENTER,RETURN,CLEAR]  p=com.amx.duet.devicesdk.type.ExtendedButton[MENU,EXIT]" name="button"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="selectMenuItem"></dev:method>
			<dev:method visibility="public" type="void" name="dispose"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="com.amx.duet.devicesdk.component.LampComponentImpl" name="com.amx.duet.impl.Panasonic.AWHE50.dr1_0_0.PanasonicLampComponentImpl">
		<dev:fields>
			<dev:field visibility="public" fulltype="com.amx.duet.impl.Panasonic.AWHE50.dr1_0_0.PanasonicAWHE50Command" type="PanasonicAWHE50Command" name="command"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="PanasonicLampComponentImpl">
				<dev:params>
					<dev:param type="com.amx.duet.devicesdk.component.ILampComponent" comment="ILampComponent - handle to outer abstraction using the impl" name="abstraction"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="PanasonicLampComponentImpl">
				<dev:params>
					<dev:param type="com.amx.duet.devicesdk.component.ILampComponent" comment="ILampComponent - handle to calling device" name="caller"></dev:param>
					<dev:param type="int" comment="int int - index of this component" name="index"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="void" name="cycleLampPower"></dev:method>
			<dev:method visibility="public" type="void" name="onTimerExpired"></dev:method>
			<dev:method visibility="public" type="void" name="reinitialize"></dev:method>
			<dev:method visibility="public" type="void" name="setCoolDownTime">
				<dev:params>
					<dev:param type="int" comment="[130..500]         int int - seconds" name="time"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setCounterNotificationOn">
				<dev:params>
					<dev:param type="boolean" comment="boolean boolean" name="state"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setLampPower">
				<dev:params>
					<dev:param type="com.amx.duet.devicesdk.type.PowerState" comment="[] p=com.amx.duet.devicesdk.type.PowerState[OFF,ON]  p=com.amx.duet.devicesdk.type.LampPowerStatus[WARMING_UP,COOLING_DOWN]" name="ps"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setWarmUpTime">
				<dev:params>
					<dev:param type="int" comment="[40..500]         int int - seconds" name="time"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="startWarmingUpOrCoolingDown">
				<dev:params>
					<dev:param type="boolean" comment="boolean boolean" name="cooldown"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="dispose"></dev:method>
			<dev:method visibility="public" type="void" name="updateWarmingUpCoolingDown">
				<dev:params>
					<dev:param type="boolean" comment="boolean" name="isWarming"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="com.amx.duet.devicesdk.component.CameraComponentImpl" name="com.amx.duet.impl.Panasonic.AWHE50.dr1_0_0.PanasonicCameraComponentImpl">
		<dev:extends>
			<dev:extend name="com.amx.duet.Panasonic.AWHE50.dr1_0_0.RampListener"></dev:extend>
		</dev:extends>
		<dev:fields>
			<dev:field visibility="public" fulltype="com.amx.duet.impl.Panasonic.AWHE50.dr1_0_0.PanasonicAWHE50Command" type="PanasonicAWHE50Command" name="command"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="PanasonicCameraComponentImpl">
				<dev:params>
					<dev:param type="com.amx.duet.devicesdk.component.ICameraComponent" comment="ICameraComponent - handle to outer abstraction using the impl" name="abstraction"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="PanasonicCameraComponentImpl">
				<dev:params>
					<dev:param type="com.amx.duet.devicesdk.component.ICameraComponent" comment="ICameraComponent - handle to calling device" name="caller"></dev:param>
					<dev:param type="int" comment="int int - index of this component" name="index"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="void" name="reinitialize"></dev:method>
			<dev:method visibility="public" type="void" name="refresh"></dev:method>
			<dev:method visibility="public" type="void" name="setCameraPreset">
				<dev:params>
					<dev:param type="int" comment="[1..32]" name="preset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="saveCameraPreset">
				<dev:params>
					<dev:param type="int" comment="[1..32]" name="preset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="cycleCameraPreset"></dev:method>
			<dev:method visibility="public" type="void" name="setIrisSpeed">
				<dev:params>
					<dev:param type="int" comment="[0..255]" name="speed"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setAutoIrisOn">
				<dev:params>
					<dev:param type="boolean" name="state"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setIris">
				<dev:params>
					<dev:param type="int" comment="[0..255]" name="iris"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setIrisRamp">
				<dev:params>
					<dev:param type="com.amx.duet.devicesdk.type.IrisRamp" name="ri"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="handleRampEvent">
				<dev:params>
					<dev:param type="com.amx.duet.Panasonic.AWHE50.dr1_0_0.Ramp" comment="Ramp" name="ramp"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setAutoFocusOn">
				<dev:params>
					<dev:param type="boolean" comment="boolean boolean - auto-focus state" name="state"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setFocus">
				<dev:params>
					<dev:param type="int" name="focus"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setFocusRamp">
				<dev:params>
					<dev:param type="com.amx.duet.devicesdk.type.FocusRamp" comment="[] p=com.amx.duet.devicesdk.type.FocusRamp[FAR,NEAR,STOP]" name="rf"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setFocusSpeed">
				<dev:params>
					<dev:param type="int" comment="[0..255]" name="speed"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setZoom">
				<dev:params>
					<dev:param type="int" comment="[0..255]" name="zoom"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setZoomRamp">
				<dev:params>
					<dev:param type="com.amx.duet.devicesdk.type.ZoomRamp" name="rz"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setZoomSpeed">
				<dev:params>
					<dev:param type="int" comment="[0..255]" name="speed"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setPanSpeed">
				<dev:params>
					<dev:param type="int" comment="[0..255]" name="speed"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setPanRamp">
				<dev:params>
					<dev:param type="com.amx.duet.devicesdk.type.PanRamp" name="rp"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setPan">
				<dev:params>
					<dev:param type="int" name="pan"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setDevicePanLevel">
				<dev:params>
					<dev:param type="int" name="pan"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="int" name="getDevicePanLevel"></dev:method>
			<dev:method visibility="public" type="void" name="setTilt">
				<dev:params>
					<dev:param type="int" name="tilt"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="int" name="getDeviceTiltLevel"></dev:method>
			<dev:method visibility="public" type="void" name="setDeviceTiltLevel">
				<dev:params>
					<dev:param type="int" name="tilt"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setTiltSpeed">
				<dev:params>
					<dev:param type="int" comment="[0..255]" name="speed"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setTiltRamp">
				<dev:params>
					<dev:param type="com.amx.duet.devicesdk.type.TiltRamp" name="rp"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="dispose"></dev:method>
			<dev:method visibility="public" type="void" name="updatePan">
				<dev:params>
					<dev:param type="int" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="updateTilt">
				<dev:params>
					<dev:param type="int" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setPanTilt">
				<dev:params>
					<dev:param type="int" name="pan"></dev:param>
					<dev:param type="int" name="tilt"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="processDevicePanEvent"></dev:method>
			<dev:method visibility="public" type="void" name="processDeviceTiltEvent"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="com.amx.duet.impl.Panasonic.AWHE50.dr1_0_0.PanasonicAWHE50Response">
		<dev:methods>
			<dev:constructor visibility="public" name="PanasonicAWHE50Response">
				<dev:params>
					<dev:param type="com.amx.duet.impl.Panasonic.AWHE50.dr1_0_0.PanasonicCamera" comment="PanasonicCamera" name="module"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="void" name="parseResponse">
				<dev:params>
					<dev:param type="com.amx.duet.Panasonic.AWHE50.dr1_0_0.ByteBuffer" comment="ByteBuffer" name="response"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="com.amx.duet.impl.Panasonic.AWHE50.dr1_0_0.PanasonicAWHE50Command">
		<dev:methods>
			<dev:constructor visibility="public" name="PanasonicAWHE50Command">
				<dev:params>
					<dev:param type="com.amx.duet.impl.Panasonic.AWHE50.dr1_0_0.PanasonicCamera" comment="PanasonicCamera" name="module"></dev:param>
				</dev:params>
			</dev:constructor>
		</dev:methods>
	</dev:class>
	<dev:class superclass="com.amx.duet.devicesdk.base.TypeSafeEnumBase" name="com.amx.duet.impl.Panasonic.AWHE50.dr1_0_0.PanasonicAdvancedEventType">
		<dev:fields>
			<dev:field visibility="public" fulltype="com.amx.duet.impl.Panasonic.AWHE50.dr1_0_0.PanasonicAdvancedEventType" type="PanasonicAdvancedEventType" final="true" name="PAN_LEVEL" static="true"></dev:field>
			<dev:field visibility="public" fulltype="com.amx.duet.impl.Panasonic.AWHE50.dr1_0_0.PanasonicAdvancedEventType" type="PanasonicAdvancedEventType" final="true" name="TILT_LEVEL" static="true"></dev:field>
			<dev:field visibility="public" fulltype="com.amx.duet.impl.Panasonic.AWHE50.dr1_0_0.PanasonicAdvancedEventType" type="PanasonicAdvancedEventType" final="true" name="ZOOM_LEVEL" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.util.List" type="List" final="true" name="VALUES" static="true"></dev:field>
		</dev:fields>
	</dev:class>
	<dev:class abstract="true" name="com.amx.duet.impl.Panasonic.AWHE50.dr1_0_0.IPanasonicCamera"></dev:class>
	<dev:class superclass="com.amx.duet.devicesdk.base.ModuleActivator" name="com.amx.duet.impl.Panasonic.AWHE50.dr1_0_0.Activator"></dev:class>
	<dev:class abstract="true" name="com.amx.duet.tools.Panasonic.AWHE50.net.http.dr1_0_0.IHttpPostWrapper"></dev:class>
	<dev:class superclass="java.lang.Object" name="com.amx.duet.tools.Panasonic.AWHE50.net.http.dr1_0_0.HttpPostWrapper">
		<dev:fields>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="0" const="0" name="HTTP_POST_SUCCESS" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="1" const="1" name="INVALID_URL" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="2" const="2" name="HTTP_CONNECTION_FAILED" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="3" const="3" name="HTTP_OUTPUT_STREAM_FAILED" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="4" const="4" name="HTTP_INPUT_STREAM_FAILED" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="5" const="5" name="HTTP_CONNECTION_ALREADY_CONNECTED" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="6" const="6" name="HTTP_CONNECTION_GENERAL_EXCEPTION" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="7" const="7" name="HTTP_CONNECTION_DISPOSED" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="HttpPostWrapper">
				<dev:params>
					<dev:param type="com.amx.duet.tools.Panasonic.AWHE50.net.http.dr1_0_0.IHttpPostWrapper" name="caller"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="void" name="doPost">
				<dev:params>
					<dev:param type="java.lang.String" name="url"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="com.amx.duet.util.regexp.Panasonic.AWHE50.dr1_0_0.StringCharacterIterator">
		<dev:extends>
			<dev:extend name="com.amx.duet.util.regexp.Panasonic.AWHE50.dr1_0_0.CharacterIterator"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="StringCharacterIterator">
				<dev:params>
					<dev:param type="java.lang.String" comment="- encapsulated String" name="src"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="a substring" type="java.lang.String" name="substring">
				<dev:params>
					<dev:param type="int" name="beginIndex"></dev:param>
					<dev:param type="int" name="endIndex"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="a substring" type="java.lang.String" name="substring">
				<dev:params>
					<dev:param type="int" name="beginIndex"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="a character at the specified position." type="char" name="charAt">
				<dev:params>
					<dev:param type="int" name="pos"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; iff if the specified index is after the end of the character stream" type="boolean" name="isEnd">
				<dev:params>
					<dev:param type="int" name="pos"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.RuntimeException" serializable="true" name="com.amx.duet.util.regexp.Panasonic.AWHE50.dr1_0_0.RESyntaxException"></dev:class>
	<dev:class superclass="java.lang.Object" serializable="true" name="com.amx.duet.util.regexp.Panasonic.AWHE50.dr1_0_0.REProgram">
		<dev:extends>
			<dev:extend name="java.io.Serializable"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="REProgram">
				<dev:params>
					<dev:param type="char[]" comment="Character array with RE opcode instructions in it" name="instruction"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="REProgram">
				<dev:params>
					<dev:param type="int" comment="Count of parens in the program" name="parens"></dev:param>
					<dev:param type="char[]" comment="Character array with RE opcode instructions in it" name="instruction"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="REProgram">
				<dev:params>
					<dev:param type="char[]" comment="Character array with RE opcode instructions in it" name="instruction"></dev:param>
					<dev:param type="int" comment="Amount of instruction array in use" name="lenInstruction"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="A copy of the current compiled RE program" type="char[]" name="getInstructions"></dev:method>
			<dev:method visibility="public" type="void" name="setInstructions">
				<dev:params>
					<dev:param type="char[]" comment="Program instruction buffer" name="instruction"></dev:param>
					<dev:param type="int" comment="Length of instruction buffer in use" name="lenInstruction"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="A copy of the prefix of current compiled RE program" type="char[]" name="getPrefix"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="com.amx.duet.util.regexp.Panasonic.AWHE50.dr1_0_0.RECompiler">
		<dev:methods>
			<dev:constructor visibility="public" name="RECompiler"></dev:constructor>
			<dev:method visibility="public" returncomment="A compiled regular expression program." type="com.amx.duet.util.regexp.Panasonic.AWHE50.dr1_0_0.REProgram" name="compile">
				<dev:params>
					<dev:param type="java.lang.String" comment="Regular expression pattern to compile (see RECompiler class  for details)." name="pattern"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" serializable="true" name="com.amx.duet.util.regexp.Panasonic.AWHE50.dr1_0_0.RE">
		<dev:extends>
			<dev:extend name="java.io.Serializable"></dev:extend>
		</dev:extends>
		<dev:fields>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="0" const="0" name="MATCH_NORMAL" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="1" const="1" name="MATCH_CASEINDEPENDENT" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="2" const="2" name="MATCH_MULTILINE" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="4" const="4" name="MATCH_SINGLELINE" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="0" const="0" name="REPLACE_ALL" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="1" const="1" name="REPLACE_FIRSTONLY" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="2" const="2" name="REPLACE_BACKREFERENCES" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="RE">
				<dev:params>
					<dev:param type="java.lang.String" comment="The regular expression pattern to compile." name="pattern"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="RE">
				<dev:params>
					<dev:param type="java.lang.String" comment="The regular expression pattern to compile." name="pattern"></dev:param>
					<dev:param type="int" comment="The matching style" name="matchFlags"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="RE">
				<dev:params>
					<dev:param type="com.amx.duet.util.regexp.Panasonic.AWHE50.dr1_0_0.REProgram" comment="Compiled regular expression program (see RECompiler and/or recompile)" name="program"></dev:param>
					<dev:param type="int" comment="One or more of the RE match behaviour flags (RE.MATCH_*):   &lt;pre&gt;    MATCH_NORMAL              // Normal (case-sensitive) matching    MATCH_CASEINDEPENDENT     // Case folded comparisons    MATCH_MULTILINE           // Newline matches as BOL/EOL  &lt;/pre&gt;" name="matchFlags"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="RE">
				<dev:params>
					<dev:param type="com.amx.duet.util.regexp.Panasonic.AWHE50.dr1_0_0.REProgram" comment="Compiled regular expression program" name="program"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="RE"></dev:constructor>
			<dev:method visibility="public" returncomment="The full regular expression" type="java.lang.String" name="simplePatternToFullRegularExpression" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="The pattern to convert" name="pattern"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setMatchFlags">
				<dev:params>
					<dev:param type="int" comment="One or more of the RE match behaviour flags (RE.MATCH_*):   &lt;pre&gt;    MATCH_NORMAL              // Normal (case-sensitive) matching    MATCH_CASEINDEPENDENT     // Case folded comparisons    MATCH_MULTILINE           // Newline matches as BOL/EOL  &lt;/pre&gt;" name="matchFlags"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="Current match behaviour flags (RE.MATCH_*).   &lt;pre&gt;    MATCH_NORMAL              // Normal (case-sensitive) matching    MATCH_CASEINDEPENDENT     // Case folded comparisons    MATCH_MULTILINE           // Newline matches as BOL/EOL  &lt;/pre&gt;" type="int" name="getMatchFlags"></dev:method>
			<dev:method visibility="public" type="void" name="setProgram">
				<dev:params>
					<dev:param type="com.amx.duet.util.regexp.Panasonic.AWHE50.dr1_0_0.REProgram" comment="Regular expression program compiled by RECompiler." name="program"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="Regular expression program" type="com.amx.duet.util.regexp.Panasonic.AWHE50.dr1_0_0.REProgram" name="getProgram"></dev:method>
			<dev:method visibility="public" returncomment="Number of available parenthesized subexpressions" type="int" name="getParenCount"></dev:method>
			<dev:method visibility="public" returncomment="String" type="java.lang.String" name="getParen">
				<dev:params>
					<dev:param type="int" comment="Nesting level of subexpression" name="which"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="String index" type="int" final="true" name="getParenStart">
				<dev:params>
					<dev:param type="int" comment="Nesting level of subexpression" name="which"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="String index" type="int" final="true" name="getParenEnd">
				<dev:params>
					<dev:param type="int" comment="Nesting level of subexpression" name="which"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="Number of characters in the parenthesized subexpression" type="int" final="true" name="getParenLength">
				<dev:params>
					<dev:param type="int" comment="Nesting level of subexpression" name="which"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="True if string matched" type="boolean" name="match">
				<dev:params>
					<dev:param type="java.lang.String" comment="String to match against" name="search"></dev:param>
					<dev:param type="int" comment="Index to start searching at" name="i"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="True if string matched" type="boolean" name="match">
				<dev:params>
					<dev:param type="com.amx.duet.util.regexp.Panasonic.AWHE50.dr1_0_0.CharacterIterator" comment="String to match against" name="search"></dev:param>
					<dev:param type="int" comment="Index to start searching at" name="i"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="True if string matched" type="boolean" name="match">
				<dev:params>
					<dev:param type="java.lang.String" comment="String to match against" name="search"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="Array of strings" type="java.lang.String[]" name="split">
				<dev:params>
					<dev:param type="java.lang.String" comment="String to split on this regular exression" name="s"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The string substituteIn with zero or more occurrences of the current  regular expression replaced with the substitution String (if this regular  expression object doesn&apos;t match at any position, the original String is returned  unchanged)." type="java.lang.String" name="subst">
				<dev:params>
					<dev:param type="java.lang.String" comment="String to substitute within" name="substituteIn"></dev:param>
					<dev:param type="java.lang.String" comment="String to substitute for all matches of this regular expression." name="substitution"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The string substituteIn with zero or more occurrences of the current  regular expression replaced with the substitution String (if this regular  expression object doesn&apos;t match at any position, the original String is returned  unchanged)." type="java.lang.String" name="subst">
				<dev:params>
					<dev:param type="java.lang.String" comment="String to substitute within" name="substituteIn"></dev:param>
					<dev:param type="java.lang.String" comment="String to substitute for matches of this regular expression" name="substitution"></dev:param>
					<dev:param type="int" comment="One or more bitwise flags from REPLACE_*.  If the REPLACE_FIRSTONLY  flag bit is set, only the first occurrence of this regular expression is replaced.  If the bit is not set (REPLACE_ALL), all occurrences of this pattern will be  replaced. If the flag REPLACE_BACKREFERENCES is set, all backreferences will  be processed." name="flags"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="Array of Strings whose toString() value matches this regular expression." type="java.lang.String[]" name="grep">
				<dev:params>
					<dev:param type="java.lang.Object[]" comment="Array of Objects to search" name="search"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class abstract="true" name="com.amx.duet.util.regexp.Panasonic.AWHE50.dr1_0_0.CharacterIterator"></dev:class>
	<dev:class superclass="java.lang.Object" name="com.amx.duet.util.tools.Panasonic.AWHE50.dr1_0_0.StringUtil">
		<dev:methods>
			<dev:constructor visibility="public" name="StringUtil"></dev:constructor>
			<dev:method visibility="public" returncomment="the newly replaced string" type="java.lang.String" final="true" name="Replace" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="String to be manipulated" name="str"></dev:param>
					<dev:param type="java.lang.String" comment="Pattern to remove from source string" name="pattern"></dev:param>
					<dev:param type="java.lang.String" comment="Pattern to replace removed pattern with" name="replace"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the newly replaced string" type="java.lang.String" final="true" name="ReplaceFirst" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="String to be manipulated" name="str"></dev:param>
					<dev:param type="java.lang.String" comment="Pattern to remove from source string" name="pattern"></dev:param>
					<dev:param type="java.lang.String" comment="Pattern to replace removed pattern with" name="replace"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="String that no longer contains pattern" type="java.lang.String" final="true" name="RemoveAll" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="String to be manipulated" name="str"></dev:param>
					<dev:param type="java.lang.String" comment="Pattern to remove from source string" name="pattern"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="String that no longer contains pattern" type="java.lang.String" final="true" name="RemoveFirst" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="Source string to be manipulated" name="str"></dev:param>
					<dev:param type="java.lang.String" comment="Pattern to remove from source string" name="pattern"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="String that no longer contains pattern" type="java.lang.String" final="true" name="Remove" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="Source string to be manipulated" name="str"></dev:param>
					<dev:param type="java.lang.String" comment="Pattern to remove from source string" name="pattern"></dev:param>
					<dev:param type="int" comment="offset value" name="start"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="A String containing a copy of the first count characters from the string." type="java.lang.String" final="true" name="Left" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the string from which to extract the characters." name="str"></dev:param>
					<dev:param type="int" comment="the number of character to copy from the beginning of the string." name="count"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="A String containing a copy of the last count characters from the string." type="java.lang.String" final="true" name="Right" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the string from which to extract the characters." name="str"></dev:param>
					<dev:param type="int" comment="the number of character to copy from the end of the string." name="count"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="A String containing a copy of the specified characters from the string." type="java.lang.String" final="true" name="Mid" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the string from which to extract the characters." name="str"></dev:param>
					<dev:param type="int" comment="the starting location in the string." name="start"></dev:param>
					<dev:param type="int" comment="the number of characters to extract." name="count"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="Only the character that were not removed from the string" type="java.lang.String" final="true" name="Sub" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="Source string to be manipulated" name="str"></dev:param>
					<dev:param type="int" comment="the number of characters to remove" name="count"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="An integer representing the character location of pattern in the string. If the character   sequence is found at the beginning of the string, this method returns 0. Any error condition   returns -1." type="int" final="true" name="Find" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the string of characters to search." name="str"></dev:param>
					<dev:param type="java.lang.String" comment="the sequence of characters to search for" name="pattern"></dev:param>
					<dev:param type="int" comment="the starting character position for the search" name="start"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="An integer representing the character location of pattern in the string. If the character   sequence is found at the beginning of the string, this method returns 0. Any error condition   returns -1." type="int" final="true" name="Find" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the string of characters to search." name="str"></dev:param>
					<dev:param type="java.lang.String" comment="the sequence of characters to search for" name="pattern"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="True if the pattern matches the beginning of the string." type="boolean" final="true" name="StartsWith" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the string of characters to search." name="str"></dev:param>
					<dev:param type="java.lang.String" comment="the sequence of characters to search for" name="pattern"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="True if the pattern matches the ending of the string." type="boolean" final="true" name="EndsWith" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the string of characters to search." name="str"></dev:param>
					<dev:param type="java.lang.String" comment="the sequence of characters to search for" name="pattern"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The resultant byte array." type="byte[]" final="true" name="GetBytes" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="" name="str"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="a newly allocated character array whose length is the length of this string and whose contents are initialized to contain the character sequence represented by this string." type="char[]" final="true" name="GetChars" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="" name="str"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the String, converted to uppercase." type="java.lang.String" final="true" name="Upper" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="" name="str"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the String, converted to lowercase." type="java.lang.String" final="true" name="Lower" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="" name="str"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the length of the sequence of characters represented by this object." type="int" final="true" name="Length" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="" name="str"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="A copy of this string with leading and trailing white space removed, or this string if it has no leading or trailing white space." type="java.lang.String" final="true" name="Trim" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="" name="str"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="string that represents the concatenation of this object&apos;s characters followed by the string argument&apos;s characters." type="java.lang.String" final="true" name="Concat" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="" name="str"></dev:param>
					<dev:param type="java.lang.String" comment="the String that is concatenated to the end of this String." name="expr1"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="char" final="true" name="GetCharAt" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="" name="str"></dev:param>
					<dev:param type="int" comment="" name="index"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="String representation of a numeric value." type="java.lang.String" final="true" name="ToString" static="true">
				<dev:params>
					<dev:param type="double" comment="Expression to convert." name="expr1"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="Numeric representation of a String value." type="double" final="true" name="FromString" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="Expression to convert." name="expr1"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="java.lang.String" final="true" name="ToString" static="true">
				<dev:params>
					<dev:param type="double[]" comment="" name="values"></dev:param>
					<dev:param type="java.lang.String" comment="" name="delimiter"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="java.lang.String" final="true" name="ToString" static="true">
				<dev:params>
					<dev:param type="long[]" comment="" name="values"></dev:param>
					<dev:param type="java.lang.String" comment="" name="delimiter"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="" type="double[]" final="true" name="FromString" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="" name="expr1"></dev:param>
					<dev:param type="java.lang.String" comment="" name="delimiter"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="an array of strings" type="java.lang.String[]" final="true" name="parse" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="data string to be parsed" name="data"></dev:param>
					<dev:param type="java.lang.String" comment="string delimiter to parse the data by" name="delim"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="com.amx.duet.util.tools.Panasonic.AWHE50.dr1_0_0.Math">
		<dev:methods>
			<dev:constructor visibility="public" name="Math"></dev:constructor>
			<dev:method visibility="public" returncomment="true if the bit is set; false otherwise." type="boolean" final="true" name="isBitSet" static="true">
				<dev:params>
					<dev:param type="int" comment="8 bit value" name="value"></dev:param>
					<dev:param type="int" comment="0-7 (bytes 1-8 respectively)" name="pos"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="incremented value." type="double" final="true" name="inc" static="true">
				<dev:params>
					<dev:param type="double" comment="Expression to be incremented." name="expr1"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="decremented value." type="double" final="true" name="dec" static="true">
				<dev:params>
					<dev:param type="double" comment="Expression to be decremented." name="expr1"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="Added value." type="double" final="true" name="add" static="true">
				<dev:params>
					<dev:param type="double" comment="" name="expr1"></dev:param>
					<dev:param type="double" comment="" name="expr2"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="Subtracted value." type="double" final="true" name="sub" static="true">
				<dev:params>
					<dev:param type="double" comment="" name="expr1"></dev:param>
					<dev:param type="double" comment="" name="expr2"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="Multiplied value." type="double" final="true" name="mult" static="true">
				<dev:params>
					<dev:param type="double" comment="" name="expr1"></dev:param>
					<dev:param type="double" comment="" name="expr2"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="Divided value." type="double" final="true" name="div" static="true">
				<dev:params>
					<dev:param type="double" comment="" name="expr1"></dev:param>
					<dev:param type="double" comment="" name="expr2"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the absolute value of the argument." type="double" final="true" name="abs" static="true">
				<dev:params>
					<dev:param type="double" comment="he argument whose absolute value is to be determined" name="expr1"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the value raised exponentially by the second argument." type="double" final="true" name="pow" static="true">
				<dev:params>
					<dev:param type="double" comment="" name="expr1"></dev:param>
					<dev:param type="double" comment="" name="expr2"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the value of the argument rounded to the nearest long value." type="long" final="true" name="round" static="true">
				<dev:params>
					<dev:param type="double" comment="" name="expr1"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the smaller of a and b." type="double" final="true" name="min" static="true">
				<dev:params>
					<dev:param type="double" comment="" name="expr1"></dev:param>
					<dev:param type="double" comment="" name="expr2"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the larger of a and b." type="double" final="true" name="max" static="true">
				<dev:params>
					<dev:param type="double" comment="" name="expr1"></dev:param>
					<dev:param type="double" comment="" name="expr2"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the largest (closest to positive infinity) floating-point value that less than or equal to the argument and is equal to a mathematical integer." type="double" final="true" name="floor" static="true">
				<dev:params>
					<dev:param type="double" comment="" name="expr1"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the smallest (closest to negative infinity) floating-point value that is greater than or equal to the argument and is equal to a mathematical integer." type="double" final="true" name="ceil" static="true">
				<dev:params>
					<dev:param type="double" comment="" name="expr1"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="a pseudorandom double greater than or equal to 0.0 and less than 1.0." type="double" final="true" name="random" static="true"></dev:method>
			<dev:method visibility="public" returncomment="Modulus value." type="double" final="true" name="mod" static="true">
				<dev:params>
					<dev:param type="double" comment="" name="expr1"></dev:param>
					<dev:param type="double" comment="" name="expr2"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="com.amx.duet.util.tools.Panasonic.AWHE50.dr1_0_0.ArrayUtil">
		<dev:methods>
			<dev:constructor visibility="public" name="ArrayUtil"></dev:constructor>
			<dev:method visibility="public" returncomment="a list view of the specified array." type="java.util.List" final="true" name="asList" static="true">
				<dev:params>
					<dev:param type="java.lang.Object[]" comment="the array by which the list will be backed." name="array"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="an array containing all of the elements in this list in proper sequence." type="java.lang.Object[]" final="true" name="toArray" static="true">
				<dev:params>
					<dev:param type="java.util.List" comment="the list by which an array will be created." name="list"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" final="true" name="copy" static="true">
				<dev:params>
					<dev:param type="java.lang.Object" comment="the source array." name="src"></dev:param>
					<dev:param type="int" comment="starting position in the source array." name="srcPos"></dev:param>
					<dev:param type="java.lang.Object" comment="the destination array." name="dest"></dev:param>
					<dev:param type="int" comment="starting position in the destination data." name="destPos"></dev:param>
					<dev:param type="int" comment="the number of array elements to be copied." name="length"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the length of the sequence of objects represented by this object." type="int" final="true" name="Length" static="true">
				<dev:params>
					<dev:param type="java.lang.Object[]" comment="" name="array"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.codec.binary.dr1_0_0.StringUtils">
		<dev:methods>
			<dev:constructor visibility="public" name="StringUtils"></dev:constructor>
			<dev:method visibility="public" returncomment="encoded bytes, or &lt;code&gt;null&lt;/code&gt; if the input string was &lt;code&gt;null&lt;/code&gt;" type="byte[]" name="getBytesIso8859_1" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the String to encode, may be &lt;code&gt;null&lt;/code&gt;" name="string"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="encoded bytes, or &lt;code&gt;null&lt;/code&gt; if the input string was &lt;code&gt;null&lt;/code&gt;" type="byte[]" name="getBytesUsAscii" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the String to encode, may be &lt;code&gt;null&lt;/code&gt;" name="string"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="encoded bytes, or &lt;code&gt;null&lt;/code&gt; if the input string was &lt;code&gt;null&lt;/code&gt;" type="byte[]" name="getBytesUtf16" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the String to encode, may be &lt;code&gt;null&lt;/code&gt;" name="string"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="encoded bytes, or &lt;code&gt;null&lt;/code&gt; if the input string was &lt;code&gt;null&lt;/code&gt;" type="byte[]" name="getBytesUtf16Be" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the String to encode, may be &lt;code&gt;null&lt;/code&gt;" name="string"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="encoded bytes, or &lt;code&gt;null&lt;/code&gt; if the input string was &lt;code&gt;null&lt;/code&gt;" type="byte[]" name="getBytesUtf16Le" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the String to encode, may be &lt;code&gt;null&lt;/code&gt;" name="string"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="encoded bytes, or &lt;code&gt;null&lt;/code&gt; if the input string was &lt;code&gt;null&lt;/code&gt;" type="byte[]" name="getBytesUtf8" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the String to encode, may be &lt;code&gt;null&lt;/code&gt;" name="string"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="encoded bytes, or &lt;code&gt;null&lt;/code&gt; if the input string was &lt;code&gt;null&lt;/code&gt;" type="byte[]" name="getBytesUnchecked" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the String to encode, may be &lt;code&gt;null&lt;/code&gt;" name="string"></dev:param>
					<dev:param type="java.lang.String" comment="The name of a required {@link java.nio.charset.Charset}" name="charsetName"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="A new &lt;code&gt;String&lt;/code&gt; decoded from the specified array of bytes using the given charset,          or &lt;code&gt;null&lt;/code&gt; if the input byte arrray was &lt;code&gt;null&lt;/code&gt;." type="java.lang.String" name="newString" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="The bytes to be decoded into characters, may be &lt;code&gt;null&lt;/code&gt;" name="bytes"></dev:param>
					<dev:param type="java.lang.String" comment="The name of a required {@link java.nio.charset.Charset}" name="charsetName"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="A new &lt;code&gt;String&lt;/code&gt; decoded from the specified array of bytes using the ISO-8859-1 charset,          or &lt;code&gt;null&lt;/code&gt; if the input byte array was &lt;code&gt;null&lt;/code&gt;." type="java.lang.String" name="newStringIso8859_1" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="The bytes to be decoded into characters, may be &lt;code&gt;null&lt;/code&gt;" name="bytes"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="A new &lt;code&gt;String&lt;/code&gt; decoded from the specified array of bytes using the US-ASCII charset,          or &lt;code&gt;null&lt;/code&gt; if the input byte array was &lt;code&gt;null&lt;/code&gt;." type="java.lang.String" name="newStringUsAscii" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="The bytes to be decoded into characters" name="bytes"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="A new &lt;code&gt;String&lt;/code&gt; decoded from the specified array of bytes using the UTF-16 charset          or &lt;code&gt;null&lt;/code&gt; if the input byte array was &lt;code&gt;null&lt;/code&gt;." type="java.lang.String" name="newStringUtf16" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="The bytes to be decoded into characters" name="bytes"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="A new &lt;code&gt;String&lt;/code&gt; decoded from the specified array of bytes using the UTF-16BE charset,          or &lt;code&gt;null&lt;/code&gt; if the input byte array was &lt;code&gt;null&lt;/code&gt;." type="java.lang.String" name="newStringUtf16Be" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="The bytes to be decoded into characters" name="bytes"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="A new &lt;code&gt;String&lt;/code&gt; decoded from the specified array of bytes using the UTF-16LE charset,          or &lt;code&gt;null&lt;/code&gt; if the input byte array was &lt;code&gt;null&lt;/code&gt;." type="java.lang.String" name="newStringUtf16Le" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="The bytes to be decoded into characters" name="bytes"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="A new &lt;code&gt;String&lt;/code&gt; decoded from the specified array of bytes using the UTF-8 charset,          or &lt;code&gt;null&lt;/code&gt; if the input byte array was &lt;code&gt;null&lt;/code&gt;." type="java.lang.String" name="newStringUtf8" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="The bytes to be decoded into characters" name="bytes"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.codec.binary.dr1_0_0.Hex">
		<dev:extends>
			<dev:extend name="org.apache.commons.codec.dr1_0_0.BinaryEncoder"></dev:extend>
			<dev:extend name="org.apache.commons.codec.dr1_0_0.BinaryDecoder"></dev:extend>
		</dev:extends>
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;UTF-8&quot;" const="UTF-8" name="DEFAULT_CHARSET_NAME" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="Hex"></dev:constructor>
			<dev:constructor visibility="public" name="Hex">
				<dev:params>
					<dev:param type="java.lang.String" comment="the charset name." name="csName"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="A byte array containing binary data decoded from the supplied char array." type="byte[]" name="decodeHex" static="true">
				<dev:params>
					<dev:param type="char[]" comment="An array of characters containing hexadecimal digits" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="A char[] containing hexadecimal characters" type="char[]" name="encodeHex" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="a byte[] to convert to Hex characters" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="A char[] containing hexadecimal characters" type="char[]" name="encodeHex" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="a byte[] to convert to Hex characters" name="data"></dev:param>
					<dev:param type="boolean" comment="&lt;code&gt;true&lt;/code&gt; converts to lowercase, &lt;code&gt;false&lt;/code&gt; to uppercase" name="toLowerCase"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="A String containing hexadecimal characters" type="java.lang.String" name="encodeHexString" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="a byte[] to convert to Hex characters" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="A byte array containing binary data decoded from the supplied byte array (representing characters)." type="byte[]" name="decode">
				<dev:params>
					<dev:param type="byte[]" comment="An array of character bytes containing hexadecimal digits" name="array"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="A byte array containing binary data decoded from the supplied byte array (representing characters)." type="java.lang.Object" name="decode">
				<dev:params>
					<dev:param type="java.lang.Object" comment="A String or, an array of character bytes containing hexadecimal digits" name="object"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="A byte[] containing the bytes of the hexadecimal characters" type="byte[]" name="encode">
				<dev:params>
					<dev:param type="byte[]" comment="a byte[] to convert to Hex characters" name="array"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="A char[] containing hexadecimal characters" type="java.lang.Object" name="encode">
				<dev:params>
					<dev:param type="java.lang.Object" comment="a String, or byte[] to convert to Hex characters" name="object"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the charset name." type="java.lang.String" name="getCharsetName"></dev:method>
			<dev:method visibility="public" returncomment="a string representation of the object." type="java.lang.String" name="toString"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.codec.binary.dr1_0_0.BinaryCodec">
		<dev:extends>
			<dev:extend name="org.apache.commons.codec.dr1_0_0.BinaryDecoder"></dev:extend>
			<dev:extend name="org.apache.commons.codec.dr1_0_0.BinaryEncoder"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="BinaryCodec"></dev:constructor>
			<dev:method visibility="public" returncomment="0 and 1 ASCII character bytes one for each bit of the argument" type="byte[]" name="encode">
				<dev:params>
					<dev:param type="byte[]" comment="the raw binary data to convert" name="raw"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="0 and 1 ASCII character chars one for each bit of the argument" type="java.lang.Object" name="encode">
				<dev:params>
					<dev:param type="java.lang.Object" comment="the raw binary data to convert" name="raw"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the raw encoded binary where each bit corresponds to a byte in the byte array argument" type="java.lang.Object" name="decode">
				<dev:params>
					<dev:param type="java.lang.Object" comment="each byte represents an ASCII &apos;0&apos; or &apos;1&apos;" name="ascii"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the raw encoded binary where each bit corresponds to a byte in the byte array argument" type="byte[]" name="decode">
				<dev:params>
					<dev:param type="byte[]" comment="each byte represents an ASCII &apos;0&apos; or &apos;1&apos;" name="ascii"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the raw encoded binary where each bit corresponds to a byte in the byte array argument" type="byte[]" name="toByteArray">
				<dev:params>
					<dev:param type="java.lang.String" comment="String of &apos;0&apos; and &apos;1&apos; characters" name="ascii"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the raw encoded binary where each bit corresponds to a char in the char array argument" type="byte[]" name="fromAscii" static="true">
				<dev:params>
					<dev:param type="char[]" comment="each char represents an ASCII &apos;0&apos; or &apos;1&apos;" name="ascii"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the raw encoded binary where each bit corresponds to a byte in the byte array argument" type="byte[]" name="fromAscii" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="each byte represents an ASCII &apos;0&apos; or &apos;1&apos;" name="ascii"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="an array of 0 and 1 character bytes for each bit of the argument" type="byte[]" name="toAsciiBytes" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="the raw binary data to convert" name="raw"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="an array of 0 and 1 characters for each bit of the argument" type="char[]" name="toAsciiChars" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="the raw binary data to convert" name="raw"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="a String of 0 and 1 characters representing the binary data" type="java.lang.String" name="toAsciiString" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="the raw binary data to convert" name="raw"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.io.FilterOutputStream" name="org.apache.commons.codec.binary.dr1_0_0.BaseNCodecOutputStream">
		<dev:methods>
			<dev:constructor visibility="public" name="BaseNCodecOutputStream">
				<dev:params>
					<dev:param type="java.io.OutputStream" name="out"></dev:param>
					<dev:param type="org.apache.commons.codec.binary.dr1_0_0.BaseNCodec" name="basedCodec"></dev:param>
					<dev:param type="boolean" name="doEncode"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="void" name="write">
				<dev:params>
					<dev:param type="int" comment="source byte" name="i"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="write">
				<dev:params>
					<dev:param type="byte[]" comment="source byte array" name="b"></dev:param>
					<dev:param type="int" comment="where to start reading the bytes" name="offset"></dev:param>
					<dev:param type="int" comment="maximum number of bytes to write" name="len"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="flush"></dev:method>
			<dev:method visibility="public" type="void" name="close"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.io.FilterInputStream" name="org.apache.commons.codec.binary.dr1_0_0.BaseNCodecInputStream">
		<dev:methods>
			<dev:method visibility="public" returncomment="the byte as an integer in the range 0 to 255. Returns -1 if EOF has been reached." type="int" name="read"></dev:method>
			<dev:method visibility="public" returncomment="number of bytes read" type="int" name="read">
				<dev:params>
					<dev:param type="byte[]" comment="destination byte array" name="b"></dev:param>
					<dev:param type="int" comment="where to start writing the bytes" name="offset"></dev:param>
					<dev:param type="int" comment="maximum number of bytes to read" name="len"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="false" type="boolean" name="markSupported"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" abstract="true" name="org.apache.commons.codec.binary.dr1_0_0.BaseNCodec">
		<dev:extends>
			<dev:extend name="org.apache.commons.codec.dr1_0_0.BinaryEncoder"></dev:extend>
			<dev:extend name="org.apache.commons.codec.dr1_0_0.BinaryDecoder"></dev:extend>
		</dev:extends>
		<dev:fields>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="76" const="76" name="MIME_CHUNK_SIZE" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="64" const="64" name="PEM_CHUNK_SIZE" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:method visibility="public" returncomment="An object (of type byte[]) containing the Base-N encoded data which corresponds to the byte[] supplied." type="java.lang.Object" name="encode">
				<dev:params>
					<dev:param type="java.lang.Object" comment="Object to encode" name="pObject"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="A String containing only Base-N character data" type="java.lang.String" name="encodeToString">
				<dev:params>
					<dev:param type="byte[]" comment="a byte array containing binary data" name="pArray"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="An object (of type byte[]) containing the binary data which corresponds to the byte[] or String supplied." type="java.lang.Object" name="decode">
				<dev:params>
					<dev:param type="java.lang.Object" comment="Object to decode" name="pObject"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="a byte array containing binary data" type="byte[]" name="decode">
				<dev:params>
					<dev:param type="java.lang.String" comment="A String containing Base-N character data" name="pArray"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="a byte array containing binary data" type="byte[]" name="decode">
				<dev:params>
					<dev:param type="byte[]" comment="A byte array containing Base-N character data" name="pArray"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="A byte array containing only the basen alphabetic character data" type="byte[]" name="encode">
				<dev:params>
					<dev:param type="byte[]" comment="a byte array containing binary data" name="pArray"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="String containing only character data in the appropriate alphabet." type="java.lang.String" name="encodeAsString">
				<dev:params>
					<dev:param type="byte[]" comment="a byte array containing binary data" name="pArray"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt; if all bytes are valid characters in the alphabet or if the byte array is empty;          &lt;code&gt;false&lt;/code&gt;, otherwise" type="boolean" name="isInAlphabet">
				<dev:params>
					<dev:param type="byte[]" comment="byte array to test" name="arrayOctet"></dev:param>
					<dev:param type="boolean" comment="if &lt;code&gt;true&lt;/code&gt;, then whitespace and PAD are also allowed" name="allowWSPad"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt; if all characters in the String are valid characters in the alphabet or if          the String is empty; &lt;code&gt;false&lt;/code&gt;, otherwise" type="boolean" name="isInAlphabet">
				<dev:params>
					<dev:param type="java.lang.String" comment="String to test" name="basen"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="amount of space needed to encoded the supplied array.    Returns a long since a max-len array will require &gt; Integer.MAX_VALUE" type="long" name="getEncodedLength">
				<dev:params>
					<dev:param type="byte[]" comment="byte[] array which will later be encoded" name="pArray"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.codec.binary.dr1_0_0.BaseNCodecOutputStream" name="org.apache.commons.codec.binary.dr1_0_0.Base64OutputStream"></dev:class>
	<dev:class superclass="org.apache.commons.codec.binary.dr1_0_0.BaseNCodecInputStream" name="org.apache.commons.codec.binary.dr1_0_0.Base64InputStream"></dev:class>
	<dev:class superclass="org.apache.commons.codec.binary.dr1_0_0.BaseNCodec" name="org.apache.commons.codec.binary.dr1_0_0.Base64">
		<dev:methods>
			<dev:constructor visibility="public" name="Base64"></dev:constructor>
			<dev:constructor visibility="public" name="Base64">
				<dev:params>
					<dev:param type="boolean" comment="if &lt;code&gt;true&lt;/code&gt;, URL-safe encoding is used. In most cases this should be set to             &lt;code&gt;false&lt;/code&gt;." name="urlSafe"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="Base64">
				<dev:params>
					<dev:param type="int" comment="Each line of encoded data will be at most of the given length (rounded down to nearest multiple of 4).             If lineLength &lt;= 0, then the output will not be divided into lines (chunks). Ignored when decoding." name="lineLength"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="Base64">
				<dev:params>
					<dev:param type="int" comment="Each line of encoded data will be at most of the given length (rounded down to nearest multiple of 4).             If lineLength &lt;= 0, then the output will not be divided into lines (chunks). Ignored when decoding." name="lineLength"></dev:param>
					<dev:param type="byte[]" comment="Each line of encoded data will end with this sequence of bytes." name="lineSeparator"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="Base64">
				<dev:params>
					<dev:param type="int" comment="Each line of encoded data will be at most of the given length (rounded down to nearest multiple of 4).             If lineLength &lt;= 0, then the output will not be divided into lines (chunks). Ignored when decoding." name="lineLength"></dev:param>
					<dev:param type="byte[]" comment="Each line of encoded data will end with this sequence of bytes." name="lineSeparator"></dev:param>
					<dev:param type="boolean" comment="Instead of emitting &apos;+&apos; and &apos;/&apos; we emit &apos;-&apos; and &apos;_&apos; respectively. urlSafe is only applied to encode             operations. Decoding seamlessly handles both modes." name="urlSafe"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="true if we&apos;re in URL-SAFE mode, false otherwise." type="boolean" name="isUrlSafe"></dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt; if the value is defined in the the base 64 alphabet, &lt;code&gt;false&lt;/code&gt; otherwise." type="boolean" name="isBase64" static="true">
				<dev:params>
					<dev:param type="byte" comment="The value to test" name="octet"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt; if all characters in the String are valid characters in the Base64 alphabet or if          the String is empty; &lt;code&gt;false&lt;/code&gt;, otherwise" type="boolean" name="isBase64" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="String to test" name="base64"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt; if all bytes are valid characters in the Base64 alphabet or if the byte array is empty;          &lt;code&gt;false&lt;/code&gt;, otherwise" type="boolean" name="isArrayByteBase64" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="byte array to test" name="arrayOctet"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt; if all bytes are valid characters in the Base64 alphabet or if the byte array is empty;          &lt;code&gt;false&lt;/code&gt;, otherwise" type="boolean" name="isBase64" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="byte array to test" name="arrayOctet"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="byte[] containing Base64 characters in their UTF-8 representation." type="byte[]" name="encodeBase64" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="binary data to encode" name="binaryData"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="String containing Base64 characters." type="java.lang.String" name="encodeBase64String" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="binary data to encode" name="binaryData"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="byte[] containing Base64 characters in their UTF-8 representation." type="byte[]" name="encodeBase64URLSafe" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="binary data to encode" name="binaryData"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="String containing Base64 characters" type="java.lang.String" name="encodeBase64URLSafeString" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="binary data to encode" name="binaryData"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="Base64 characters chunked in 76 character blocks" type="byte[]" name="encodeBase64Chunked" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="binary data to encode" name="binaryData"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="Base64-encoded data." type="byte[]" name="encodeBase64" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="Array containing binary data to encode." name="binaryData"></dev:param>
					<dev:param type="boolean" comment="if &lt;code&gt;true&lt;/code&gt; this encoder will chunk the base64 output into 76 character blocks" name="isChunked"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="Base64-encoded data." type="byte[]" name="encodeBase64" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="Array containing binary data to encode." name="binaryData"></dev:param>
					<dev:param type="boolean" comment="if &lt;code&gt;true&lt;/code&gt; this encoder will chunk the base64 output into 76 character blocks" name="isChunked"></dev:param>
					<dev:param type="boolean" comment="if &lt;code&gt;true&lt;/code&gt; this encoder will emit - and _ instead of the usual + and / characters." name="urlSafe"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="Base64-encoded data." type="byte[]" name="encodeBase64" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="Array containing binary data to encode." name="binaryData"></dev:param>
					<dev:param type="boolean" comment="if &lt;code&gt;true&lt;/code&gt; this encoder will chunk the base64 output into 76 character blocks" name="isChunked"></dev:param>
					<dev:param type="boolean" comment="if &lt;code&gt;true&lt;/code&gt; this encoder will emit - and _ instead of the usual + and / characters." name="urlSafe"></dev:param>
					<dev:param type="int" comment="The maximum result size to accept." name="maxResultSize"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="Array containing decoded data." type="byte[]" name="decodeBase64" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="String containing Base64 data" name="base64String"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="Array containing decoded data." type="byte[]" name="decodeBase64" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="Byte array containing Base64 data" name="base64Data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="A BigInteger" type="java.math.BigInteger" name="decodeInteger" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="a byte array containing base64 character data" name="pArray"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="A byte array containing base64 character data" type="byte[]" name="encodeInteger" static="true">
				<dev:params>
					<dev:param type="java.math.BigInteger" comment="a BigInteger" name="bigInt"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.codec.binary.dr1_0_0.BaseNCodecOutputStream" name="org.apache.commons.codec.binary.dr1_0_0.Base32OutputStream"></dev:class>
	<dev:class superclass="org.apache.commons.codec.binary.dr1_0_0.BaseNCodecInputStream" name="org.apache.commons.codec.binary.dr1_0_0.Base32InputStream"></dev:class>
	<dev:class superclass="org.apache.commons.codec.binary.dr1_0_0.BaseNCodec" name="org.apache.commons.codec.binary.dr1_0_0.Base32">
		<dev:methods>
			<dev:constructor visibility="public" name="Base32"></dev:constructor>
			<dev:constructor visibility="public" name="Base32">
				<dev:params>
					<dev:param type="boolean" comment="if &lt;code&gt;true&lt;/code&gt; then use Base32 Hex alphabet" name="useHex"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="Base32">
				<dev:params>
					<dev:param type="int" comment="Each line of encoded data will be at most of the given length (rounded down to nearest multiple of 8).             If lineLength &lt;= 0, then the output will not be divided into lines (chunks). Ignored when decoding." name="lineLength"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="Base32">
				<dev:params>
					<dev:param type="int" comment="Each line of encoded data will be at most of the given length (rounded down to nearest multiple of 8).             If lineLength &lt;= 0, then the output will not be divided into lines (chunks). Ignored when decoding." name="lineLength"></dev:param>
					<dev:param type="byte[]" comment="Each line of encoded data will end with this sequence of bytes." name="lineSeparator"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="Base32">
				<dev:params>
					<dev:param type="int" comment="Each line of encoded data will be at most of the given length (rounded down to nearest multiple of 8).             If lineLength &lt;= 0, then the output will not be divided into lines (chunks). Ignored when decoding." name="lineLength"></dev:param>
					<dev:param type="byte[]" comment="Each line of encoded data will end with this sequence of bytes." name="lineSeparator"></dev:param>
					<dev:param type="boolean" comment="if &lt;code&gt;true&lt;/code&gt;, then use Base32 Hex alphabet, otherwise use Base32 alphabet" name="useHex"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt; if the value is defined in the the Base32 alphabet &lt;code&gt;false&lt;/code&gt; otherwise." type="boolean" name="isInAlphabet">
				<dev:params>
					<dev:param type="byte" comment="The value to test" name="octet"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.codec.digest.dr1_0_0.DigestUtils">
		<dev:methods>
			<dev:constructor visibility="public" name="DigestUtils"></dev:constructor>
			<dev:method visibility="public" returncomment="MD5 digest" type="byte[]" name="md5" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="Data to digest" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="MD5 digest" type="byte[]" name="md5" static="true">
				<dev:params>
					<dev:param type="java.io.InputStream" comment="Data to digest" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="MD5 digest" type="byte[]" name="md5" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="Data to digest" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="MD5 digest as a hex string" type="java.lang.String" name="md5Hex" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="Data to digest" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="MD5 digest as a hex string" type="java.lang.String" name="md5Hex" static="true">
				<dev:params>
					<dev:param type="java.io.InputStream" comment="Data to digest" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="MD5 digest as a hex string" type="java.lang.String" name="md5Hex" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="Data to digest" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="SHA-1 digest" type="byte[]" name="sha" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="Data to digest" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="SHA-1 digest" type="byte[]" name="sha" static="true">
				<dev:params>
					<dev:param type="java.io.InputStream" comment="Data to digest" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="SHA-1 digest" type="byte[]" name="sha" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="Data to digest" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="SHA-256 digest" type="byte[]" name="sha256" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="Data to digest" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="SHA-256 digest" type="byte[]" name="sha256" static="true">
				<dev:params>
					<dev:param type="java.io.InputStream" comment="Data to digest" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="SHA-256 digest" type="byte[]" name="sha256" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="Data to digest" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="SHA-256 digest as a hex string" type="java.lang.String" name="sha256Hex" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="Data to digest" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="SHA-256 digest as a hex string" type="java.lang.String" name="sha256Hex" static="true">
				<dev:params>
					<dev:param type="java.io.InputStream" comment="Data to digest" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="SHA-256 digest as a hex string" type="java.lang.String" name="sha256Hex" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="Data to digest" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="SHA-384 digest" type="byte[]" name="sha384" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="Data to digest" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="SHA-384 digest" type="byte[]" name="sha384" static="true">
				<dev:params>
					<dev:param type="java.io.InputStream" comment="Data to digest" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="SHA-384 digest" type="byte[]" name="sha384" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="Data to digest" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="SHA-384 digest as a hex string" type="java.lang.String" name="sha384Hex" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="Data to digest" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="SHA-384 digest as a hex string" type="java.lang.String" name="sha384Hex" static="true">
				<dev:params>
					<dev:param type="java.io.InputStream" comment="Data to digest" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="SHA-384 digest as a hex string" type="java.lang.String" name="sha384Hex" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="Data to digest" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="SHA-512 digest" type="byte[]" name="sha512" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="Data to digest" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="SHA-512 digest" type="byte[]" name="sha512" static="true">
				<dev:params>
					<dev:param type="java.io.InputStream" comment="Data to digest" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="SHA-512 digest" type="byte[]" name="sha512" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="Data to digest" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="SHA-512 digest as a hex string" type="java.lang.String" name="sha512Hex" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="Data to digest" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="SHA-512 digest as a hex string" type="java.lang.String" name="sha512Hex" static="true">
				<dev:params>
					<dev:param type="java.io.InputStream" comment="Data to digest" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="SHA-512 digest as a hex string" type="java.lang.String" name="sha512Hex" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="Data to digest" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="SHA-1 digest as a hex string" type="java.lang.String" name="shaHex" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="Data to digest" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="SHA-1 digest as a hex string" type="java.lang.String" name="shaHex" static="true">
				<dev:params>
					<dev:param type="java.io.InputStream" comment="Data to digest" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="SHA-1 digest as a hex string" type="java.lang.String" name="shaHex" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="Data to digest" name="data"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.codec.dr1_0_0.StringEncoderComparator">
		<dev:extends>
			<dev:extend name="java.util.Comparator"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="StringEncoderComparator"></dev:constructor>
			<dev:constructor visibility="public" name="StringEncoderComparator">
				<dev:params>
					<dev:param type="org.apache.commons.codec.dr1_0_0.StringEncoder" comment="the StringEncoder used for comparisons." name="stringEncoder"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="the Comparable.compareTo() return code or 0 if an encoding error was caught." type="int" name="compare">
				<dev:params>
					<dev:param type="java.lang.Object" comment="the object to compare" name="o1"></dev:param>
					<dev:param type="java.lang.Object" comment="the object to compare to" name="o2"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class abstract="true" name="org.apache.commons.codec.dr1_0_0.StringEncoder">
		<dev:extends>
			<dev:extend name="org.apache.commons.codec.dr1_0_0.Encoder"></dev:extend>
		</dev:extends>
	</dev:class>
	<dev:class abstract="true" name="org.apache.commons.codec.dr1_0_0.StringDecoder">
		<dev:extends>
			<dev:extend name="org.apache.commons.codec.dr1_0_0.Decoder"></dev:extend>
		</dev:extends>
	</dev:class>
	<dev:class superclass="java.lang.Exception" serializable="true" name="org.apache.commons.codec.dr1_0_0.EncoderException"></dev:class>
	<dev:class abstract="true" name="org.apache.commons.codec.dr1_0_0.Encoder"></dev:class>
	<dev:class superclass="java.lang.Exception" serializable="true" name="org.apache.commons.codec.dr1_0_0.DecoderException"></dev:class>
	<dev:class abstract="true" name="org.apache.commons.codec.dr1_0_0.Decoder"></dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.codec.dr1_0_0.CharEncoding">
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;ISO-8859-1&quot;" const="ISO-8859-1" name="ISO_8859_1" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;US-ASCII&quot;" const="US-ASCII" name="US_ASCII" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;UTF-16&quot;" const="UTF-16" name="UTF_16" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;UTF-16BE&quot;" const="UTF-16BE" name="UTF_16BE" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;UTF-16LE&quot;" const="UTF-16LE" name="UTF_16LE" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;UTF-8&quot;" const="UTF-8" name="UTF_8" static="true"></dev:field>
		</dev:fields>
	</dev:class>
	<dev:class abstract="true" name="org.apache.commons.codec.dr1_0_0.BinaryEncoder">
		<dev:extends>
			<dev:extend name="org.apache.commons.codec.dr1_0_0.Encoder"></dev:extend>
		</dev:extends>
	</dev:class>
	<dev:class abstract="true" name="org.apache.commons.codec.dr1_0_0.BinaryDecoder">
		<dev:extends>
			<dev:extend name="org.apache.commons.codec.dr1_0_0.Decoder"></dev:extend>
		</dev:extends>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.codec.language.dr1_0_0.Soundex">
		<dev:extends>
			<dev:extend name="org.apache.commons.codec.dr1_0_0.StringEncoder"></dev:extend>
		</dev:extends>
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;01230120022455012623010202&quot;" const="01230120022455012623010202" name="US_ENGLISH_MAPPING_STRING" static="true"></dev:field>
			<dev:field visibility="public" fulltype="org.apache.commons.codec.language.dr1_0_0.Soundex" type="Soundex" final="true" name="US_ENGLISH" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="Soundex"></dev:constructor>
			<dev:constructor visibility="public" name="Soundex">
				<dev:params>
					<dev:param type="char[]" comment="Mapping array to use when finding the corresponding code for a given character" name="mapping"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="Soundex">
				<dev:params>
					<dev:param type="java.lang.String" comment="Mapping string to use when finding the corresponding code for a given character" name="mapping"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="The number of characters in the two encoded Strings that are the same from 0 to 4." type="int" name="difference">
				<dev:params>
					<dev:param type="java.lang.String" comment="A String that will be encoded and compared." name="s1"></dev:param>
					<dev:param type="java.lang.String" comment="A String that will be encoded and compared." name="s2"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="An object (or type java.lang.String) containing the soundex code which corresponds to the String              supplied." type="java.lang.Object" name="encode">
				<dev:params>
					<dev:param type="java.lang.Object" comment="Object to encode" name="pObject"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="A Soundex code corresponding to the String supplied" type="java.lang.String" name="encode">
				<dev:params>
					<dev:param type="java.lang.String" comment="A String object to encode" name="pString"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="int" type="int" name="getMaxLength"></dev:method>
			<dev:method visibility="public" type="void" name="setMaxLength">
				<dev:params>
					<dev:param type="int" comment="The maxLength to set" name="maxLength"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="A soundex code for the String supplied" type="java.lang.String" name="soundex">
				<dev:params>
					<dev:param type="java.lang.String" comment="String to encode using the Soundex algorithm" name="str"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.codec.language.dr1_0_0.RefinedSoundex">
		<dev:extends>
			<dev:extend name="org.apache.commons.codec.dr1_0_0.StringEncoder"></dev:extend>
		</dev:extends>
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;01360240043788015936020505&quot;" const="01360240043788015936020505" name="US_ENGLISH_MAPPING_STRING" static="true"></dev:field>
			<dev:field visibility="public" fulltype="org.apache.commons.codec.language.dr1_0_0.RefinedSoundex" type="RefinedSoundex" final="true" name="US_ENGLISH" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="RefinedSoundex"></dev:constructor>
			<dev:constructor visibility="public" name="RefinedSoundex">
				<dev:params>
					<dev:param type="char[]" comment="Mapping array to use when finding the corresponding code for                   a given character" name="mapping"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="RefinedSoundex">
				<dev:params>
					<dev:param type="java.lang.String" comment="Mapping string to use when finding the corresponding code for a given character" name="mapping"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="The number of characters in the two encoded Strings that are the              same from 0 to to the length of the shortest encoded String." type="int" name="difference">
				<dev:params>
					<dev:param type="java.lang.String" comment="A String that will be encoded and compared." name="s1"></dev:param>
					<dev:param type="java.lang.String" comment="A String that will be encoded and compared." name="s2"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="An object (or type java.lang.String) containing the refined              soundex code which corresponds to the String supplied." type="java.lang.Object" name="encode">
				<dev:params>
					<dev:param type="java.lang.Object" comment="Object to encode" name="pObject"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="A Soundex code corresponding to the String supplied" type="java.lang.String" name="encode">
				<dev:params>
					<dev:param type="java.lang.String" comment="A String object to encode" name="pString"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="A soundex code for the String supplied" type="java.lang.String" name="soundex">
				<dev:params>
					<dev:param type="java.lang.String" comment="String to encode using the Refined Soundex algorithm" name="str"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.codec.language.dr1_0_0.Metaphone">
		<dev:extends>
			<dev:extend name="org.apache.commons.codec.dr1_0_0.StringEncoder"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="Metaphone"></dev:constructor>
			<dev:method visibility="public" returncomment="A metaphone code corresponding to the String supplied" type="java.lang.String" name="metaphone">
				<dev:params>
					<dev:param type="java.lang.String" comment="String to find the metaphone code for" name="txt"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="An object (or type java.lang.String) containing the           metaphone code which corresponds to the String supplied." type="java.lang.Object" name="encode">
				<dev:params>
					<dev:param type="java.lang.Object" comment="Object to encode" name="pObject"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The metaphone code corresponding to the String supplied" type="java.lang.String" name="encode">
				<dev:params>
					<dev:param type="java.lang.String" comment="String object to encode" name="pString"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt; if the metaphones of these strings are identical,          &lt;code&gt;false&lt;/code&gt; otherwise." type="boolean" name="isMetaphoneEqual">
				<dev:params>
					<dev:param type="java.lang.String" comment="First of two strings to compare" name="str1"></dev:param>
					<dev:param type="java.lang.String" comment="Second of two strings to compare" name="str2"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="int" type="int" name="getMaxCodeLen"></dev:method>
			<dev:method visibility="public" type="void" name="setMaxCodeLen">
				<dev:params>
					<dev:param type="int" comment="The maxCodeLen to set" name="maxCodeLen"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.codec.language.dr1_0_0.DoubleMetaphone">
		<dev:extends>
			<dev:extend name="org.apache.commons.codec.dr1_0_0.StringEncoder"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="DoubleMetaphone"></dev:constructor>
			<dev:method visibility="public" returncomment="an encoded string" type="java.lang.String" name="doubleMetaphone">
				<dev:params>
					<dev:param type="java.lang.String" comment="String to encode" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="an encoded string" type="java.lang.String" name="doubleMetaphone">
				<dev:params>
					<dev:param type="java.lang.String" comment="String to encode" name="value"></dev:param>
					<dev:param type="boolean" comment="use alternate encode" name="alternate"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="An encoded Object (will be of type String)" type="java.lang.Object" name="encode">
				<dev:params>
					<dev:param type="java.lang.Object" comment="Object to encode (should be of type String)" name="obj"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="An encoded String" type="java.lang.String" name="encode">
				<dev:params>
					<dev:param type="java.lang.String" comment="String to encode" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt; if the encoded &lt;code&gt;String&lt;/code&gt;s are equal;           &lt;code&gt;false&lt;/code&gt; otherwise." type="boolean" name="isDoubleMetaphoneEqual">
				<dev:params>
					<dev:param type="java.lang.String" comment="The left-hand side of the encoded {@link String#equals(Object)}." name="value1"></dev:param>
					<dev:param type="java.lang.String" comment="The right-hand side of the encoded {@link String#equals(Object)}." name="value2"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt; if the encoded &lt;code&gt;String&lt;/code&gt;s are equal;           &lt;code&gt;false&lt;/code&gt; otherwise." type="boolean" name="isDoubleMetaphoneEqual">
				<dev:params>
					<dev:param type="java.lang.String" comment="The left-hand side of the encoded {@link String#equals(Object)}." name="value1"></dev:param>
					<dev:param type="java.lang.String" comment="The right-hand side of the encoded {@link String#equals(Object)}." name="value2"></dev:param>
					<dev:param type="boolean" comment="use the alternate value if &lt;code&gt;true&lt;/code&gt;." name="alternate"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="int" type="int" name="getMaxCodeLen"></dev:method>
			<dev:method visibility="public" type="void" name="setMaxCodeLen">
				<dev:params>
					<dev:param type="int" comment="The maxCodeLen to set" name="maxCodeLen"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
		<dev:class superclass="java.lang.Object" name="org.apache.commons.codec.language.dr1_0_0.DoubleMetaphone.DoubleMetaphoneResult">
			<dev:methods>
				<dev:constructor visibility="public" name="DoubleMetaphone.DoubleMetaphoneResult">
					<dev:params>
						<dev:param type="int" name="maxLength"></dev:param>
					</dev:params>
				</dev:constructor>
				<dev:method visibility="public" type="void" name="append">
					<dev:params>
						<dev:param type="char" name="value"></dev:param>
					</dev:params>
				</dev:method>
				<dev:method visibility="public" type="void" name="append">
					<dev:params>
						<dev:param type="char" name="primary"></dev:param>
						<dev:param type="char" name="alternate"></dev:param>
					</dev:params>
				</dev:method>
				<dev:method visibility="public" type="void" name="appendPrimary">
					<dev:params>
						<dev:param type="char" name="value"></dev:param>
					</dev:params>
				</dev:method>
				<dev:method visibility="public" type="void" name="appendAlternate">
					<dev:params>
						<dev:param type="char" name="value"></dev:param>
					</dev:params>
				</dev:method>
				<dev:method visibility="public" type="void" name="append">
					<dev:params>
						<dev:param type="java.lang.String" name="value"></dev:param>
					</dev:params>
				</dev:method>
				<dev:method visibility="public" type="void" name="append">
					<dev:params>
						<dev:param type="java.lang.String" name="primary"></dev:param>
						<dev:param type="java.lang.String" name="alternate"></dev:param>
					</dev:params>
				</dev:method>
				<dev:method visibility="public" type="void" name="appendPrimary">
					<dev:params>
						<dev:param type="java.lang.String" name="value"></dev:param>
					</dev:params>
				</dev:method>
				<dev:method visibility="public" type="void" name="appendAlternate">
					<dev:params>
						<dev:param type="java.lang.String" name="value"></dev:param>
					</dev:params>
				</dev:method>
				<dev:method visibility="public" type="java.lang.String" name="getPrimary"></dev:method>
				<dev:method visibility="public" type="java.lang.String" name="getAlternate"></dev:method>
				<dev:method visibility="public" type="boolean" name="isComplete"></dev:method>
			</dev:methods>
		</dev:class>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.codec.language.dr1_0_0.DoubleMetaphone.DoubleMetaphoneResult">
		<dev:methods>
			<dev:constructor visibility="public" name="DoubleMetaphone.DoubleMetaphoneResult">
				<dev:params>
					<dev:param type="int" name="maxLength"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="void" name="append">
				<dev:params>
					<dev:param type="char" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="append">
				<dev:params>
					<dev:param type="char" name="primary"></dev:param>
					<dev:param type="char" name="alternate"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="appendPrimary">
				<dev:params>
					<dev:param type="char" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="appendAlternate">
				<dev:params>
					<dev:param type="char" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="append">
				<dev:params>
					<dev:param type="java.lang.String" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="append">
				<dev:params>
					<dev:param type="java.lang.String" name="primary"></dev:param>
					<dev:param type="java.lang.String" name="alternate"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="appendPrimary">
				<dev:params>
					<dev:param type="java.lang.String" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="appendAlternate">
				<dev:params>
					<dev:param type="java.lang.String" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="java.lang.String" name="getPrimary"></dev:method>
			<dev:method visibility="public" type="java.lang.String" name="getAlternate"></dev:method>
			<dev:method visibility="public" type="boolean" name="isComplete"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.codec.language.dr1_0_0.ColognePhonetic">
		<dev:extends>
			<dev:extend name="org.apache.commons.codec.dr1_0_0.StringEncoder"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="ColognePhonetic"></dev:constructor>
			<dev:method visibility="public" returncomment="the corresponding encoding according to the &lt;i&gt;Kölner Phonetik&lt;/i&gt; algorithm" type="java.lang.String" name="colognePhonetic">
				<dev:params>
					<dev:param type="java.lang.String" comment="" name="text"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="java.lang.Object" name="encode">
				<dev:params>
					<dev:param type="java.lang.Object" name="object"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="java.lang.String" name="encode">
				<dev:params>
					<dev:param type="java.lang.String" name="text"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="boolean" name="isEncodeEqual">
				<dev:params>
					<dev:param type="java.lang.String" name="text1"></dev:param>
					<dev:param type="java.lang.String" name="text2"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.codec.language.dr1_0_0.AbstractCaverphone" name="org.apache.commons.codec.language.dr1_0_0.Caverphone2">
		<dev:methods>
			<dev:constructor visibility="public" name="Caverphone2"></dev:constructor>
			<dev:method visibility="public" returncomment="A caverphone code for the given String" type="java.lang.String" name="encode">
				<dev:params>
					<dev:param type="java.lang.String" comment="String the source string" name="source"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.codec.language.dr1_0_0.AbstractCaverphone" name="org.apache.commons.codec.language.dr1_0_0.Caverphone1">
		<dev:methods>
			<dev:constructor visibility="public" name="Caverphone1"></dev:constructor>
			<dev:method visibility="public" returncomment="A caverphone code for the given String" type="java.lang.String" name="encode">
				<dev:params>
					<dev:param type="java.lang.String" comment="String the source string" name="source"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.codec.language.dr1_0_0.Caverphone">
		<dev:extends>
			<dev:extend name="org.apache.commons.codec.dr1_0_0.StringEncoder"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="Caverphone"></dev:constructor>
			<dev:method visibility="public" returncomment="A caverphone code for the given String" type="java.lang.String" name="caverphone">
				<dev:params>
					<dev:param type="java.lang.String" comment="String the source string" name="source"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="An object (or type java.lang.String) containing the caverphone code which corresponds to the String          supplied." type="java.lang.Object" name="encode">
				<dev:params>
					<dev:param type="java.lang.Object" comment="Object to encode" name="pObject"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The caverphone code corresponding to the String supplied" type="java.lang.String" name="encode">
				<dev:params>
					<dev:param type="java.lang.String" comment="String object to encode" name="pString"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt; if the caverphones of these strings are identical, &lt;code&gt;false&lt;/code&gt; otherwise." type="boolean" name="isCaverphoneEqual">
				<dev:params>
					<dev:param type="java.lang.String" comment="First of two strings to compare" name="str1"></dev:param>
					<dev:param type="java.lang.String" comment="Second of two strings to compare" name="str2"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" abstract="true" name="org.apache.commons.codec.language.dr1_0_0.AbstractCaverphone">
		<dev:extends>
			<dev:extend name="org.apache.commons.codec.dr1_0_0.StringEncoder"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="AbstractCaverphone"></dev:constructor>
			<dev:method visibility="public" returncomment="An object (or type java.lang.String) containing the caverphone code which corresponds to the String          supplied." type="java.lang.Object" name="encode">
				<dev:params>
					<dev:param type="java.lang.Object" comment="Object to encode" name="source"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt; if the encodings of these strings are identical, &lt;code&gt;false&lt;/code&gt; otherwise." type="boolean" name="isEncodeEqual">
				<dev:params>
					<dev:param type="java.lang.String" comment="First of two strings to compare" name="str1"></dev:param>
					<dev:param type="java.lang.String" comment="Second of two strings to compare" name="str2"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.codec.net.dr1_0_0.URLCodec">
		<dev:extends>
			<dev:extend name="org.apache.commons.codec.dr1_0_0.BinaryEncoder"></dev:extend>
			<dev:extend name="org.apache.commons.codec.dr1_0_0.BinaryDecoder"></dev:extend>
			<dev:extend name="org.apache.commons.codec.dr1_0_0.StringEncoder"></dev:extend>
			<dev:extend name="org.apache.commons.codec.dr1_0_0.StringDecoder"></dev:extend>
		</dev:extends>
		<dev:fields></dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="URLCodec"></dev:constructor>
			<dev:constructor visibility="public" name="URLCodec">
				<dev:params>
					<dev:param type="java.lang.String" comment="the default string charset to use." name="charset"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="array of bytes containing URL safe characters" type="byte[]" final="true" name="encodeUrl" static="true">
				<dev:params>
					<dev:param type="java.util.BitSet" comment="bitset of characters deemed URL safe" name="urlsafe"></dev:param>
					<dev:param type="byte[]" comment="array of bytes to convert to URL safe characters" name="bytes"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="array of original bytes" type="byte[]" final="true" name="decodeUrl" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="array of URL safe characters" name="bytes"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="array of bytes containing URL safe characters" type="byte[]" name="encode">
				<dev:params>
					<dev:param type="byte[]" comment="array of bytes to convert to URL safe characters" name="bytes"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="array of original bytes" type="byte[]" name="decode">
				<dev:params>
					<dev:param type="byte[]" comment="array of URL safe characters" name="bytes"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="URL safe string" type="java.lang.String" name="encode">
				<dev:params>
					<dev:param type="java.lang.String" comment="string to convert to a URL safe form" name="pString"></dev:param>
					<dev:param type="java.lang.String" comment="the charset for pString" name="charset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="URL safe string" type="java.lang.String" name="encode">
				<dev:params>
					<dev:param type="java.lang.String" comment="string to convert to a URL safe form" name="pString"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="original string" type="java.lang.String" name="decode">
				<dev:params>
					<dev:param type="java.lang.String" comment="URL safe string to convert into its original form" name="pString"></dev:param>
					<dev:param type="java.lang.String" comment="the original string charset" name="charset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="original string" type="java.lang.String" name="decode">
				<dev:params>
					<dev:param type="java.lang.String" comment="URL safe string to convert into its original form" name="pString"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="URL safe object" type="java.lang.Object" name="encode">
				<dev:params>
					<dev:param type="java.lang.Object" comment="string to convert to a URL safe form" name="pObject"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="original object" type="java.lang.Object" name="decode">
				<dev:params>
					<dev:param type="java.lang.Object" comment="URL safe object to convert into its original form" name="pObject"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="Returns the encoding." type="java.lang.String" name="getEncoding"></dev:method>
			<dev:method visibility="public" returncomment="the default string charset." type="java.lang.String" name="getDefaultCharset"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.codec.net.dr1_0_0.QuotedPrintableCodec">
		<dev:extends>
			<dev:extend name="org.apache.commons.codec.dr1_0_0.BinaryEncoder"></dev:extend>
			<dev:extend name="org.apache.commons.codec.dr1_0_0.BinaryDecoder"></dev:extend>
			<dev:extend name="org.apache.commons.codec.dr1_0_0.StringEncoder"></dev:extend>
			<dev:extend name="org.apache.commons.codec.dr1_0_0.StringDecoder"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="QuotedPrintableCodec"></dev:constructor>
			<dev:constructor visibility="public" name="QuotedPrintableCodec">
				<dev:params>
					<dev:param type="java.lang.String" comment="the default string charset to use." name="charset"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="array of bytes containing quoted-printable data" type="byte[]" final="true" name="encodeQuotedPrintable" static="true">
				<dev:params>
					<dev:param type="java.util.BitSet" comment="bitset of characters deemed quoted-printable" name="printable"></dev:param>
					<dev:param type="byte[]" comment="array of bytes to be encoded" name="bytes"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="array of original bytes" type="byte[]" final="true" name="decodeQuotedPrintable" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="array of quoted-printable characters" name="bytes"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="array of bytes containing quoted-printable data" type="byte[]" name="encode">
				<dev:params>
					<dev:param type="byte[]" comment="array of bytes to be encoded" name="bytes"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="array of original bytes" type="byte[]" name="decode">
				<dev:params>
					<dev:param type="byte[]" comment="array of quoted-printable characters" name="bytes"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="quoted-printable string" type="java.lang.String" name="encode">
				<dev:params>
					<dev:param type="java.lang.String" comment="string to convert to quoted-printable form" name="pString"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="original string" type="java.lang.String" name="decode">
				<dev:params>
					<dev:param type="java.lang.String" comment="quoted-printable string to convert into its original form" name="pString"></dev:param>
					<dev:param type="java.lang.String" comment="the original string charset" name="charset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="original string" type="java.lang.String" name="decode">
				<dev:params>
					<dev:param type="java.lang.String" comment="quoted-printable string to convert into its original form" name="pString"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="quoted-printable object" type="java.lang.Object" name="encode">
				<dev:params>
					<dev:param type="java.lang.Object" comment="string to convert to a quoted-printable form" name="pObject"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="original object" type="java.lang.Object" name="decode">
				<dev:params>
					<dev:param type="java.lang.Object" comment="quoted-printable object to convert into its original form" name="pObject"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the default string charset." type="java.lang.String" name="getDefaultCharset"></dev:method>
			<dev:method visibility="public" returncomment="quoted-printable string" type="java.lang.String" name="encode">
				<dev:params>
					<dev:param type="java.lang.String" comment="string to convert to quoted-printable form" name="pString"></dev:param>
					<dev:param type="java.lang.String" comment="the charset for pString" name="charset"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.codec.net.dr1_0_0.RFC1522Codec" name="org.apache.commons.codec.net.dr1_0_0.QCodec">
		<dev:extends>
			<dev:extend name="org.apache.commons.codec.dr1_0_0.StringEncoder"></dev:extend>
			<dev:extend name="org.apache.commons.codec.dr1_0_0.StringDecoder"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="QCodec"></dev:constructor>
			<dev:constructor visibility="public" name="QCodec">
				<dev:params>
					<dev:param type="java.lang.String" comment="the default string charset to use." name="charset"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="quoted-printable string" type="java.lang.String" name="encode">
				<dev:params>
					<dev:param type="java.lang.String" comment="string to convert to quoted-printable form" name="pString"></dev:param>
					<dev:param type="java.lang.String" comment="the charset for pString" name="charset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="quoted-printable string" type="java.lang.String" name="encode">
				<dev:params>
					<dev:param type="java.lang.String" comment="string to convert to quoted-printable form" name="pString"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="original string" type="java.lang.String" name="decode">
				<dev:params>
					<dev:param type="java.lang.String" comment="quoted-printable string to convert into its original form" name="pString"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="quoted-printable object" type="java.lang.Object" name="encode">
				<dev:params>
					<dev:param type="java.lang.Object" comment="object to convert to quoted-printable form" name="pObject"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="original object" type="java.lang.Object" name="decode">
				<dev:params>
					<dev:param type="java.lang.Object" comment="quoted-printable object to convert into its original form" name="pObject"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the default string charset." type="java.lang.String" name="getDefaultCharset"></dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt; if SPACE characters are to be transformed, &lt;code&gt;false&lt;/code&gt; otherwise" type="boolean" name="isEncodeBlanks"></dev:method>
			<dev:method visibility="public" type="void" name="setEncodeBlanks">
				<dev:params>
					<dev:param type="boolean" comment="&lt;code&gt;true&lt;/code&gt; if SPACE characters are to be transformed, &lt;code&gt;false&lt;/code&gt; otherwise" name="b"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.codec.net.dr1_0_0.RFC1522Codec" name="org.apache.commons.codec.net.dr1_0_0.BCodec">
		<dev:extends>
			<dev:extend name="org.apache.commons.codec.dr1_0_0.StringEncoder"></dev:extend>
			<dev:extend name="org.apache.commons.codec.dr1_0_0.StringDecoder"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="BCodec"></dev:constructor>
			<dev:constructor visibility="public" name="BCodec">
				<dev:params>
					<dev:param type="java.lang.String" comment="the default string charset to use." name="charset"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="Base64 string" type="java.lang.String" name="encode">
				<dev:params>
					<dev:param type="java.lang.String" comment="string to convert to Base64 form" name="value"></dev:param>
					<dev:param type="java.lang.String" comment="the charset for &lt;code&gt;value&lt;/code&gt;" name="charset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="Base64 string" type="java.lang.String" name="encode">
				<dev:params>
					<dev:param type="java.lang.String" comment="string to convert to Base64 form" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="original string" type="java.lang.String" name="decode">
				<dev:params>
					<dev:param type="java.lang.String" comment="Base64 string to convert into its original form" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="Base64 object" type="java.lang.Object" name="encode">
				<dev:params>
					<dev:param type="java.lang.Object" comment="object to convert to Base64 form" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="original object" type="java.lang.Object" name="decode">
				<dev:params>
					<dev:param type="java.lang.Object" comment="Base64 object to convert into its original form" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the default string charset." type="java.lang.String" name="getDefaultCharset"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" abstract="true" name="org.apache.commons.httpclient.auth.dr1_0_0.RFC2617Scheme">
		<dev:extends>
			<dev:extend name="org.apache.commons.httpclient.auth.dr1_0_0.AuthScheme"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="RFC2617Scheme"></dev:constructor>
			<dev:constructor visibility="public" name="RFC2617Scheme">
				<dev:params>
					<dev:param type="java.lang.String" comment="authentication challenge" name="challenge"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="void" name="processChallenge">
				<dev:params>
					<dev:param type="java.lang.String" comment="the challenge string" name="challenge"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the parameter with the given name" type="java.lang.String" name="getParameter">
				<dev:params>
					<dev:param type="java.lang.String" comment="The name of the parameter to be returned" name="name"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the authentication realm" type="java.lang.String" name="getRealm"></dev:method>
			<dev:method visibility="public" returncomment="String a String identifying the authentication challenge.  The  returned value may be null." type="java.lang.String" name="getID"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.dr1_0_0.ProtocolException" serializable="true" name="org.apache.commons.httpclient.auth.dr1_0_0.MalformedChallengeException"></dev:class>
	<dev:class superclass="org.apache.commons.httpclient.auth.dr1_0_0.AuthenticationException" serializable="true" name="org.apache.commons.httpclient.auth.dr1_0_0.InvalidCredentialsException"></dev:class>
	<dev:class superclass="org.apache.commons.httpclient.auth.dr1_0_0.AuthScope" name="org.apache.commons.httpclient.auth.dr1_0_0.HttpAuthRealm"></dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.auth.dr1_0_0.HttpAuthenticator">
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;WWW-Authenticate&quot;" const="WWW-Authenticate" name="WWW_AUTH" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;Authorization&quot;" const="Authorization" name="WWW_AUTH_RESP" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;Proxy-Authenticate&quot;" const="Proxy-Authenticate" name="PROXY_AUTH" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;Proxy-Authorization&quot;" const="Proxy-Authorization" name="PROXY_AUTH_RESP" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="HttpAuthenticator"></dev:constructor>
			<dev:method visibility="public" returncomment="The strongest authentication scheme supported" type="org.apache.commons.httpclient.auth.dr1_0_0.AuthScheme" name="selectAuthScheme" static="true">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Header[]" comment="The array of authentication challenges" name="challenges"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="true if the &lt;tt&gt;Authenticate&lt;/tt&gt; response header    was added" type="boolean" name="authenticateDefault" static="true">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpMethod" comment="the HttpMethod which requires authentication" name="method"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpConnection" comment="the connection to a specific host. This parameter    may be &lt;tt&gt;null&lt;/tt&gt; if default credentials (not specific    to any particular host) are to be used" name="conn"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpState" comment="the HttpState object providing Credentials" name="state"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="true if the &lt;tt&gt;Proxy-Authenticate&lt;/tt&gt; response header    was added" type="boolean" name="authenticateProxyDefault" static="true">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpMethod" comment="the HttpMethod which requires authentication" name="method"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpConnection" comment="the connection to a specific host. This parameter    may be &lt;tt&gt;null&lt;/tt&gt; if default credentials (not specific    to any particular host) are to be used" name="conn"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpState" comment="the HttpState object providing Credentials" name="state"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="true if the &lt;tt&gt;Authenticate&lt;/tt&gt; response header was added" type="boolean" name="authenticate" static="true">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.auth.dr1_0_0.AuthScheme" comment="The authentication scheme to be used" name="authscheme"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpMethod" comment="The HttpMethod which requires authentication" name="method"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpConnection" comment="the connection to a specific host. This parameter    may be &lt;tt&gt;null&lt;/tt&gt; if default credentials (not specific    to any particular host) are to be used" name="conn"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpState" comment="The HttpState object providing Credentials" name="state"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="true if the &lt;tt&gt;Proxy-Authenticate&lt;/tt&gt; response header   was added" type="boolean" name="authenticateProxy" static="true">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.auth.dr1_0_0.AuthScheme" comment="The authentication scheme to be used" name="authscheme"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpMethod" comment="the HttpMethod which requires authentication" name="method"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpConnection" comment="the connection to a specific host. This parameter    may be &lt;tt&gt;null&lt;/tt&gt; if default credentials (not specific    to any particular host) are to be used" name="conn"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpState" comment="the HttpState object providing Credentials" name="state"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.auth.dr1_0_0.RFC2617Scheme" name="org.apache.commons.httpclient.auth.dr1_0_0.DigestScheme">
		<dev:methods>
			<dev:constructor visibility="public" name="DigestScheme"></dev:constructor>
			<dev:constructor visibility="public" name="DigestScheme">
				<dev:params>
					<dev:param type="java.lang.String" comment="authentication challenge" name="challenge"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="java.lang.String" name="getID"></dev:method>
			<dev:method visibility="public" type="void" name="processChallenge">
				<dev:params>
					<dev:param type="java.lang.String" comment="the challenge string" name="challenge"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; if Digest authorization has been processed,    &lt;tt&gt;false&lt;/tt&gt; otherwise." type="boolean" name="isComplete"></dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;digest&lt;/code&gt;" type="java.lang.String" name="getSchemeName"></dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;false&lt;/tt&gt;." type="boolean" name="isConnectionBased"></dev:method>
			<dev:method visibility="public" returncomment="a digest authorization string" type="java.lang.String" name="authenticate">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Credentials" comment="A set of credentials to be used for athentication" name="credentials"></dev:param>
					<dev:param type="java.lang.String" comment="the name of the method that requires authorization." name="method"></dev:param>
					<dev:param type="java.lang.String" comment="The URI for which authorization is needed." name="uri"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="a digest authorization string" type="java.lang.String" name="authenticate">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Credentials" comment="A set of credentials to be used for athentication" name="credentials"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpMethod" comment="The method being authenticated" name="method"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The cnonce value as String." type="java.lang.String" name="createCnonce" static="true"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class abstract="true" name="org.apache.commons.httpclient.auth.dr1_0_0.CredentialsProvider">
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.authentication.credential-provider&quot;" const="http.authentication.credential-provider" name="PROVIDER" static="true"></dev:field>
		</dev:fields>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.auth.dr1_0_0.AuthenticationException" serializable="true" name="org.apache.commons.httpclient.auth.dr1_0_0.CredentialsNotAvailableException"></dev:class>
	<dev:class superclass="org.apache.commons.httpclient.auth.dr1_0_0.RFC2617Scheme" name="org.apache.commons.httpclient.auth.dr1_0_0.BasicScheme">
		<dev:methods>
			<dev:constructor visibility="public" name="BasicScheme"></dev:constructor>
			<dev:constructor visibility="public" name="BasicScheme">
				<dev:params>
					<dev:param type="java.lang.String" comment="authentication challenge" name="challenge"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="&lt;code&gt;basic&lt;/code&gt;" type="java.lang.String" name="getSchemeName"></dev:method>
			<dev:method visibility="public" type="void" name="processChallenge">
				<dev:params>
					<dev:param type="java.lang.String" comment="the challenge string" name="challenge"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; if Basic authorization has been processed,    &lt;tt&gt;false&lt;/tt&gt; otherwise." type="boolean" name="isComplete"></dev:method>
			<dev:method visibility="public" returncomment="a basic authorization string" type="java.lang.String" name="authenticate">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Credentials" comment="The set of credentials to be used for athentication" name="credentials"></dev:param>
					<dev:param type="java.lang.String" comment="Method name is ignored by the basic authentication scheme" name="method"></dev:param>
					<dev:param type="java.lang.String" comment="URI is ignored by the basic authentication scheme" name="uri"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;false&lt;/tt&gt;." type="boolean" name="isConnectionBased"></dev:method>
			<dev:method visibility="public" returncomment="a basic authorization string" type="java.lang.String" name="authenticate">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Credentials" comment="The set of credentials to be used for athentication" name="credentials"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpMethod" comment="The method being authenticated" name="method"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="a basic authorization string" type="java.lang.String" name="authenticate" static="true">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.UsernamePasswordCredentials" comment="The credentials to encode." name="credentials"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="a basic authorization string" type="java.lang.String" name="authenticate" static="true">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.UsernamePasswordCredentials" comment="The credentials to encode." name="credentials"></dev:param>
					<dev:param type="java.lang.String" comment="The charset to use for encoding the credentials" name="charset"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.auth.dr1_0_0.AuthState">
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;basic&quot;" const="basic" name="PREEMPTIVE_AUTH_SCHEME" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="AuthState"></dev:constructor>
			<dev:method visibility="public" type="void" name="invalidate"></dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; if authenication challenge has been received,    &lt;tt&gt;false&lt;/tt&gt; otherwise" type="boolean" name="isAuthRequested"></dev:method>
			<dev:method visibility="public" type="void" name="setAuthRequested">
				<dev:params>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; if authenication has been requested,    &lt;tt&gt;false&lt;/tt&gt; otherwise" name="challengeReceived"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; if authenication challenge has been responsed to,    &lt;tt&gt;false&lt;/tt&gt; otherwise" type="boolean" name="isAuthAttempted"></dev:method>
			<dev:method visibility="public" type="void" name="setAuthAttempted">
				<dev:params>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; if authenication has been attempted,    &lt;tt&gt;false&lt;/tt&gt; otherwise" name="challengeResponded"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setPreemptive"></dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; if using the default Basic {@link AuthScheme   authentication scheme}, &lt;tt&gt;false&lt;/tt&gt; otherwise." type="boolean" name="isPreemptive"></dev:method>
			<dev:method visibility="public" type="void" name="setAuthScheme">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.auth.dr1_0_0.AuthScheme" comment="the {@link AuthScheme authentication scheme}" name="authScheme"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="{@link AuthScheme authentication scheme}" type="org.apache.commons.httpclient.auth.dr1_0_0.AuthScheme" name="getAuthScheme"></dev:method>
			<dev:method visibility="public" returncomment="the name of the authentication realm" type="java.lang.String" name="getRealm"></dev:method>
			<dev:method visibility="public" type="java.lang.String" name="toString"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.auth.dr1_0_0.AuthScope">
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" name="ANY_HOST" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="-1" const="-1" name="ANY_PORT" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" name="ANY_REALM" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" name="ANY_SCHEME" static="true"></dev:field>
			<dev:field visibility="public" fulltype="org.apache.commons.httpclient.auth.dr1_0_0.AuthScope" type="AuthScope" final="true" name="ANY" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="AuthScope">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host the credentials apply to. May be set    to &lt;tt&gt;null&lt;/tt&gt; if credenticals are applicable to    any host." name="host"></dev:param>
					<dev:param type="int" comment="the port the credentials apply to. May be set    to negative value if credenticals are applicable to    any port." name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the realm the credentials apply to. May be set     to &lt;tt&gt;null&lt;/tt&gt; if credenticals are applicable to    any realm." name="realm"></dev:param>
					<dev:param type="java.lang.String" comment="the authentication scheme the credentials apply to.     May be set to &lt;tt&gt;null&lt;/tt&gt; if credenticals are applicable to    any authentication scheme." name="scheme"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="AuthScope">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host the credentials apply to. May be set    to &lt;tt&gt;null&lt;/tt&gt; if credenticals are applicable to    any host." name="host"></dev:param>
					<dev:param type="int" comment="the port the credentials apply to. May be set    to negative value if credenticals are applicable to    any port." name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the realm the credentials apply to. May be set     to &lt;tt&gt;null&lt;/tt&gt; if credenticals are applicable to    any realm." name="realm"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="AuthScope">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host the credentials apply to. May be set    to &lt;tt&gt;null&lt;/tt&gt; if credenticals are applicable to    any host." name="host"></dev:param>
					<dev:param type="int" comment="the port the credentials apply to. May be set    to negative value if credenticals are applicable to    any port." name="port"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="AuthScope">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.auth.dr1_0_0.AuthScope" name="authscope"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="the host" type="java.lang.String" name="getHost"></dev:method>
			<dev:method visibility="public" returncomment="the port" type="int" name="getPort"></dev:method>
			<dev:method visibility="public" returncomment="the realm name" type="java.lang.String" name="getRealm"></dev:method>
			<dev:method visibility="public" returncomment="the scheme type" type="java.lang.String" name="getScheme"></dev:method>
			<dev:method visibility="public" returncomment="the match factor. Negative value signifies no match.      Non-negative signifies a match. The greater the returned value      the closer the match." type="int" name="match">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.auth.dr1_0_0.AuthScope" name="that"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="boolean" name="equals">
				<dev:params>
					<dev:param type="java.lang.Object" name="o"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="java.lang.String" name="toString"></dev:method>
			<dev:method visibility="public" type="int" name="hashCode"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" abstract="true" name="org.apache.commons.httpclient.auth.dr1_0_0.AuthSchemeBase">
		<dev:extends>
			<dev:extend name="org.apache.commons.httpclient.auth.dr1_0_0.AuthScheme"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="AuthSchemeBase">
				<dev:params>
					<dev:param type="java.lang.String" comment="authentication challenge" name="challenge"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="boolean" name="equals">
				<dev:params>
					<dev:param type="java.lang.Object" name="obj"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="int" name="hashCode"></dev:method>
			<dev:method visibility="public" type="java.lang.String" name="toString"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class abstract="true" name="org.apache.commons.httpclient.auth.dr1_0_0.AuthScheme"></dev:class>
	<dev:class superclass="java.lang.Object" abstract="true" name="org.apache.commons.httpclient.auth.dr1_0_0.AuthPolicy">
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.auth.scheme-priority&quot;" const="http.auth.scheme-priority" name="AUTH_SCHEME_PRIORITY" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;NTLM&quot;" const="NTLM" name="NTLM" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;Digest&quot;" const="Digest" name="DIGEST" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;Basic&quot;" const="Basic" name="BASIC" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="AuthPolicy"></dev:constructor>
			<dev:method visibility="public" type="void" name="registerAuthScheme" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the identifier for this scheme" name="id"></dev:param>
					<dev:param type="java.lang.Class" comment="the class to register" name="clazz"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="unregisterAuthScheme" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the ID of the class to unregister" name="id"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="{@link AuthScheme authentication scheme}" type="org.apache.commons.httpclient.auth.dr1_0_0.AuthScheme" name="getAuthScheme" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the {@link AuthScheme authentication scheme} ID" name="id"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="{@link AuthScheme authentication scheme}" type="java.util.List" name="getDefaultAuthPrefs" static="true"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.dr1_0_0.ProtocolException" serializable="true" name="org.apache.commons.httpclient.auth.dr1_0_0.AuthenticationException"></dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.auth.dr1_0_0.AuthChallengeProcessor">
		<dev:methods>
			<dev:constructor visibility="public" name="AuthChallengeProcessor">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.params.dr1_0_0.HttpParams" comment="the {@link HttpParams HTTP parameters} used by this processor" name="params"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="the preferred {@link AuthScheme authentication scheme}" type="org.apache.commons.httpclient.auth.dr1_0_0.AuthScheme" name="selectAuthScheme">
				<dev:params>
					<dev:param type="java.util.Map" comment="the collection of authentication challenges" name="challenges"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the {@link AuthScheme authentication scheme} used to   process the challenge" type="org.apache.commons.httpclient.auth.dr1_0_0.AuthScheme" name="processChallenge">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.auth.dr1_0_0.AuthState" name="state"></dev:param>
					<dev:param type="java.util.Map" comment="the collection of authentication challenges" name="challenges"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.auth.dr1_0_0.AuthChallengeParser">
		<dev:methods>
			<dev:constructor visibility="public" name="AuthChallengeParser"></dev:constructor>
			<dev:method visibility="public" returncomment="authentication scheme" type="java.lang.String" name="extractScheme" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the authentication challenge string" name="challengeStr"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="a map of authentication challenge parameters" type="java.util.Map" name="extractParams" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the authentication challenge string" name="challengeStr"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="a map of authorization challenges" type="java.util.Map" name="parseChallenges" static="true">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Header[]" comment="the array of authorization challenges" name="headers"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.auth.dr1_0_0.AuthenticationException" serializable="true" name="org.apache.commons.httpclient.auth.dr1_0_0.AuthChallengeException"></dev:class>
	<dev:class superclass="org.apache.commons.httpclient.cookie.dr1_0_0.CookieSpecBase" name="org.apache.commons.httpclient.cookie.dr1_0_0.RFC2965Spec">
		<dev:extends>
			<dev:extend name="org.apache.commons.httpclient.cookie.dr1_0_0.CookieVersionSupport"></dev:extend>
		</dev:extends>
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;set-cookie2&quot;" const="set-cookie2" name="SET_COOKIE2_KEY" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="RFC2965Spec"></dev:constructor>
			<dev:method visibility="public" returncomment="an array of &lt;tt&gt;Cookie&lt;/tt&gt;s parsed from the Set-Cookie2 value" type="org.apache.commons.httpclient.dr1_0_0.Cookie[]" name="parse">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host from which the &lt;tt&gt;Set-Cookie2&lt;/tt&gt; value was  received" name="host"></dev:param>
					<dev:param type="int" comment="the port from which the &lt;tt&gt;Set-Cookie2&lt;/tt&gt; value was  received" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the path from which the &lt;tt&gt;Set-Cookie2&lt;/tt&gt; value was  received" name="path"></dev:param>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; when the &lt;tt&gt;Set-Cookie2&lt;/tt&gt; value was  received over secure conection" name="secure"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Header" comment="the &lt;tt&gt;Set-Cookie2&lt;/tt&gt; &lt;tt&gt;Header&lt;/tt&gt; received from the server" name="header"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="org.apache.commons.httpclient.dr1_0_0.Cookie[]" name="parse">
				<dev:params>
					<dev:param type="java.lang.String" name="host"></dev:param>
					<dev:param type="int" name="port"></dev:param>
					<dev:param type="java.lang.String" name="path"></dev:param>
					<dev:param type="boolean" name="secure"></dev:param>
					<dev:param type="java.lang.String" name="header"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="parseAttribute">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.NameValuePair" comment="{@link org.apache.commons.httpclient.dr1_0_0.NameValuePair} cookie attribute from the  &lt;tt&gt;Set-Cookie2&lt;/tt&gt; header." name="attribute"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Cookie" comment="{@link org.apache.commons.httpclient.dr1_0_0.Cookie} to be updated" name="cookie"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="validate">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host from which the {@link org.apache.commons.httpclient.dr1_0_0.Cookie} was received" name="host"></dev:param>
					<dev:param type="int" comment="the port from which the {@link org.apache.commons.httpclient.dr1_0_0.Cookie} was received" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the path from which the {@link org.apache.commons.httpclient.dr1_0_0.Cookie} was received" name="path"></dev:param>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; when the {@link org.apache.commons.httpclient.dr1_0_0.Cookie} was received using a  secure connection" name="secure"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Cookie" comment="The cookie to validate" name="cookie"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="true if the cookie matches the criterium" type="boolean" name="match">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host to which the request is being submitted" name="host"></dev:param>
					<dev:param type="int" comment="the port to which the request is being submitted (ignored)" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the path to which the request is being submitted" name="path"></dev:param>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; if the request is using a secure connection" name="secure"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Cookie" name="cookie"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="a string suitable for sending in a &lt;tt&gt;&quot;Cookie&quot;&lt;/tt&gt; header." type="java.lang.String" name="formatCookie">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Cookie" comment="a {@link org.apache.commons.httpclient.dr1_0_0.Cookie} to be formatted as string" name="cookie"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="a string suitable for sending in a Cookie header." type="java.lang.String" name="formatCookies">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Cookie[]" comment="an array of {@link org.apache.commons.httpclient.dr1_0_0.Cookie}s to be formatted" name="cookies"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="true if the specified host matches the given domain." type="boolean" name="domainMatch">
				<dev:params>
					<dev:param type="java.lang.String" comment="host name where cookie is received from or being sent to." name="host"></dev:param>
					<dev:param type="java.lang.String" comment="The cookie domain attribute." name="domain"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="int" name="getVersion"></dev:method>
			<dev:method visibility="public" type="org.apache.commons.httpclient.dr1_0_0.Header" name="getVersionHeader"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.cookie.dr1_0_0.CookieSpecBase" name="org.apache.commons.httpclient.cookie.dr1_0_0.RFC2109Spec">
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;set-cookie&quot;" const="set-cookie" name="SET_COOKIE_KEY" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="RFC2109Spec"></dev:constructor>
			<dev:method visibility="public" type="void" name="parseAttribute">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.NameValuePair" comment="{@link NameValuePair} cookie attribute from the  &lt;tt&gt;Set- Cookie&lt;/tt&gt;" name="attribute"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Cookie" comment="{@link Cookie} to be updated" name="cookie"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="validate">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host from which the {@link Cookie} was received" name="host"></dev:param>
					<dev:param type="int" comment="the port from which the {@link Cookie} was received" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the path from which the {@link Cookie} was received" name="path"></dev:param>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; when the {@link Cookie} was received using a  secure connection" name="secure"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Cookie" comment="The cookie to validate" name="cookie"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="true if the specified host matches the given domain." type="boolean" name="domainMatch">
				<dev:params>
					<dev:param type="java.lang.String" comment="The target host." name="host"></dev:param>
					<dev:param type="java.lang.String" comment="The cookie domain attribute." name="domain"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="a string suitable for sending in a &lt;tt&gt;&quot;Cookie&quot;&lt;/tt&gt; header." type="java.lang.String" name="formatCookie">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Cookie" comment="a {@link Cookie} to be formatted as string" name="cookie"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="a string suitable for sending in a Cookie header." type="java.lang.String" name="formatCookies">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Cookie[]" comment="an array of {@link Cookie}s to be formatted" name="cookies"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.cookie.dr1_0_0.CookieSpecBase" name="org.apache.commons.httpclient.cookie.dr1_0_0.NetscapeDraftSpec">
		<dev:methods>
			<dev:constructor visibility="public" name="NetscapeDraftSpec"></dev:constructor>
			<dev:method visibility="public" returncomment="an array of &lt;tt&gt;Cookie&lt;/tt&gt;s parsed from the Set-Cookie value" type="org.apache.commons.httpclient.dr1_0_0.Cookie[]" name="parse">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host from which the &lt;tt&gt;Set-Cookie&lt;/tt&gt; value was  received" name="host"></dev:param>
					<dev:param type="int" comment="the port from which the &lt;tt&gt;Set-Cookie&lt;/tt&gt; value was  received" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the path from which the &lt;tt&gt;Set-Cookie&lt;/tt&gt; value was  received" name="path"></dev:param>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; when the &lt;tt&gt;Set-Cookie&lt;/tt&gt; value was  received over secure conection" name="secure"></dev:param>
					<dev:param type="java.lang.String" comment="the &lt;tt&gt;Set-Cookie&lt;/tt&gt; received from the server" name="header"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="parseAttribute">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.NameValuePair" comment="{@link NameValuePair} cookie attribute from the  &lt;tt&gt;Set- Cookie&lt;/tt&gt;" name="attribute"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Cookie" comment="{@link Cookie} to be updated" name="cookie"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="true if the specified host matches the given domain." type="boolean" name="domainMatch">
				<dev:params>
					<dev:param type="java.lang.String" comment="The target host." name="host"></dev:param>
					<dev:param type="java.lang.String" comment="The cookie domain attribute." name="domain"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="validate">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host from which the {@link Cookie} was received" name="host"></dev:param>
					<dev:param type="int" comment="the port from which the {@link Cookie} was received" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the path from which the {@link Cookie} was received" name="path"></dev:param>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; when the {@link Cookie} was received   using a secure connection" name="secure"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Cookie" comment="The cookie to validate." name="cookie"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.dr1_0_0.ProtocolException" serializable="true" name="org.apache.commons.httpclient.cookie.dr1_0_0.MalformedCookieException"></dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.cookie.dr1_0_0.IgnoreCookiesSpec">
		<dev:extends>
			<dev:extend name="org.apache.commons.httpclient.cookie.dr1_0_0.CookieSpec"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="IgnoreCookiesSpec"></dev:constructor>
			<dev:method visibility="public" type="org.apache.commons.httpclient.dr1_0_0.Cookie[]" name="parse">
				<dev:params>
					<dev:param type="java.lang.String" name="host"></dev:param>
					<dev:param type="int" name="port"></dev:param>
					<dev:param type="java.lang.String" name="path"></dev:param>
					<dev:param type="boolean" name="secure"></dev:param>
					<dev:param type="java.lang.String" name="header"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;null&lt;/code&gt;" type="java.util.Collection" name="getValidDateFormats"></dev:method>
			<dev:method visibility="public" type="void" name="setValidDateFormats">
				<dev:params>
					<dev:param type="java.util.Collection" name="datepatterns"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;null&lt;/code&gt;" type="java.lang.String" name="formatCookie">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Cookie" name="cookie"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;null&lt;/code&gt;" type="org.apache.commons.httpclient.dr1_0_0.Header" name="formatCookieHeader">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Cookie" name="cookie"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;null&lt;/code&gt;" type="org.apache.commons.httpclient.dr1_0_0.Header" name="formatCookieHeader">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Cookie[]" name="cookies"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;null&lt;/code&gt;" type="java.lang.String" name="formatCookies">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Cookie[]" name="cookies"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;false&lt;/code&gt;" type="boolean" name="match">
				<dev:params>
					<dev:param type="java.lang.String" name="host"></dev:param>
					<dev:param type="int" name="port"></dev:param>
					<dev:param type="java.lang.String" name="path"></dev:param>
					<dev:param type="boolean" name="secure"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Cookie" name="cookie"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="org.apache.commons.httpclient.dr1_0_0.Cookie[]" name="match">
				<dev:params>
					<dev:param type="java.lang.String" name="host"></dev:param>
					<dev:param type="int" name="port"></dev:param>
					<dev:param type="java.lang.String" name="path"></dev:param>
					<dev:param type="boolean" name="secure"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Cookie[]" name="cookies"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="org.apache.commons.httpclient.dr1_0_0.Cookie[]" name="parse">
				<dev:params>
					<dev:param type="java.lang.String" name="host"></dev:param>
					<dev:param type="int" name="port"></dev:param>
					<dev:param type="java.lang.String" name="path"></dev:param>
					<dev:param type="boolean" name="secure"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Header" name="header"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="parseAttribute">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.NameValuePair" name="attribute"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Cookie" name="cookie"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="validate">
				<dev:params>
					<dev:param type="java.lang.String" name="host"></dev:param>
					<dev:param type="int" name="port"></dev:param>
					<dev:param type="java.lang.String" name="path"></dev:param>
					<dev:param type="boolean" name="secure"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Cookie" name="cookie"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;false&lt;/code&gt;" type="boolean" name="domainMatch">
				<dev:params>
					<dev:param type="java.lang.String" name="host"></dev:param>
					<dev:param type="java.lang.String" name="domain"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;false&lt;/code&gt;" type="boolean" name="pathMatch">
				<dev:params>
					<dev:param type="java.lang.String" name="path"></dev:param>
					<dev:param type="java.lang.String" name="topmostPath"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class abstract="true" name="org.apache.commons.httpclient.cookie.dr1_0_0.CookieVersionSupport"></dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.cookie.dr1_0_0.CookieSpecBase">
		<dev:extends>
			<dev:extend name="org.apache.commons.httpclient.cookie.dr1_0_0.CookieSpec"></dev:extend>
		</dev:extends>
		<dev:fields></dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="CookieSpecBase"></dev:constructor>
			<dev:method visibility="public" returncomment="an array of &lt;tt&gt;Cookie&lt;/tt&gt;s parsed from the Set-Cookie value" type="org.apache.commons.httpclient.dr1_0_0.Cookie[]" name="parse">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host from which the &lt;tt&gt;Set-Cookie&lt;/tt&gt; value was  received" name="host"></dev:param>
					<dev:param type="int" comment="the port from which the &lt;tt&gt;Set-Cookie&lt;/tt&gt; value was  received" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the path from which the &lt;tt&gt;Set-Cookie&lt;/tt&gt; value was  received" name="path"></dev:param>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; when the &lt;tt&gt;Set-Cookie&lt;/tt&gt; value was  received over secure conection" name="secure"></dev:param>
					<dev:param type="java.lang.String" comment="the &lt;tt&gt;Set-Cookie&lt;/tt&gt; received from the server" name="header"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="an array of &lt;tt&gt;Cookie&lt;/tt&gt;s parsed from the &lt;tt&gt;&quot;Set-Cookie&quot;  &lt;/tt&gt; header" type="org.apache.commons.httpclient.dr1_0_0.Cookie[]" name="parse">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host from which the &lt;tt&gt;Set-Cookie&lt;/tt&gt; header was  received" name="host"></dev:param>
					<dev:param type="int" comment="the port from which the &lt;tt&gt;Set-Cookie&lt;/tt&gt; header was  received" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the path from which the &lt;tt&gt;Set-Cookie&lt;/tt&gt; header was  received" name="path"></dev:param>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; when the &lt;tt&gt;Set-Cookie&lt;/tt&gt; header was  received over secure conection" name="secure"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Header" comment="the &lt;tt&gt;Set-Cookie&lt;/tt&gt; received from the server" name="header"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="parseAttribute">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.NameValuePair" comment="{@link HeaderElement} cookie attribute from the  &lt;tt&gt;Set- Cookie&lt;/tt&gt;" name="attribute"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Cookie" comment="{@link Cookie} to be updated" name="cookie"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="java.util.Collection" name="getValidDateFormats"></dev:method>
			<dev:method visibility="public" type="void" name="setValidDateFormats">
				<dev:params>
					<dev:param type="java.util.Collection" name="datepatterns"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="validate">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host from which the {@link Cookie} was received" name="host"></dev:param>
					<dev:param type="int" comment="the port from which the {@link Cookie} was received" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the path from which the {@link Cookie} was received" name="path"></dev:param>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; when the {@link Cookie} was received using a  secure connection" name="secure"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Cookie" comment="The cookie to validate." name="cookie"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="true if the cookie matches the criterium" type="boolean" name="match">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host to which the request is being submitted" name="host"></dev:param>
					<dev:param type="int" comment="the port to which the request is being submitted (ignored)" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the path to which the request is being submitted" name="path"></dev:param>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; if the request is using a secure connection" name="secure"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Cookie" comment="{@link Cookie} to be matched" name="cookie"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="true if the specified host matches the given domain." type="boolean" name="domainMatch">
				<dev:params>
					<dev:param type="java.lang.String" comment="The target host." name="host"></dev:param>
					<dev:param type="java.lang.String" comment="The cookie domain attribute." name="domain"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="true if the paths match" type="boolean" name="pathMatch">
				<dev:params>
					<dev:param type="java.lang.String" comment="The target path." name="path"></dev:param>
					<dev:param type="java.lang.String" comment="The cookie path attribute." name="topmostPath"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="an array of &lt;tt&gt;Cookie&lt;/tt&gt;s matching the criterium" type="org.apache.commons.httpclient.dr1_0_0.Cookie[]" name="match">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host to which the request is being submitted" name="host"></dev:param>
					<dev:param type="int" comment="the port to which the request is being submitted (currently  ignored)" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the path to which the request is being submitted" name="path"></dev:param>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; if the request is using a secure protocol" name="secure"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Cookie[]" comment="an array of &lt;tt&gt;Cookie&lt;/tt&gt;s to be matched" name="cookies"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="a string suitable for sending in a &lt;tt&gt;&quot;Cookie&quot;&lt;/tt&gt; header." type="java.lang.String" name="formatCookie">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Cookie" comment="a {@link Cookie} to be formatted as string" name="cookie"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="a string suitable for sending in a Cookie header." type="java.lang.String" name="formatCookies">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Cookie[]" comment="an array of {@link Cookie}s to be formatted" name="cookies"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="a &lt;tt&gt;&quot;Cookie&quot;&lt;/tt&gt; {@link Header}." type="org.apache.commons.httpclient.dr1_0_0.Header" name="formatCookieHeader">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Cookie[]" comment="an array of {@link Cookie}s to be formatted as a &lt;tt&gt;&quot;  Cookie&quot;&lt;/tt&gt; header" name="cookies"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="a Cookie header." type="org.apache.commons.httpclient.dr1_0_0.Header" name="formatCookieHeader">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Cookie" comment="&lt;tt&gt;Cookie&lt;/tt&gt;s to be formatted as a &lt;tt&gt;Cookie&lt;/tt&gt;  header" name="cookie"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class abstract="true" name="org.apache.commons.httpclient.cookie.dr1_0_0.CookieSpec">
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;/&quot;" const="/" name="PATH_DELIM" static="true"></dev:field>
			<dev:field visibility="public" fulltype="char" type="char" final="true" name="PATH_DELIM_CHAR" static="true"></dev:field>
		</dev:fields>
	</dev:class>
	<dev:class superclass="java.lang.Object" abstract="true" name="org.apache.commons.httpclient.cookie.dr1_0_0.CookiePolicy">
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;compatibility&quot;" const="compatibility" name="BROWSER_COMPATIBILITY" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;netscape&quot;" const="netscape" name="NETSCAPE" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;rfc2109&quot;" const="rfc2109" name="RFC_2109" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;rfc2965&quot;" const="rfc2965" name="RFC_2965" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;ignoreCookies&quot;" const="ignoreCookies" name="IGNORE_COOKIES" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;default&quot;" const="default" name="DEFAULT" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="0" const="0" name="COMPATIBILITY" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="1" const="1" name="NETSCAPE_DRAFT" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="2" const="2" name="RFC2109" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="3" const="3" name="RFC2965" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="CookiePolicy"></dev:constructor>
			<dev:method visibility="public" type="void" name="registerCookieSpec" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the identifier for this specification" name="id"></dev:param>
					<dev:param type="java.lang.Class" comment="the {@link CookieSpec cookie specification} class to register" name="clazz"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="unregisterCookieSpec" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the ID of the {@link CookieSpec cookie specification} to unregister" name="id"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="{@link CookieSpec cookie specification}" type="org.apache.commons.httpclient.cookie.dr1_0_0.CookieSpec" name="getCookieSpec" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the {@link CookieSpec cookie specification} ID" name="id"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="default cookie policy" type="int" name="getDefaultPolicy" static="true"></dev:method>
			<dev:method visibility="public" type="void" name="setDefaultPolicy" static="true">
				<dev:params>
					<dev:param type="int" comment="new default cookie policy" name="policy"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="cookie specification interface for the given policy" type="org.apache.commons.httpclient.cookie.dr1_0_0.CookieSpec" name="getSpecByPolicy" static="true">
				<dev:params>
					<dev:param type="int" comment="cookie policy to get the CookieSpec for" name="policy"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="default {@link CookieSpec cookie specification}" type="org.apache.commons.httpclient.cookie.dr1_0_0.CookieSpec" name="getDefaultSpec" static="true"></dev:method>
			<dev:method visibility="public" returncomment="cookie specification interface intended for processing    cookies with the given version" type="org.apache.commons.httpclient.cookie.dr1_0_0.CookieSpec" name="getSpecByVersion" static="true">
				<dev:params>
					<dev:param type="int" comment="the cookie version to get the spec for" name="ver"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="cookie specification interface that provides high compatibilty   with common cookie management of popular HTTP agents" type="org.apache.commons.httpclient.cookie.dr1_0_0.CookieSpec" name="getCompatibilitySpec" static="true"></dev:method>
			<dev:method visibility="public" returncomment="array of registered cookie policy names" type="java.lang.String[]" name="getRegisteredCookieSpecs" static="true"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.cookie.dr1_0_0.CookiePathComparator">
		<dev:extends>
			<dev:extend name="java.util.Comparator"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="CookiePathComparator"></dev:constructor>
			<dev:method visibility="public" type="int" name="compare">
				<dev:params>
					<dev:param type="java.lang.Object" name="o1"></dev:param>
					<dev:param type="java.lang.Object" name="o2"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.cookie.dr1_0_0.CookieOrigin">
		<dev:methods>
			<dev:constructor visibility="public" name="CookieOrigin">
				<dev:params>
					<dev:param type="java.lang.String" name="host"></dev:param>
					<dev:param type="int" name="port"></dev:param>
					<dev:param type="java.lang.String" name="path"></dev:param>
					<dev:param type="boolean" name="secure"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="java.lang.String" name="getHost"></dev:method>
			<dev:method visibility="public" type="java.lang.String" name="getPath"></dev:method>
			<dev:method visibility="public" type="int" name="getPort"></dev:method>
			<dev:method visibility="public" type="boolean" name="isSecure"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class abstract="true" name="org.apache.commons.httpclient.cookie.dr1_0_0.CookieAttributeHandler"></dev:class>
	<dev:class superclass="org.apache.commons.httpclient.dr1_0_0.Cookie" serializable="true" name="org.apache.commons.httpclient.cookie.dr1_0_0.Cookie2">
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;domain&quot;" const="domain" name="DOMAIN" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;path&quot;" const="path" name="PATH" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;port&quot;" const="port" name="PORT" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;version&quot;" const="version" name="VERSION" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;secure&quot;" const="secure" name="SECURE" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;max-age&quot;" const="max-age" name="MAXAGE" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;comment&quot;" const="comment" name="COMMENT" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;commenturl&quot;" const="commenturl" name="COMMENTURL" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;discard&quot;" const="discard" name="DISCARD" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="Cookie2"></dev:constructor>
			<dev:constructor visibility="public" name="Cookie2">
				<dev:params>
					<dev:param type="java.lang.String" comment="the domain this cookie can be sent to" name="domain"></dev:param>
					<dev:param type="java.lang.String" comment="the cookie name" name="name"></dev:param>
					<dev:param type="java.lang.String" comment="the cookie value" name="value"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="Cookie2">
				<dev:params>
					<dev:param type="java.lang.String" comment="the domain this cookie can be sent to" name="domain"></dev:param>
					<dev:param type="java.lang.String" comment="the cookie name" name="name"></dev:param>
					<dev:param type="java.lang.String" comment="the cookie value" name="value"></dev:param>
					<dev:param type="java.lang.String" comment="the path prefix for which this cookie can be sent" name="path"></dev:param>
					<dev:param type="java.util.Date" comment="the {@link Date} at which this cookie expires,                 or &lt;tt&gt;null&lt;/tt&gt; if the cookie expires at the end                 of the session" name="expires"></dev:param>
					<dev:param type="boolean" comment="if true this cookie can only be sent over secure  connections" name="secure"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="Cookie2">
				<dev:params>
					<dev:param type="java.lang.String" comment="the domain this cookie can be sent to" name="domain"></dev:param>
					<dev:param type="java.lang.String" comment="the cookie name" name="name"></dev:param>
					<dev:param type="java.lang.String" comment="the cookie value" name="value"></dev:param>
					<dev:param type="java.lang.String" comment="the path prefix for which this cookie can be sent" name="path"></dev:param>
					<dev:param type="java.util.Date" comment="the {@link Date} at which this cookie expires,                 or &lt;tt&gt;null&lt;/tt&gt; if the cookie expires at the end                 of the session" name="expires"></dev:param>
					<dev:param type="boolean" comment="if true this cookie can only be sent over secure  connections" name="secure"></dev:param>
					<dev:param type="int[]" comment="the ports for which this cookie can be sent" name="ports"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="java.lang.String" name="getCommentURL"></dev:method>
			<dev:method visibility="public" type="void" name="setCommentURL">
				<dev:params>
					<dev:param type="java.lang.String" comment="" name="commentURL"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="int[]" name="getPorts"></dev:method>
			<dev:method visibility="public" type="void" name="setPorts">
				<dev:params>
					<dev:param type="int[]" comment="" name="ports"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setDiscard">
				<dev:params>
					<dev:param type="boolean" name="toDiscard"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;false&lt;/tt&gt; if the cookie should be discarded at the end          of the &quot;session&quot;; &lt;tt&gt;true&lt;/tt&gt; otherwise" type="boolean" name="isPersistent"></dev:method>
			<dev:method visibility="public" type="void" name="setPortAttributeSpecified">
				<dev:params>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; if port attribute is specified in response  header." name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; if cookie port attribute was specified in the  &lt;tt&gt;Set-Cookie2&lt;/tt&gt; header." type="boolean" name="isPortAttributeSpecified"></dev:method>
			<dev:method visibility="public" type="void" name="setPortAttributeBlank">
				<dev:params>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; if port attribute is specified as blank in response  header." name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; if the port attribute in &lt;tt&gt;Set-Cookie2&lt;/tt&gt; header  had no value (was of the form Port=&quot;&quot;)." type="boolean" name="isPortAttributeBlank"></dev:method>
			<dev:method visibility="public" type="void" name="setVersionAttributeSpecified">
				<dev:params>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; if version attribute is specified in response  header." name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; if cookie version attribute was specified in the  &lt;tt&gt;Set-Cookie2&lt;/tt&gt; header." type="boolean" name="isVersionAttributeSpecified"></dev:method>
			<dev:method visibility="public" returncomment="string." type="java.lang.String" name="toExternalForm"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.dr1_0_0.UsernamePasswordCredentials">
		<dev:extends>
			<dev:extend name="org.apache.commons.httpclient.dr1_0_0.Credentials"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="UsernamePasswordCredentials"></dev:constructor>
			<dev:constructor visibility="public" name="UsernamePasswordCredentials">
				<dev:params>
					<dev:param type="java.lang.String" comment="the username:password formed string" name="usernamePassword"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="UsernamePasswordCredentials">
				<dev:params>
					<dev:param type="java.lang.String" comment="the user name" name="userName"></dev:param>
					<dev:param type="java.lang.String" comment="the password" name="password"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="void" name="setUserName">
				<dev:params>
					<dev:param type="java.lang.String" comment="" name="userName"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the userName" type="java.lang.String" name="getUserName"></dev:method>
			<dev:method visibility="public" type="void" name="setPassword">
				<dev:params>
					<dev:param type="java.lang.String" comment="" name="password"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the password" type="java.lang.String" name="getPassword"></dev:method>
			<dev:method visibility="public" returncomment="the username:password formed string" type="java.lang.String" name="toString"></dev:method>
			<dev:method visibility="public" returncomment="The hash code including user name and password." type="int" name="hashCode"></dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt; if the object is equivalent." type="boolean" name="equals">
				<dev:params>
					<dev:param type="java.lang.Object" comment="The other object to compare with." name="o"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.dr1_0_0.HttpException" serializable="true" name="org.apache.commons.httpclient.dr1_0_0.URIException">
		<dev:fields>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="0" const="0" name="UNKNOWN" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="1" const="1" name="PARSING" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="2" const="2" name="UNSUPPORTED_ENCODING" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="3" const="3" name="ESCAPING" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="4" const="4" name="PUNYCODE" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="URIException"></dev:constructor>
			<dev:constructor visibility="public" name="URIException">
				<dev:params>
					<dev:param type="int" comment="the reason code" name="reasonCode"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="URIException">
				<dev:params>
					<dev:param type="int" comment="the reason code" name="reasonCode"></dev:param>
					<dev:param type="java.lang.String" comment="the reason" name="reason"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="URIException">
				<dev:params>
					<dev:param type="java.lang.String" comment="the reason" name="reason"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="the reason code" type="int" name="getReasonCode"></dev:method>
			<dev:method visibility="public" type="void" name="setReasonCode">
				<dev:params>
					<dev:param type="int" comment="the reason code" name="reasonCode"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the reason message" type="java.lang.String" name="getReason"></dev:method>
			<dev:method visibility="public" type="void" name="setReason">
				<dev:params>
					<dev:param type="java.lang.String" comment="the reason message" name="reason"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" serializable="true" name="org.apache.commons.httpclient.dr1_0_0.URI">
		<dev:extends>
			<dev:extend name="java.lang.Cloneable"></dev:extend>
			<dev:extend name="java.lang.Comparable"></dev:extend>
			<dev:extend name="java.io.Serializable"></dev:extend>
		</dev:extends>
		<dev:fields>
			<dev:field visibility="public" fulltype="java.util.BitSet" type="BitSet" final="true" name="within_userinfo" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.util.BitSet" type="BitSet" final="true" name="control" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.util.BitSet" type="BitSet" final="true" name="space" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.util.BitSet" type="BitSet" final="true" name="delims" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.util.BitSet" type="BitSet" final="true" name="unwise" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.util.BitSet" type="BitSet" final="true" name="disallowed_rel_path" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.util.BitSet" type="BitSet" final="true" name="disallowed_opaque_part" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.util.BitSet" type="BitSet" final="true" name="allowed_authority" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.util.BitSet" type="BitSet" final="true" name="allowed_opaque_part" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.util.BitSet" type="BitSet" final="true" name="allowed_reg_name" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.util.BitSet" type="BitSet" final="true" name="allowed_userinfo" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.util.BitSet" type="BitSet" final="true" name="allowed_within_userinfo" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.util.BitSet" type="BitSet" final="true" name="allowed_IPv6reference" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.util.BitSet" type="BitSet" final="true" name="allowed_host" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.util.BitSet" type="BitSet" final="true" name="allowed_within_authority" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.util.BitSet" type="BitSet" final="true" name="allowed_abs_path" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.util.BitSet" type="BitSet" final="true" name="allowed_rel_path" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.util.BitSet" type="BitSet" final="true" name="allowed_within_path" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.util.BitSet" type="BitSet" final="true" name="allowed_query" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.util.BitSet" type="BitSet" final="true" name="allowed_within_query" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.util.BitSet" type="BitSet" final="true" name="allowed_fragment" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="URI">
				<dev:params>
					<dev:param type="java.lang.String" comment="URI character sequence" name="s"></dev:param>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; if URI character sequence is in escaped form.                  &lt;tt&gt;false&lt;/tt&gt; otherwise." name="escaped"></dev:param>
					<dev:param type="java.lang.String" comment="the charset string to do escape encoding, if required" name="charset"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="URI">
				<dev:params>
					<dev:param type="java.lang.String" comment="URI character sequence" name="s"></dev:param>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; if URI character sequence is in escaped form.                  &lt;tt&gt;false&lt;/tt&gt; otherwise." name="escaped"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="URI">
				<dev:params>
					<dev:param type="char[]" comment="the URI character sequence" name="escaped"></dev:param>
					<dev:param type="java.lang.String" comment="the charset string to do escape encoding" name="charset"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="URI">
				<dev:params>
					<dev:param type="char[]" comment="the URI character sequence" name="escaped"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="URI">
				<dev:params>
					<dev:param type="java.lang.String" comment="the string to be represented to URI character sequence  It is one of absoluteURI and relativeURI." name="original"></dev:param>
					<dev:param type="java.lang.String" comment="the charset string to do escape encoding" name="charset"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="URI">
				<dev:params>
					<dev:param type="java.lang.String" comment="the string to be represented to URI character sequence  It is one of absoluteURI and relativeURI." name="original"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="URI">
				<dev:params>
					<dev:param type="java.lang.String" comment="the scheme string" name="scheme"></dev:param>
					<dev:param type="java.lang.String" comment="scheme_specific_part" name="schemeSpecificPart"></dev:param>
					<dev:param type="java.lang.String" comment="the fragment string" name="fragment"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="URI">
				<dev:params>
					<dev:param type="java.lang.String" comment="the scheme string" name="scheme"></dev:param>
					<dev:param type="java.lang.String" comment="the authority string" name="authority"></dev:param>
					<dev:param type="java.lang.String" comment="the path string" name="path"></dev:param>
					<dev:param type="java.lang.String" comment="the query string" name="query"></dev:param>
					<dev:param type="java.lang.String" comment="the fragment string" name="fragment"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="URI">
				<dev:params>
					<dev:param type="java.lang.String" comment="the scheme string" name="scheme"></dev:param>
					<dev:param type="java.lang.String" comment="the userinfo string" name="userinfo"></dev:param>
					<dev:param type="java.lang.String" comment="the host string" name="host"></dev:param>
					<dev:param type="int" comment="the port number" name="port"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="URI">
				<dev:params>
					<dev:param type="java.lang.String" comment="the scheme string" name="scheme"></dev:param>
					<dev:param type="java.lang.String" comment="the userinfo string" name="userinfo"></dev:param>
					<dev:param type="java.lang.String" comment="the host string" name="host"></dev:param>
					<dev:param type="int" comment="the port number" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the path string" name="path"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="URI">
				<dev:params>
					<dev:param type="java.lang.String" comment="the scheme string" name="scheme"></dev:param>
					<dev:param type="java.lang.String" comment="the userinfo string" name="userinfo"></dev:param>
					<dev:param type="java.lang.String" comment="the host string" name="host"></dev:param>
					<dev:param type="int" comment="the port number" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the path string" name="path"></dev:param>
					<dev:param type="java.lang.String" comment="the query string" name="query"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="URI">
				<dev:params>
					<dev:param type="java.lang.String" comment="the scheme string" name="scheme"></dev:param>
					<dev:param type="java.lang.String" comment="the userinfo string" name="userinfo"></dev:param>
					<dev:param type="java.lang.String" comment="the host string" name="host"></dev:param>
					<dev:param type="int" comment="the port number" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the path string" name="path"></dev:param>
					<dev:param type="java.lang.String" comment="the query string" name="query"></dev:param>
					<dev:param type="java.lang.String" comment="the fragment string" name="fragment"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="URI">
				<dev:params>
					<dev:param type="java.lang.String" comment="the scheme string" name="scheme"></dev:param>
					<dev:param type="java.lang.String" comment="the host string" name="host"></dev:param>
					<dev:param type="java.lang.String" comment="the path string" name="path"></dev:param>
					<dev:param type="java.lang.String" comment="the fragment string" name="fragment"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="URI">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.URI" comment="the base URI" name="base"></dev:param>
					<dev:param type="java.lang.String" comment="the relative URI string" name="relative"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="URI">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.URI" comment="the base URI" name="base"></dev:param>
					<dev:param type="java.lang.String" comment="the relative URI string" name="relative"></dev:param>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; if URI character sequence is in escaped form.                  &lt;tt&gt;false&lt;/tt&gt; otherwise." name="escaped"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="URI">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.URI" comment="the base URI" name="base"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.URI" comment="the relative URI" name="relative"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="true iif this URI is absoluteURI" type="boolean" name="isAbsoluteURI"></dev:method>
			<dev:method visibility="public" returncomment="true iif this URI is relativeURI" type="boolean" name="isRelativeURI"></dev:method>
			<dev:method visibility="public" returncomment="true iif the absoluteURI is hier_part" type="boolean" name="isHierPart"></dev:method>
			<dev:method visibility="public" returncomment="true iif the absoluteURI is opaque_part" type="boolean" name="isOpaquePart"></dev:method>
			<dev:method visibility="public" returncomment="true iif the relativeURI or heir_part is net_path" type="boolean" name="isNetPath"></dev:method>
			<dev:method visibility="public" returncomment="true iif the relativeURI or hier_part is abs_path" type="boolean" name="isAbsPath"></dev:method>
			<dev:method visibility="public" returncomment="true iif the relativeURI is rel_path" type="boolean" name="isRelPath"></dev:method>
			<dev:method visibility="public" returncomment="true iif this URI has authority" type="boolean" name="hasAuthority"></dev:method>
			<dev:method visibility="public" returncomment="true iif the authority component is reg_name" type="boolean" name="isRegName"></dev:method>
			<dev:method visibility="public" returncomment="true iif the authority component is server" type="boolean" name="isServer"></dev:method>
			<dev:method visibility="public" returncomment="true iif this URI has userinfo" type="boolean" name="hasUserinfo"></dev:method>
			<dev:method visibility="public" returncomment="true iif the host part is hostname" type="boolean" name="isHostname"></dev:method>
			<dev:method visibility="public" returncomment="true iif the host part is IPv4address" type="boolean" name="isIPv4address"></dev:method>
			<dev:method visibility="public" returncomment="true iif the host part is IPv6reference" type="boolean" name="isIPv6reference"></dev:method>
			<dev:method visibility="public" returncomment="true iif this URI has query" type="boolean" name="hasQuery"></dev:method>
			<dev:method visibility="public" returncomment="true iif this URI has fragment" type="boolean" name="hasFragment"></dev:method>
			<dev:method visibility="public" type="void" name="setDefaultProtocolCharset" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the default charset for each protocol" name="charset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the default charset string" type="java.lang.String" name="getDefaultProtocolCharset" static="true"></dev:method>
			<dev:method visibility="public" returncomment="the protocol charset string" type="java.lang.String" name="getProtocolCharset"></dev:method>
			<dev:method visibility="public" type="void" name="setDefaultDocumentCharset" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the default charset for the document" name="charset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the default charset string" type="java.lang.String" name="getDefaultDocumentCharset" static="true"></dev:method>
			<dev:method visibility="public" returncomment="the default charset string by locale" type="java.lang.String" name="getDefaultDocumentCharsetByLocale" static="true"></dev:method>
			<dev:method visibility="public" returncomment="the default charset string by platform" type="java.lang.String" name="getDefaultDocumentCharsetByPlatform" static="true"></dev:method>
			<dev:method visibility="public" returncomment="the scheme" type="char[]" name="getRawScheme"></dev:method>
			<dev:method visibility="public" returncomment="the scheme  null if undefined scheme" type="java.lang.String" name="getScheme"></dev:method>
			<dev:method visibility="public" type="void" name="setRawAuthority">
				<dev:params>
					<dev:param type="char[]" comment="the raw escaped authority" name="escapedAuthority"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setEscapedAuthority">
				<dev:params>
					<dev:param type="java.lang.String" comment="the escaped authority string" name="escapedAuthority"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the raw-escaped authority" type="char[]" name="getRawAuthority"></dev:method>
			<dev:method visibility="public" returncomment="the escaped authority" type="java.lang.String" name="getEscapedAuthority"></dev:method>
			<dev:method visibility="public" returncomment="the authority" type="java.lang.String" name="getAuthority"></dev:method>
			<dev:method visibility="public" returncomment="the raw-escaped userinfo" type="char[]" name="getRawUserinfo"></dev:method>
			<dev:method visibility="public" returncomment="the escaped userinfo" type="java.lang.String" name="getEscapedUserinfo"></dev:method>
			<dev:method visibility="public" returncomment="the userinfo" type="java.lang.String" name="getUserinfo"></dev:method>
			<dev:method visibility="public" returncomment="the host" type="char[]" name="getRawHost"></dev:method>
			<dev:method visibility="public" returncomment="the host" type="java.lang.String" name="getHost"></dev:method>
			<dev:method visibility="public" returncomment="the port  if -1, it has the default port for the scheme or the server-based  naming authority is not supported in the specific URI." type="int" name="getPort"></dev:method>
			<dev:method visibility="public" type="void" name="setRawPath">
				<dev:params>
					<dev:param type="char[]" comment="the path character sequence" name="escapedPath"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setEscapedPath">
				<dev:params>
					<dev:param type="java.lang.String" comment="the escaped path string" name="escapedPath"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setPath">
				<dev:params>
					<dev:param type="java.lang.String" comment="the path string" name="path"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the raw-escaped current hierarchy level" type="char[]" name="getRawCurrentHierPath"></dev:method>
			<dev:method visibility="public" returncomment="the escaped current hierarchy level" type="java.lang.String" name="getEscapedCurrentHierPath"></dev:method>
			<dev:method visibility="public" returncomment="the current hierarchy level" type="java.lang.String" name="getCurrentHierPath"></dev:method>
			<dev:method visibility="public" returncomment="the raw above hierarchy level" type="char[]" name="getRawAboveHierPath"></dev:method>
			<dev:method visibility="public" returncomment="the raw above hierarchy level" type="java.lang.String" name="getEscapedAboveHierPath"></dev:method>
			<dev:method visibility="public" returncomment="the above hierarchy level" type="java.lang.String" name="getAboveHierPath"></dev:method>
			<dev:method visibility="public" returncomment="the raw-escaped path" type="char[]" name="getRawPath"></dev:method>
			<dev:method visibility="public" returncomment="the escaped path string" type="java.lang.String" name="getEscapedPath"></dev:method>
			<dev:method visibility="public" returncomment="the path string" type="java.lang.String" name="getPath"></dev:method>
			<dev:method visibility="public" returncomment="the raw-escaped basename" type="char[]" name="getRawName"></dev:method>
			<dev:method visibility="public" returncomment="the escaped basename string" type="java.lang.String" name="getEscapedName"></dev:method>
			<dev:method visibility="public" returncomment="the basename string" type="java.lang.String" name="getName"></dev:method>
			<dev:method visibility="public" returncomment="the raw-escaped path and query" type="char[]" name="getRawPathQuery"></dev:method>
			<dev:method visibility="public" returncomment="the escaped path and query string" type="java.lang.String" name="getEscapedPathQuery"></dev:method>
			<dev:method visibility="public" returncomment="the path and query string." type="java.lang.String" name="getPathQuery"></dev:method>
			<dev:method visibility="public" type="void" name="setRawQuery">
				<dev:params>
					<dev:param type="char[]" comment="the raw-escaped query" name="escapedQuery"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setEscapedQuery">
				<dev:params>
					<dev:param type="java.lang.String" comment="the escaped query string" name="escapedQuery"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setQuery">
				<dev:params>
					<dev:param type="java.lang.String" comment="the query string." name="query"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the raw-escaped query" type="char[]" name="getRawQuery"></dev:method>
			<dev:method visibility="public" returncomment="the escaped query string" type="java.lang.String" name="getEscapedQuery"></dev:method>
			<dev:method visibility="public" returncomment="the query string." type="java.lang.String" name="getQuery"></dev:method>
			<dev:method visibility="public" type="void" name="setRawFragment">
				<dev:params>
					<dev:param type="char[]" comment="the raw-escaped fragment" name="escapedFragment"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setEscapedFragment">
				<dev:params>
					<dev:param type="java.lang.String" comment="the escaped fragment string" name="escapedFragment"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setFragment">
				<dev:params>
					<dev:param type="java.lang.String" comment="the fragment string." name="fragment"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the raw-escaped fragment" type="char[]" name="getRawFragment"></dev:method>
			<dev:method visibility="public" returncomment="the escaped fragment string" type="java.lang.String" name="getEscapedFragment"></dev:method>
			<dev:method visibility="public" returncomment="the fragment string" type="java.lang.String" name="getFragment"></dev:method>
			<dev:method visibility="public" type="void" name="normalize"></dev:method>
			<dev:method visibility="public" returncomment="true if two URI objects are equal" type="boolean" name="equals">
				<dev:params>
					<dev:param type="java.lang.Object" comment="an object to compare" name="obj"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="a has code value for this URI" type="int" name="hashCode"></dev:method>
			<dev:method visibility="public" returncomment="0, if it&apos;s same,  -1, if failed, first being compared with in the authority component" type="int" name="compareTo">
				<dev:params>
					<dev:param type="java.lang.Object" comment="the object to be compared." name="obj"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="a clone of this instance" type="java.lang.Object" name="clone"></dev:method>
			<dev:method visibility="public" returncomment="the URI character sequence" type="char[]" name="getRawURI"></dev:method>
			<dev:method visibility="public" returncomment="the escaped URI string" type="java.lang.String" name="getEscapedURI"></dev:method>
			<dev:method visibility="public" returncomment="the original URI string" type="java.lang.String" name="getURI"></dev:method>
			<dev:method visibility="public" returncomment="the URI reference character sequence" type="char[]" name="getRawURIReference"></dev:method>
			<dev:method visibility="public" returncomment="the escaped URI reference string" type="java.lang.String" name="getEscapedURIReference"></dev:method>
			<dev:method visibility="public" returncomment="the original URI reference string" type="java.lang.String" name="getURIReference"></dev:method>
			<dev:method visibility="public" returncomment="the escaped URI string" type="java.lang.String" name="toString"></dev:method>
		</dev:methods>
		<dev:class superclass="java.lang.RuntimeException" serializable="true" name="org.apache.commons.httpclient.dr1_0_0.URI.DefaultCharsetChanged">
			<dev:fields>
				<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="0" const="0" name="UNKNOWN" static="true"></dev:field>
				<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="1" const="1" name="PROTOCOL_CHARSET" static="true"></dev:field>
				<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="2" const="2" name="DOCUMENT_CHARSET" static="true"></dev:field>
			</dev:fields>
			<dev:methods>
				<dev:constructor visibility="public" name="URI.DefaultCharsetChanged">
					<dev:params>
						<dev:param type="int" comment="the reason code" name="reasonCode"></dev:param>
						<dev:param type="java.lang.String" comment="the reason" name="reason"></dev:param>
					</dev:params>
				</dev:constructor>
				<dev:method visibility="public" returncomment="the reason code" type="int" name="getReasonCode"></dev:method>
				<dev:method visibility="public" returncomment="the reason message" type="java.lang.String" name="getReason"></dev:method>
			</dev:methods>
		</dev:class>
		<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.dr1_0_0.URI.LocaleToCharsetMap">
			<dev:methods>
				<dev:constructor visibility="public" name="URI.LocaleToCharsetMap"></dev:constructor>
				<dev:method visibility="public" returncomment="the preferred charset or null if the locale is not  recognized." type="java.lang.String" name="getCharset" static="true">
					<dev:params>
						<dev:param type="java.util.Locale" comment="the locale" name="locale"></dev:param>
					</dev:params>
				</dev:method>
			</dev:methods>
		</dev:class>
	</dev:class>
	<dev:class superclass="java.lang.RuntimeException" serializable="true" name="org.apache.commons.httpclient.dr1_0_0.URI.DefaultCharsetChanged">
		<dev:fields>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="0" const="0" name="UNKNOWN" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="1" const="1" name="PROTOCOL_CHARSET" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="2" const="2" name="DOCUMENT_CHARSET" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="URI.DefaultCharsetChanged">
				<dev:params>
					<dev:param type="int" comment="the reason code" name="reasonCode"></dev:param>
					<dev:param type="java.lang.String" comment="the reason" name="reason"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="the reason code" type="int" name="getReasonCode"></dev:method>
			<dev:method visibility="public" returncomment="the reason message" type="java.lang.String" name="getReason"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.dr1_0_0.URI.LocaleToCharsetMap">
		<dev:methods>
			<dev:constructor visibility="public" name="URI.LocaleToCharsetMap"></dev:constructor>
			<dev:method visibility="public" returncomment="the preferred charset or null if the locale is not  recognized." type="java.lang.String" name="getCharset" static="true">
				<dev:params>
					<dev:param type="java.util.Locale" comment="the locale" name="locale"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.dr1_0_0.StatusLine">
		<dev:methods>
			<dev:constructor visibility="public" name="StatusLine">
				<dev:params>
					<dev:param type="java.lang.String" comment="the status line returned from the HTTP server" name="statusLine"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="the Status-Code" type="int" final="true" name="getStatusCode"></dev:method>
			<dev:method visibility="public" returncomment="the HTTP-Version" type="java.lang.String" final="true" name="getHttpVersion"></dev:method>
			<dev:method visibility="public" returncomment="the Reason-Phrase" type="java.lang.String" final="true" name="getReasonPhrase"></dev:method>
			<dev:method visibility="public" returncomment="a string represenation of this object." type="java.lang.String" final="true" name="toString"></dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; if the line starts with &apos;HTTP&apos;     signature, &lt;tt&gt;false&lt;/tt&gt; otherwise." type="boolean" name="startsWithHTTP" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="string to test" name="s"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.dr1_0_0.SimpleHttpConnectionManager">
		<dev:extends>
			<dev:extend name="org.apache.commons.httpclient.dr1_0_0.HttpConnectionManager"></dev:extend>
		</dev:extends>
		<dev:fields></dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="SimpleHttpConnectionManager">
				<dev:params>
					<dev:param type="boolean" comment="if set &lt;tt&gt;true&lt;/tt&gt;, the connection manager will always     close connections upon release." name="alwaysClose"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="SimpleHttpConnectionManager"></dev:constructor>
			<dev:method visibility="public" type="org.apache.commons.httpclient.dr1_0_0.HttpConnection" name="getConnection">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HostConfiguration" name="hostConfiguration"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt; if stale checking will be enabled on HttpConections" type="boolean" name="isConnectionStaleCheckingEnabled"></dev:method>
			<dev:method visibility="public" type="void" name="setConnectionStaleCheckingEnabled">
				<dev:params>
					<dev:param type="boolean" comment="&lt;code&gt;true&lt;/code&gt; if stale checking will be enabled   on HttpConections" name="connectionStaleCheckingEnabled"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="org.apache.commons.httpclient.dr1_0_0.HttpConnection" name="getConnectionWithTimeout">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HostConfiguration" comment="The host configuration specifying the connection         details." name="hostConfiguration"></dev:param>
					<dev:param type="long" comment="this parameter has no effect. The connection is always returned         immediately." name="timeout"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="org.apache.commons.httpclient.dr1_0_0.HttpConnection" name="getConnection">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HostConfiguration" name="hostConfiguration"></dev:param>
					<dev:param type="long" name="timeout"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="releaseConnection">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpConnection" name="conn"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="org.apache.commons.httpclient.params.dr1_0_0.HttpConnectionManagerParams" name="getParams"></dev:method>
			<dev:method visibility="public" type="void" name="setParams">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.params.dr1_0_0.HttpConnectionManagerParams" name="params"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="closeIdleConnections">
				<dev:params>
					<dev:param type="long" name="idleTimeout"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="shutdown"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.dr1_0_0.ProtocolException" serializable="true" name="org.apache.commons.httpclient.dr1_0_0.RedirectException"></dev:class>
	<dev:class superclass="org.apache.commons.httpclient.dr1_0_0.HttpHost" name="org.apache.commons.httpclient.dr1_0_0.ProxyHost">
		<dev:methods>
			<dev:constructor visibility="public" name="ProxyHost">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.ProxyHost" comment="the HTTP host to copy details from" name="httpproxy"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="ProxyHost">
				<dev:params>
					<dev:param type="java.lang.String" comment="the hostname (IP or DNS name). Can be &lt;code&gt;null&lt;/code&gt;." name="hostname"></dev:param>
					<dev:param type="int" comment="the port. Value &lt;code&gt;-1&lt;/code&gt; can be used to set default protocol port" name="port"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="ProxyHost">
				<dev:params>
					<dev:param type="java.lang.String" comment="the hostname (IP or DNS name). Can be &lt;code&gt;null&lt;/code&gt;." name="hostname"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="java.lang.Object" name="clone"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.dr1_0_0.ProxyClient">
		<dev:methods>
			<dev:constructor visibility="public" name="ProxyClient"></dev:constructor>
			<dev:constructor visibility="public" name="ProxyClient">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.params.dr1_0_0.HttpClientParams" comment="The {@link HttpClientParams parameters} to use." name="params"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="the shared client state" type="org.apache.commons.httpclient.dr1_0_0.HttpState" name="getState"></dev:method>
			<dev:method visibility="public" type="void" name="setState">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpState" comment="the new {@link HttpState HTTP state} for the client" name="state"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="{@link HostConfiguration host configuration}" type="org.apache.commons.httpclient.dr1_0_0.HostConfiguration" name="getHostConfiguration"></dev:method>
			<dev:method visibility="public" type="void" name="setHostConfiguration">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HostConfiguration" comment="The {@link HostConfiguration host configuration} to set" name="hostConfiguration"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="org.apache.commons.httpclient.params.dr1_0_0.HttpClientParams" name="getParams"></dev:method>
			<dev:method visibility="public" type="void" name="setParams">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.params.dr1_0_0.HttpClientParams" name="params"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the connect response" type="org.apache.commons.httpclient.dr1_0_0.ProxyClient.ConnectResponse" name="connect"></dev:method>
		</dev:methods>
		<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.dr1_0_0.ProxyClient.ConnectResponse"></dev:class>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.dr1_0_0.ProxyClient.ConnectResponse"></dev:class>
	<dev:class superclass="org.apache.commons.httpclient.dr1_0_0.HttpException" serializable="true" name="org.apache.commons.httpclient.dr1_0_0.ProtocolException"></dev:class>
	<dev:class superclass="org.apache.commons.httpclient.dr1_0_0.UsernamePasswordCredentials" name="org.apache.commons.httpclient.dr1_0_0.NTCredentials">
		<dev:methods>
			<dev:constructor visibility="public" name="NTCredentials"></dev:constructor>
			<dev:constructor visibility="public" name="NTCredentials">
				<dev:params>
					<dev:param type="java.lang.String" comment="The user name.  This should not include the domain to authenticate with.  For example: &quot;user&quot; is correct whereas &quot;DOMAIN\\user&quot; is not." name="userName"></dev:param>
					<dev:param type="java.lang.String" comment="The password." name="password"></dev:param>
					<dev:param type="java.lang.String" comment="The host the authentication request is originating from.  Essentially, the  computer name for this machine." name="host"></dev:param>
					<dev:param type="java.lang.String" comment="The domain to authenticate within." name="domain"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="void" name="setDomain">
				<dev:params>
					<dev:param type="java.lang.String" comment="the NT domain to authenticate in." name="domain"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="String the domain these credentials are intended to authenticate with." type="java.lang.String" name="getDomain"></dev:method>
			<dev:method visibility="public" type="void" name="setHost">
				<dev:params>
					<dev:param type="java.lang.String" comment="the Host the user is logged into." name="host"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="String the host the user is logged into." type="java.lang.String" name="getHost"></dev:method>
			<dev:method visibility="public" returncomment="A string represenation of this object." type="java.lang.String" name="toString"></dev:method>
			<dev:method visibility="public" returncomment="The hash code for the credentials." type="int" name="hashCode"></dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt; if all of the credentials match." type="boolean" name="equals">
				<dev:params>
					<dev:param type="java.lang.Object" comment="The object to match." name="o"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.io.IOException" serializable="true" name="org.apache.commons.httpclient.dr1_0_0.NoHttpResponseException"></dev:class>
	<dev:class superclass="java.lang.Object" serializable="true" name="org.apache.commons.httpclient.dr1_0_0.NameValuePair">
		<dev:extends>
			<dev:extend name="java.io.Serializable"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="NameValuePair"></dev:constructor>
			<dev:constructor visibility="public" name="NameValuePair">
				<dev:params>
					<dev:param type="java.lang.String" comment="The name." name="name"></dev:param>
					<dev:param type="java.lang.String" comment="The value." name="value"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="void" name="setName">
				<dev:params>
					<dev:param type="java.lang.String" comment="The new name" name="name"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="String name The name" type="java.lang.String" name="getName"></dev:method>
			<dev:method visibility="public" type="void" name="setValue">
				<dev:params>
					<dev:param type="java.lang.String" comment="The new value." name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="String value The current value." type="java.lang.String" name="getValue"></dev:method>
			<dev:method visibility="public" returncomment="A string representation." type="java.lang.String" name="toString"></dev:method>
			<dev:method visibility="public" type="boolean" name="equals">
				<dev:params>
					<dev:param type="java.lang.Object" name="object"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="int" name="hashCode"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.dr1_0_0.MultiThreadedHttpConnectionManager">
		<dev:extends>
			<dev:extend name="org.apache.commons.httpclient.dr1_0_0.HttpConnectionManager"></dev:extend>
		</dev:extends>
		<dev:fields>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="2" const="2" name="DEFAULT_MAX_HOST_CONNECTIONS" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="20" const="20" name="DEFAULT_MAX_TOTAL_CONNECTIONS" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="MultiThreadedHttpConnectionManager"></dev:constructor>
			<dev:method visibility="public" type="void" name="shutdownAll" static="true"></dev:method>
			<dev:method visibility="public" type="void" name="shutdown"></dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt; if stale checking will be enabled on HttpConnections" type="boolean" name="isConnectionStaleCheckingEnabled"></dev:method>
			<dev:method visibility="public" type="void" name="setConnectionStaleCheckingEnabled">
				<dev:params>
					<dev:param type="boolean" comment="&lt;code&gt;true&lt;/code&gt; if stale checking will be enabled   on HttpConnections" name="connectionStaleCheckingEnabled"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setMaxConnectionsPerHost">
				<dev:params>
					<dev:param type="int" comment="the number of connections allowed for each  hostConfiguration" name="maxHostConnections"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The maximum number of connections allowed for a given  hostConfiguration." type="int" name="getMaxConnectionsPerHost"></dev:method>
			<dev:method visibility="public" type="void" name="setMaxTotalConnections">
				<dev:params>
					<dev:param type="int" comment="the maximum number of connections allowed" name="maxTotalConnections"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The maximum number of connections allowed" type="int" name="getMaxTotalConnections"></dev:method>
			<dev:method visibility="public" type="org.apache.commons.httpclient.dr1_0_0.HttpConnection" name="getConnection">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HostConfiguration" name="hostConfiguration"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="HttpConnection an available connection" type="org.apache.commons.httpclient.dr1_0_0.HttpConnection" name="getConnectionWithTimeout">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HostConfiguration" comment="The host configuration specifying the connection         details." name="hostConfiguration"></dev:param>
					<dev:param type="long" comment="the number of milliseconds to wait for a connection, 0 to  wait indefinitely" name="timeout"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="org.apache.commons.httpclient.dr1_0_0.HttpConnection" name="getConnection">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HostConfiguration" name="hostConfiguration"></dev:param>
					<dev:param type="long" name="timeout"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The total number of pooled connections" type="int" name="getConnectionsInPool">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HostConfiguration" comment="The host configuration" name="hostConfiguration"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the total number of pooled connections" type="int" name="getConnectionsInPool"></dev:method>
			<dev:method visibility="public" returncomment="the number of connections in use" type="int" name="getConnectionsInUse">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HostConfiguration" comment="the key that connections are tracked on" name="hostConfiguration"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the total number of connections in use" type="int" name="getConnectionsInUse"></dev:method>
			<dev:method visibility="public" type="void" name="deleteClosedConnections"></dev:method>
			<dev:method visibility="public" type="void" name="closeIdleConnections">
				<dev:params>
					<dev:param type="long" name="idleTimeout"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="releaseConnection">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpConnection" comment="the HttpConnection to make available." name="conn"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="org.apache.commons.httpclient.params.dr1_0_0.HttpConnectionManagerParams" name="getParams"></dev:method>
			<dev:method visibility="public" type="void" name="setParams">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.params.dr1_0_0.HttpConnectionManagerParams" name="params"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class abstract="true" name="org.apache.commons.httpclient.dr1_0_0.MethodRetryHandler"></dev:class>
	<dev:class superclass="org.apache.commons.httpclient.dr1_0_0.RedirectException" serializable="true" name="org.apache.commons.httpclient.dr1_0_0.InvalidRedirectLocationException">
		<dev:methods>
			<dev:constructor visibility="public" name="InvalidRedirectLocationException">
				<dev:params>
					<dev:param type="java.lang.String" comment="the exception detail message" name="message"></dev:param>
					<dev:param type="java.lang.String" comment="redirect location" name="location"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="InvalidRedirectLocationException">
				<dev:params>
					<dev:param type="java.lang.String" comment="the exception detail message" name="message"></dev:param>
					<dev:param type="java.lang.String" comment="redirect location" name="location"></dev:param>
					<dev:param type="java.lang.Throwable" comment="the &lt;tt&gt;Throwable&lt;/tt&gt; that caused this exception, or &lt;tt&gt;null&lt;/tt&gt;  if the cause is unavailable, unknown, or not a &lt;tt&gt;Throwable&lt;/tt&gt;" name="cause"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="java.lang.String" name="getLocation"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.dr1_0_0.HttpVersion">
		<dev:extends>
			<dev:extend name="java.lang.Comparable"></dev:extend>
		</dev:extends>
		<dev:fields>
			<dev:field visibility="public" fulltype="org.apache.commons.httpclient.dr1_0_0.HttpVersion" type="HttpVersion" final="true" name="HTTP_0_9" static="true"></dev:field>
			<dev:field visibility="public" fulltype="org.apache.commons.httpclient.dr1_0_0.HttpVersion" type="HttpVersion" final="true" name="HTTP_1_0" static="true"></dev:field>
			<dev:field visibility="public" fulltype="org.apache.commons.httpclient.dr1_0_0.HttpVersion" type="HttpVersion" final="true" name="HTTP_1_1" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="HttpVersion">
				<dev:params>
					<dev:param type="int" comment="the major version number of the HTTP protocol" name="major"></dev:param>
					<dev:param type="int" comment="the minor version number of the HTTP protocol" name="minor"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="the major version number." type="int" name="getMajor"></dev:method>
			<dev:method visibility="public" returncomment="the minor version number." type="int" name="getMinor"></dev:method>
			<dev:method visibility="public" type="int" name="hashCode"></dev:method>
			<dev:method visibility="public" type="boolean" name="equals">
				<dev:params>
					<dev:param type="java.lang.Object" name="obj"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="a negative integer, zero, or a positive integer as this version is less than,      equal to, or greater than the specified version." type="int" name="compareTo">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpVersion" comment="the version to be compared with." name="anotherVer"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="int" name="compareTo">
				<dev:params>
					<dev:param type="java.lang.Object" name="o"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; if HTTP protocol version is given to the given number,           &lt;tt&gt;false&lt;/tt&gt; otherwise." type="boolean" name="equals">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpVersion" name="version"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; if HTTP protocol version is greater or equal given to the           given number, &lt;tt&gt;false&lt;/tt&gt; otherwise." type="boolean" name="greaterEquals">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpVersion" name="version"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; if HTTP protocol version is less or equal to given to the           given number, &lt;tt&gt;false&lt;/tt&gt; otherwise." type="boolean" name="lessEquals">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpVersion" name="version"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="java.lang.String" name="toString"></dev:method>
			<dev:method visibility="public" returncomment="HTTP protocol version." type="org.apache.commons.httpclient.dr1_0_0.HttpVersion" name="parse" static="true">
				<dev:params>
					<dev:param type="java.lang.String" name="s"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.dr1_0_0.URI" serializable="true" name="org.apache.commons.httpclient.dr1_0_0.HttpURL">
		<dev:fields>
			<dev:field visibility="public" fulltype="char[]" type="char" final="true" name="DEFAULT_SCHEME" static="true"></dev:field>
			<dev:field visibility="public" fulltype="char[]" type="char" final="true" name="_default_scheme" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="80" const="80" name="DEFAULT_PORT" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="80" const="80" name="_default_port" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="HttpURL">
				<dev:params>
					<dev:param type="char[]" comment="the HTTP URL character sequence" name="escaped"></dev:param>
					<dev:param type="java.lang.String" comment="the charset string to do escape encoding" name="charset"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpURL">
				<dev:params>
					<dev:param type="char[]" comment="the HTTP URL character sequence" name="escaped"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpURL">
				<dev:params>
					<dev:param type="java.lang.String" comment="the HTTP URL string" name="original"></dev:param>
					<dev:param type="java.lang.String" comment="the charset string to do escape encoding" name="charset"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpURL">
				<dev:params>
					<dev:param type="java.lang.String" comment="the HTTP URL string" name="original"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpURL">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host string" name="host"></dev:param>
					<dev:param type="int" comment="the port number" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the path string" name="path"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpURL">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host string" name="host"></dev:param>
					<dev:param type="int" comment="the port number" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the path string" name="path"></dev:param>
					<dev:param type="java.lang.String" comment="the query string" name="query"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpURL">
				<dev:params>
					<dev:param type="java.lang.String" comment="the user name" name="user"></dev:param>
					<dev:param type="java.lang.String" comment="his or her password" name="password"></dev:param>
					<dev:param type="java.lang.String" comment="the host string" name="host"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpURL">
				<dev:params>
					<dev:param type="java.lang.String" comment="the user name" name="user"></dev:param>
					<dev:param type="java.lang.String" comment="his or her password" name="password"></dev:param>
					<dev:param type="java.lang.String" comment="the host string" name="host"></dev:param>
					<dev:param type="int" comment="the port number" name="port"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpURL">
				<dev:params>
					<dev:param type="java.lang.String" comment="the user name" name="user"></dev:param>
					<dev:param type="java.lang.String" comment="his or her password" name="password"></dev:param>
					<dev:param type="java.lang.String" comment="the host string" name="host"></dev:param>
					<dev:param type="int" comment="the port number" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the path string" name="path"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpURL">
				<dev:params>
					<dev:param type="java.lang.String" comment="the user name" name="user"></dev:param>
					<dev:param type="java.lang.String" comment="his or her password" name="password"></dev:param>
					<dev:param type="java.lang.String" comment="the host string" name="host"></dev:param>
					<dev:param type="int" comment="the port number" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the path string" name="path"></dev:param>
					<dev:param type="java.lang.String" comment="The query string." name="query"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpURL">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host string" name="host"></dev:param>
					<dev:param type="java.lang.String" comment="the path string" name="path"></dev:param>
					<dev:param type="java.lang.String" comment="the query string" name="query"></dev:param>
					<dev:param type="java.lang.String" comment="the fragment string" name="fragment"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpURL">
				<dev:params>
					<dev:param type="java.lang.String" comment="the userinfo string whose parts are URL escaped" name="userinfo"></dev:param>
					<dev:param type="java.lang.String" comment="the host string" name="host"></dev:param>
					<dev:param type="java.lang.String" comment="the path string" name="path"></dev:param>
					<dev:param type="java.lang.String" comment="the query string" name="query"></dev:param>
					<dev:param type="java.lang.String" comment="the fragment string" name="fragment"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpURL">
				<dev:params>
					<dev:param type="java.lang.String" comment="the userinfo string whose parts are URL escaped" name="userinfo"></dev:param>
					<dev:param type="java.lang.String" comment="the host string" name="host"></dev:param>
					<dev:param type="int" comment="the port number" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the path string" name="path"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpURL">
				<dev:params>
					<dev:param type="java.lang.String" comment="the userinfo string whose parts are URL escaped" name="userinfo"></dev:param>
					<dev:param type="java.lang.String" comment="the host string" name="host"></dev:param>
					<dev:param type="int" comment="the port number" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the path string" name="path"></dev:param>
					<dev:param type="java.lang.String" comment="the query string" name="query"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpURL">
				<dev:params>
					<dev:param type="java.lang.String" comment="the userinfo string whose parts are URL escaped" name="userinfo"></dev:param>
					<dev:param type="java.lang.String" comment="the host string" name="host"></dev:param>
					<dev:param type="int" comment="the port number" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the path string" name="path"></dev:param>
					<dev:param type="java.lang.String" comment="the query string" name="query"></dev:param>
					<dev:param type="java.lang.String" comment="the fragment string" name="fragment"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpURL">
				<dev:params>
					<dev:param type="java.lang.String" comment="the user name" name="user"></dev:param>
					<dev:param type="java.lang.String" comment="his or her password" name="password"></dev:param>
					<dev:param type="java.lang.String" comment="the host string" name="host"></dev:param>
					<dev:param type="int" comment="the port number" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the path string" name="path"></dev:param>
					<dev:param type="java.lang.String" comment="the query string" name="query"></dev:param>
					<dev:param type="java.lang.String" comment="the fragment string" name="fragment"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpURL">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpURL" comment="the base HttpURL" name="base"></dev:param>
					<dev:param type="java.lang.String" comment="the relative HTTP URL string" name="relative"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpURL">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpURL" comment="the base HttpURL" name="base"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpURL" comment="the relative HttpURL" name="relative"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="the scheme" type="char[]" name="getRawScheme"></dev:method>
			<dev:method visibility="public" returncomment="the scheme null if empty or undefined" type="java.lang.String" name="getScheme"></dev:method>
			<dev:method visibility="public" returncomment="the port number" type="int" name="getPort"></dev:method>
			<dev:method visibility="public" type="void" name="setRawUserinfo">
				<dev:params>
					<dev:param type="char[]" comment="the raw-escaped user" name="escapedUser"></dev:param>
					<dev:param type="char[]" comment="the raw-escaped password; could be null" name="escapedPassword"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setEscapedUserinfo">
				<dev:params>
					<dev:param type="java.lang.String" comment="the escaped user" name="escapedUser"></dev:param>
					<dev:param type="java.lang.String" comment="the escaped password; could be null" name="escapedPassword"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setUserinfo">
				<dev:params>
					<dev:param type="java.lang.String" comment="the user" name="user"></dev:param>
					<dev:param type="java.lang.String" comment="the password; could be null" name="password"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setRawUser">
				<dev:params>
					<dev:param type="char[]" comment="the raw-escaped user" name="escapedUser"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setEscapedUser">
				<dev:params>
					<dev:param type="java.lang.String" comment="the escaped user string" name="escapedUser"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setUser">
				<dev:params>
					<dev:param type="java.lang.String" comment="the user string" name="user"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the raw-escaped user" type="char[]" name="getRawUser"></dev:method>
			<dev:method visibility="public" returncomment="the escaped user" type="java.lang.String" name="getEscapedUser"></dev:method>
			<dev:method visibility="public" returncomment="the user name" type="java.lang.String" name="getUser"></dev:method>
			<dev:method visibility="public" type="void" name="setRawPassword">
				<dev:params>
					<dev:param type="char[]" comment="the raw-escaped password; could be null" name="escapedPassword"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setEscapedPassword">
				<dev:params>
					<dev:param type="java.lang.String" comment="the escaped password string; could be null" name="escapedPassword"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setPassword">
				<dev:params>
					<dev:param type="java.lang.String" comment="the password string; could be null" name="password"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the raw-escaped password" type="char[]" name="getRawPassword"></dev:method>
			<dev:method visibility="public" returncomment="the escaped password" type="java.lang.String" name="getEscapedPassword"></dev:method>
			<dev:method visibility="public" returncomment="the password" type="java.lang.String" name="getPassword"></dev:method>
			<dev:method visibility="public" returncomment="the raw-escaped current hierarchy level" type="char[]" name="getRawCurrentHierPath"></dev:method>
			<dev:method visibility="public" returncomment="the raw above hierarchy level" type="char[]" name="getRawAboveHierPath"></dev:method>
			<dev:method visibility="public" returncomment="the path &apos;/&apos; if empty or undefined" type="char[]" name="getRawPath"></dev:method>
			<dev:method visibility="public" type="void" name="setQuery">
				<dev:params>
					<dev:param type="java.lang.String" comment="the query string." name="queryName"></dev:param>
					<dev:param type="java.lang.String" comment="the query string." name="queryValue"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setQuery">
				<dev:params>
					<dev:param type="java.lang.String[]" comment="the array of the query string." name="queryName"></dev:param>
					<dev:param type="java.lang.String[]" comment="the array of the query string." name="queryValue"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.dr1_0_0.HttpURL" serializable="true" name="org.apache.commons.httpclient.dr1_0_0.HttpsURL">
		<dev:fields>
			<dev:field visibility="public" fulltype="char[]" type="char" final="true" name="DEFAULT_SCHEME" static="true"></dev:field>
			<dev:field visibility="public" fulltype="char[]" type="char" final="true" name="_default_scheme" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="443" const="443" name="DEFAULT_PORT" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="443" const="443" name="_default_port" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="HttpsURL">
				<dev:params>
					<dev:param type="char[]" comment="the HTTPS URL character sequence" name="escaped"></dev:param>
					<dev:param type="java.lang.String" comment="the charset to do escape encoding" name="charset"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpsURL">
				<dev:params>
					<dev:param type="char[]" comment="the HTTPS URL character sequence" name="escaped"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpsURL">
				<dev:params>
					<dev:param type="java.lang.String" comment="the HTTPS URL string" name="original"></dev:param>
					<dev:param type="java.lang.String" comment="the charset to do escape encoding" name="charset"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpsURL">
				<dev:params>
					<dev:param type="java.lang.String" comment="the HTTPS URL string" name="original"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpsURL">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host string" name="host"></dev:param>
					<dev:param type="int" comment="the port number" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the path string" name="path"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpsURL">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host string" name="host"></dev:param>
					<dev:param type="int" comment="the port number" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the path string" name="path"></dev:param>
					<dev:param type="java.lang.String" comment="the query string" name="query"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpsURL">
				<dev:params>
					<dev:param type="java.lang.String" comment="the user name" name="user"></dev:param>
					<dev:param type="java.lang.String" comment="his or her password" name="password"></dev:param>
					<dev:param type="java.lang.String" comment="the host string" name="host"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpsURL">
				<dev:params>
					<dev:param type="java.lang.String" comment="the user name" name="user"></dev:param>
					<dev:param type="java.lang.String" comment="his or her password" name="password"></dev:param>
					<dev:param type="java.lang.String" comment="the host string" name="host"></dev:param>
					<dev:param type="int" comment="the port number" name="port"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpsURL">
				<dev:params>
					<dev:param type="java.lang.String" comment="the user name" name="user"></dev:param>
					<dev:param type="java.lang.String" comment="his or her password" name="password"></dev:param>
					<dev:param type="java.lang.String" comment="the host string" name="host"></dev:param>
					<dev:param type="int" comment="the port number" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the path string" name="path"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpsURL">
				<dev:params>
					<dev:param type="java.lang.String" comment="the user name" name="user"></dev:param>
					<dev:param type="java.lang.String" comment="his or her password" name="password"></dev:param>
					<dev:param type="java.lang.String" comment="the host string" name="host"></dev:param>
					<dev:param type="int" comment="the port number" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the path string" name="path"></dev:param>
					<dev:param type="java.lang.String" comment="The query string." name="query"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpsURL">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host string" name="host"></dev:param>
					<dev:param type="java.lang.String" comment="the path string" name="path"></dev:param>
					<dev:param type="java.lang.String" comment="the query string" name="query"></dev:param>
					<dev:param type="java.lang.String" comment="the fragment string" name="fragment"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpsURL">
				<dev:params>
					<dev:param type="java.lang.String" comment="the userinfo string whose parts are URL escaped" name="userinfo"></dev:param>
					<dev:param type="java.lang.String" comment="the host string" name="host"></dev:param>
					<dev:param type="java.lang.String" comment="the path string" name="path"></dev:param>
					<dev:param type="java.lang.String" comment="the query string" name="query"></dev:param>
					<dev:param type="java.lang.String" comment="the fragment string" name="fragment"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpsURL">
				<dev:params>
					<dev:param type="java.lang.String" comment="the userinfo string whose parts are URL escaped" name="userinfo"></dev:param>
					<dev:param type="java.lang.String" comment="the host string" name="host"></dev:param>
					<dev:param type="int" comment="the port number" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the path string" name="path"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpsURL">
				<dev:params>
					<dev:param type="java.lang.String" comment="the userinfo string whose parts are URL escaped" name="userinfo"></dev:param>
					<dev:param type="java.lang.String" comment="the host string" name="host"></dev:param>
					<dev:param type="int" comment="the port number" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the path string" name="path"></dev:param>
					<dev:param type="java.lang.String" comment="the query string" name="query"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpsURL">
				<dev:params>
					<dev:param type="java.lang.String" comment="the userinfo string whose parts are URL escaped" name="userinfo"></dev:param>
					<dev:param type="java.lang.String" comment="the host string" name="host"></dev:param>
					<dev:param type="int" comment="the port number" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the path string" name="path"></dev:param>
					<dev:param type="java.lang.String" comment="the query string" name="query"></dev:param>
					<dev:param type="java.lang.String" comment="the fragment string" name="fragment"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpsURL">
				<dev:params>
					<dev:param type="java.lang.String" comment="the user name" name="user"></dev:param>
					<dev:param type="java.lang.String" comment="his or her password" name="password"></dev:param>
					<dev:param type="java.lang.String" comment="the host string" name="host"></dev:param>
					<dev:param type="int" comment="the port number" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the path string" name="path"></dev:param>
					<dev:param type="java.lang.String" comment="the query string" name="query"></dev:param>
					<dev:param type="java.lang.String" comment="the fragment string" name="fragment"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpsURL">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpsURL" comment="the base HttpsURL" name="base"></dev:param>
					<dev:param type="java.lang.String" comment="the relative HTTPS URL string" name="relative"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpsURL">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpsURL" comment="the base HttpsURL" name="base"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpsURL" comment="the relative HttpsURL" name="relative"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="the scheme" type="char[]" name="getRawScheme"></dev:method>
			<dev:method visibility="public" returncomment="the scheme null if empty or undefined" type="java.lang.String" name="getScheme"></dev:method>
			<dev:method visibility="public" returncomment="the port number" type="int" name="getPort"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.dr1_0_0.HttpStatus">
		<dev:fields>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="100" const="100" name="SC_CONTINUE" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="101" const="101" name="SC_SWITCHING_PROTOCOLS" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="102" const="102" name="SC_PROCESSING" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="200" const="200" name="SC_OK" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="201" const="201" name="SC_CREATED" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="202" const="202" name="SC_ACCEPTED" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="203" const="203" name="SC_NON_AUTHORITATIVE_INFORMATION" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="204" const="204" name="SC_NO_CONTENT" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="205" const="205" name="SC_RESET_CONTENT" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="206" const="206" name="SC_PARTIAL_CONTENT" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="207" const="207" name="SC_MULTI_STATUS" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="300" const="300" name="SC_MULTIPLE_CHOICES" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="301" const="301" name="SC_MOVED_PERMANENTLY" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="302" const="302" name="SC_MOVED_TEMPORARILY" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="303" const="303" name="SC_SEE_OTHER" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="304" const="304" name="SC_NOT_MODIFIED" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="305" const="305" name="SC_USE_PROXY" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="307" const="307" name="SC_TEMPORARY_REDIRECT" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="400" const="400" name="SC_BAD_REQUEST" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="401" const="401" name="SC_UNAUTHORIZED" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="402" const="402" name="SC_PAYMENT_REQUIRED" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="403" const="403" name="SC_FORBIDDEN" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="404" const="404" name="SC_NOT_FOUND" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="405" const="405" name="SC_METHOD_NOT_ALLOWED" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="406" const="406" name="SC_NOT_ACCEPTABLE" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="407" const="407" name="SC_PROXY_AUTHENTICATION_REQUIRED" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="408" const="408" name="SC_REQUEST_TIMEOUT" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="409" const="409" name="SC_CONFLICT" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="410" const="410" name="SC_GONE" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="411" const="411" name="SC_LENGTH_REQUIRED" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="412" const="412" name="SC_PRECONDITION_FAILED" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="413" const="413" name="SC_REQUEST_TOO_LONG" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="414" const="414" name="SC_REQUEST_URI_TOO_LONG" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="415" const="415" name="SC_UNSUPPORTED_MEDIA_TYPE" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="416" const="416" name="SC_REQUESTED_RANGE_NOT_SATISFIABLE" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="417" const="417" name="SC_EXPECTATION_FAILED" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="419" const="419" name="SC_INSUFFICIENT_SPACE_ON_RESOURCE" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="420" const="420" name="SC_METHOD_FAILURE" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="422" const="422" name="SC_UNPROCESSABLE_ENTITY" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="423" const="423" name="SC_LOCKED" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="424" const="424" name="SC_FAILED_DEPENDENCY" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="500" const="500" name="SC_INTERNAL_SERVER_ERROR" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="501" const="501" name="SC_NOT_IMPLEMENTED" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="502" const="502" name="SC_BAD_GATEWAY" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="503" const="503" name="SC_SERVICE_UNAVAILABLE" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="504" const="504" name="SC_GATEWAY_TIMEOUT" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="505" const="505" name="SC_HTTP_VERSION_NOT_SUPPORTED" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="507" const="507" name="SC_INSUFFICIENT_STORAGE" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="HttpStatus"></dev:constructor>
			<dev:method visibility="public" returncomment="the reason phrase associated with the given status code  or null if the status code is not recognized.    TODO: getStatusText should be called getReasonPhrase to match RFC" type="java.lang.String" name="getStatusText" static="true">
				<dev:params>
					<dev:param type="int" comment="the numeric status code" name="statusCode"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.dr1_0_0.HttpState">
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;httpclient.authentication.preemptive&quot;" const="httpclient.authentication.preemptive" name="PREEMPTIVE_PROPERTY" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;false&quot;" const="false" name="PREEMPTIVE_DEFAULT" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="HttpState"></dev:constructor>
			<dev:method visibility="public" type="void" name="addCookie">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Cookie" comment="the {@link Cookie cookie} to be added" name="cookie"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="addCookies">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Cookie[]" comment="the {@link Cookie cookies} to be added" name="cookies"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="an array of {@link Cookie cookies}." type="org.apache.commons.httpclient.dr1_0_0.Cookie[]" name="getCookies"></dev:method>
			<dev:method visibility="public" returncomment="an array of {@link Cookie cookies}." type="org.apache.commons.httpclient.dr1_0_0.Cookie[]" name="getCookies">
				<dev:params>
					<dev:param type="java.lang.String" comment="the request domain" name="domain"></dev:param>
					<dev:param type="int" comment="the request port" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="the request path" name="path"></dev:param>
					<dev:param type="boolean" comment="&lt;code&gt;true&lt;/code&gt; when using HTTPS" name="secure"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="boolean" name="purgeExpiredCookies"></dev:method>
			<dev:method visibility="public" returncomment="true if any cookies were purged." type="boolean" name="purgeExpiredCookies">
				<dev:params>
					<dev:param type="java.util.Date" comment="The {@link java.util.Date date} to compare against." name="date"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The {@link CookiePolicy cookie policy}." type="int" name="getCookiePolicy"></dev:method>
			<dev:method visibility="public" type="void" name="setAuthenticationPreemptive">
				<dev:params>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; if preemptive authentication should be   attempted, &lt;tt&gt;false&lt;/tt&gt; otherwise." name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="boolean flag." type="boolean" name="isAuthenticationPreemptive"></dev:method>
			<dev:method visibility="public" type="void" name="setCookiePolicy">
				<dev:params>
					<dev:param type="int" comment="new {@link CookiePolicy cookie policy}" name="policy"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setCredentials">
				<dev:params>
					<dev:param type="java.lang.String" comment="the authentication realm" name="realm"></dev:param>
					<dev:param type="java.lang.String" comment="the host the realm belongs to" name="host"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Credentials" comment="the authentication {@link Credentials credentials}   for the given realm." name="credentials"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setCredentials">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.auth.dr1_0_0.AuthScope" comment="the {@link AuthScope authentication scope}" name="authscope"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Credentials" comment="the authentication {@link Credentials credentials}   for the given scope." name="credentials"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the credentials" type="org.apache.commons.httpclient.dr1_0_0.Credentials" name="getCredentials">
				<dev:params>
					<dev:param type="java.lang.String" comment="the authentication realm" name="realm"></dev:param>
					<dev:param type="java.lang.String" comment="the host the realm is on" name="host"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the credentials" type="org.apache.commons.httpclient.dr1_0_0.Credentials" name="getCredentials">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.auth.dr1_0_0.AuthScope" comment="the {@link AuthScope authentication scope}" name="authscope"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setProxyCredentials">
				<dev:params>
					<dev:param type="java.lang.String" comment="the authentication realm" name="realm"></dev:param>
					<dev:param type="java.lang.String" comment="the proxy host" name="proxyHost"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Credentials" comment="the authentication credentials for the given realm" name="credentials"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setProxyCredentials">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.auth.dr1_0_0.AuthScope" comment="the {@link AuthScope authentication scope}" name="authscope"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Credentials" comment="the authentication {@link Credentials credentials}   for the given realm." name="credentials"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the credentials" type="org.apache.commons.httpclient.dr1_0_0.Credentials" name="getProxyCredentials">
				<dev:params>
					<dev:param type="java.lang.String" comment="the authentication realm" name="realm"></dev:param>
					<dev:param type="java.lang.String" comment="the proxy host the realm is on" name="proxyHost"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the credentials" type="org.apache.commons.httpclient.dr1_0_0.Credentials" name="getProxyCredentials">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.auth.dr1_0_0.AuthScope" comment="the {@link AuthScope authentication scope}" name="authscope"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The string representation of the HTTP state." type="java.lang.String" name="toString"></dev:method>
			<dev:method visibility="public" type="void" name="clearCredentials"></dev:method>
			<dev:method visibility="public" type="void" name="clearProxyCredentials"></dev:method>
			<dev:method visibility="public" type="void" name="clearCookies"></dev:method>
			<dev:method visibility="public" type="void" name="clear"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.dr1_0_0.HttpException" serializable="true" name="org.apache.commons.httpclient.dr1_0_0.HttpRecoverableException"></dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.dr1_0_0.HttpParser"></dev:class>
	<dev:class abstract="true" name="org.apache.commons.httpclient.dr1_0_0.HttpMethodRetryHandler"></dev:class>
	<dev:class superclass="java.lang.Object" abstract="true" name="org.apache.commons.httpclient.dr1_0_0.HttpMethodBase">
		<dev:extends>
			<dev:extend name="org.apache.commons.httpclient.dr1_0_0.HttpMethod"></dev:extend>
		</dev:extends>
		<dev:fields></dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="HttpMethodBase"></dev:constructor>
			<dev:constructor visibility="public" name="HttpMethodBase">
				<dev:params>
					<dev:param type="java.lang.String" comment="either an absolute or relative URI. The URI is expected             to be URL-encoded" name="uri"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="the name of this method" type="java.lang.String" name="getName"></dev:method>
			<dev:method visibility="public" returncomment="The URI" type="org.apache.commons.httpclient.dr1_0_0.URI" name="getURI"></dev:method>
			<dev:method visibility="public" type="void" name="setURI">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.URI" comment="URI to be set" name="uri"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setFollowRedirects">
				<dev:params>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; if the method will automatically follow redirects,  &lt;tt&gt;false&lt;/tt&gt; otherwise." name="followRedirects"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; if the method will automatically follow HTTP redirects,   &lt;tt&gt;false&lt;/tt&gt; otherwise." type="boolean" name="getFollowRedirects"></dev:method>
			<dev:method visibility="public" type="void" name="setHttp11">
				<dev:params>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; to use HTTP/1.1, &lt;tt&gt;false&lt;/tt&gt; to use 1.0" name="http11"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; if authentication challenges will be processed   automatically, &lt;tt&gt;false&lt;/tt&gt; otherwise." type="boolean" name="getDoAuthentication"></dev:method>
			<dev:method visibility="public" type="void" name="setDoAuthentication">
				<dev:params>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; to process authentication challenges  authomatically, &lt;tt&gt;false&lt;/tt&gt; otherwise." name="doAuthentication"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; to use HTTP/1.1, &lt;tt&gt;false&lt;/tt&gt; to use 1.0" type="boolean" name="isHttp11"></dev:method>
			<dev:method visibility="public" type="void" name="setPath">
				<dev:params>
					<dev:param type="java.lang.String" comment="the path of the HTTP method. The path is expected         to be URL-encoded" name="path"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="addRequestHeader">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Header" comment="the header to add to the request" name="header"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="addResponseFooter">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Header" comment="The footer to add." name="footer"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the path to request or &quot;/&quot; if the path is blank." type="java.lang.String" name="getPath"></dev:method>
			<dev:method visibility="public" type="void" name="setQueryString">
				<dev:params>
					<dev:param type="java.lang.String" comment="the query string" name="queryString"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setQueryString">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.NameValuePair[]" comment="an array of {@link NameValuePair}s to add as query string         parameters. The name/value pairs will be automcatically          URL encoded" name="params"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The query string" type="java.lang.String" name="getQueryString"></dev:method>
			<dev:method visibility="public" type="void" name="setRequestHeader">
				<dev:params>
					<dev:param type="java.lang.String" comment="the header&apos;s name" name="headerName"></dev:param>
					<dev:param type="java.lang.String" comment="the header&apos;s value" name="headerValue"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setRequestHeader">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Header" comment="the header" name="header"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The specified request header." type="org.apache.commons.httpclient.dr1_0_0.Header" name="getRequestHeader">
				<dev:params>
					<dev:param type="java.lang.String" comment="The name of the header to be returned." name="headerName"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="an array of my request headers." type="org.apache.commons.httpclient.dr1_0_0.Header[]" name="getRequestHeaders"></dev:method>
			<dev:method visibility="public" type="org.apache.commons.httpclient.dr1_0_0.Header[]" name="getRequestHeaders">
				<dev:params>
					<dev:param type="java.lang.String" name="headerName"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="org.apache.commons.httpclient.dr1_0_0.Header[]" name="getResponseHeaders">
				<dev:params>
					<dev:param type="java.lang.String" name="headerName"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the status code associated with the latest response." type="int" name="getStatusCode"></dev:method>
			<dev:method visibility="public" returncomment="the status line object from the latest response." type="org.apache.commons.httpclient.dr1_0_0.StatusLine" name="getStatusLine"></dev:method>
			<dev:method visibility="public" returncomment="an array of response headers." type="org.apache.commons.httpclient.dr1_0_0.Header[]" name="getResponseHeaders"></dev:method>
			<dev:method visibility="public" returncomment="the matching header" type="org.apache.commons.httpclient.dr1_0_0.Header" name="getResponseHeader">
				<dev:params>
					<dev:param type="java.lang.String" comment="the header name to match" name="headerName"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="content length, if &lt;tt&gt;Content-Length&lt;/tt&gt; header is available.            &lt;tt&gt;0&lt;/tt&gt; indicates that the request has no body.           If &lt;tt&gt;Content-Length&lt;/tt&gt; header is not present, the method            returns  &lt;tt&gt;-1&lt;/tt&gt;." type="long" name="getResponseContentLength"></dev:method>
			<dev:method visibility="public" returncomment="The response body." type="byte[]" name="getResponseBody"></dev:method>
			<dev:method visibility="public" returncomment="The response body." type="byte[]" name="getResponseBody">
				<dev:params>
					<dev:param type="int" comment="the maximum content length to accept (number of bytes)." name="maxlen"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The response body or &lt;code&gt;null&lt;/code&gt;." type="java.io.InputStream" name="getResponseBodyAsStream"></dev:method>
			<dev:method visibility="public" returncomment="The response body or &lt;code&gt;null&lt;/code&gt;." type="java.lang.String" name="getResponseBodyAsString"></dev:method>
			<dev:method visibility="public" returncomment="The response body or &lt;code&gt;null&lt;/code&gt;." type="java.lang.String" name="getResponseBodyAsString">
				<dev:params>
					<dev:param type="int" comment="the maximum content length to accept (number of bytes). Note that,  depending on the encoding, this is not equal to the number of characters." name="maxlen"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="an array of footers" type="org.apache.commons.httpclient.dr1_0_0.Header[]" name="getResponseFooters"></dev:method>
			<dev:method visibility="public" returncomment="the matching footer" type="org.apache.commons.httpclient.dr1_0_0.Header" name="getResponseFooter">
				<dev:params>
					<dev:param type="java.lang.String" comment="the footer name to match" name="footerName"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The status text." type="java.lang.String" name="getStatusText"></dev:method>
			<dev:method visibility="public" type="void" name="setStrictMode">
				<dev:params>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; for strict mode, &lt;tt&gt;false&lt;/tt&gt; otherwise" name="strictMode"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;false&lt;/tt&gt;" type="boolean" name="isStrictMode"></dev:method>
			<dev:method visibility="public" type="void" name="addRequestHeader">
				<dev:params>
					<dev:param type="java.lang.String" comment="the header&apos;s name" name="headerName"></dev:param>
					<dev:param type="java.lang.String" comment="the header&apos;s value" name="headerValue"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the integer status code if one was obtained, or &lt;tt&gt;-1&lt;/tt&gt;" type="int" name="execute">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpState" comment="{@link HttpState state} information to associate with this         request. Must be non-null." name="state"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpConnection" comment="the {@link HttpConnection connection} to used to execute         this HTTP method. Must be non-null." name="conn"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="abort"></dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; if the method has been executed, &lt;tt&gt;false&lt;/tt&gt; otherwise" type="boolean" name="hasBeenUsed"></dev:method>
			<dev:method visibility="public" type="void" name="recycle"></dev:method>
			<dev:method visibility="public" type="void" name="releaseConnection"></dev:method>
			<dev:method visibility="public" type="void" name="removeRequestHeader">
				<dev:params>
					<dev:param type="java.lang.String" comment="the header name" name="headerName"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="removeRequestHeader">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Header" comment="the header" name="header"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="This implementation always returns &lt;tt&gt;true&lt;/tt&gt;." type="boolean" name="validate"></dev:method>
			<dev:method visibility="public" returncomment="HTTP parameters." type="org.apache.commons.httpclient.params.dr1_0_0.HttpMethodParams" name="getParams"></dev:method>
			<dev:method visibility="public" type="void" name="setParams">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.params.dr1_0_0.HttpMethodParams" name="params"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="HTTP version." type="org.apache.commons.httpclient.dr1_0_0.HttpVersion" name="getEffectiveVersion"></dev:method>
			<dev:method visibility="public" returncomment="proxy authentication realm" type="java.lang.String" name="getProxyAuthenticationRealm"></dev:method>
			<dev:method visibility="public" returncomment="authentication realm" type="java.lang.String" name="getAuthenticationRealm"></dev:method>
			<dev:method visibility="public" returncomment="String The character set." type="java.lang.String" name="getRequestCharSet"></dev:method>
			<dev:method visibility="public" returncomment="String The character set." type="java.lang.String" name="getResponseCharSet"></dev:method>
			<dev:method visibility="public" returncomment="The number of recoverable exceptions handled by the method." type="int" name="getRecoverableExceptionCount"></dev:method>
			<dev:method visibility="public" returncomment="the host configuration" type="org.apache.commons.httpclient.dr1_0_0.HostConfiguration" name="getHostConfiguration"></dev:method>
			<dev:method visibility="public" type="void" name="setHostConfiguration">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HostConfiguration" comment="The hostConfiguration to set" name="hostconfig"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the methodRetryHandler" type="org.apache.commons.httpclient.dr1_0_0.MethodRetryHandler" name="getMethodRetryHandler"></dev:method>
			<dev:method visibility="public" type="void" name="setMethodRetryHandler">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.MethodRetryHandler" comment="the methodRetryHandler to use when this method executed" name="handler"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="host authentication state" type="org.apache.commons.httpclient.auth.dr1_0_0.AuthState" name="getHostAuthState"></dev:method>
			<dev:method visibility="public" returncomment="host authentication state" type="org.apache.commons.httpclient.auth.dr1_0_0.AuthState" name="getProxyAuthState"></dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; if the execution of this method has been aborted,   &lt;tt&gt;false&lt;/tt&gt; otherwise" type="boolean" name="isAborted"></dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; if the request has been sent, &lt;tt&gt;false&lt;/tt&gt; otherwise" type="boolean" name="isRequestSent"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class abstract="true" name="org.apache.commons.httpclient.dr1_0_0.HttpMethod"></dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.dr1_0_0.HttpHost">
		<dev:extends>
			<dev:extend name="java.lang.Cloneable"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="HttpHost">
				<dev:params>
					<dev:param type="java.lang.String" comment="the hostname (IP or DNS name). Can be &lt;code&gt;null&lt;/code&gt;." name="hostname"></dev:param>
					<dev:param type="int" comment="the port. Value &lt;code&gt;-1&lt;/code&gt; can be used to set default protocol port" name="port"></dev:param>
					<dev:param type="org.apache.commons.httpclient.protocol.dr1_0_0.Protocol" comment="the protocol. Value &lt;code&gt;null&lt;/code&gt; can be used to set default protocol" name="protocol"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpHost">
				<dev:params>
					<dev:param type="java.lang.String" comment="the hostname (IP or DNS name). Can be &lt;code&gt;null&lt;/code&gt;." name="hostname"></dev:param>
					<dev:param type="int" comment="the port. Value &lt;code&gt;-1&lt;/code&gt; can be used to set default protocol port" name="port"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpHost">
				<dev:params>
					<dev:param type="java.lang.String" comment="the hostname (IP or DNS name). Can be &lt;code&gt;null&lt;/code&gt;." name="hostname"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpHost">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.URI" comment="the URI." name="uri"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpHost">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpHost" comment="the HTTP host to copy details from" name="httphost"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="java.lang.Object" name="clone"></dev:method>
			<dev:method visibility="public" returncomment="the host name (IP or DNS name), or &lt;code&gt;null&lt;/code&gt; if not set" type="java.lang.String" name="getHostName"></dev:method>
			<dev:method visibility="public" returncomment="the host port, or &lt;code&gt;-1&lt;/code&gt; if not set" type="int" name="getPort"></dev:method>
			<dev:method visibility="public" returncomment="The protocol." type="org.apache.commons.httpclient.protocol.dr1_0_0.Protocol" name="getProtocol"></dev:method>
			<dev:method visibility="public" returncomment="The host uri." type="java.lang.String" name="toURI"></dev:method>
			<dev:method visibility="public" type="java.lang.String" name="toString"></dev:method>
			<dev:method visibility="public" type="boolean" name="equals">
				<dev:params>
					<dev:param type="java.lang.Object" name="o"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="int" name="hashCode"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.io.IOException" serializable="true" name="org.apache.commons.httpclient.dr1_0_0.HttpException">
		<dev:methods>
			<dev:constructor visibility="public" name="HttpException"></dev:constructor>
			<dev:constructor visibility="public" name="HttpException">
				<dev:params>
					<dev:param type="java.lang.String" comment="the exception detail message" name="message"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpException">
				<dev:params>
					<dev:param type="java.lang.String" comment="the exception detail message" name="message"></dev:param>
					<dev:param type="java.lang.Throwable" comment="the &lt;tt&gt;Throwable&lt;/tt&gt; that caused this exception, or &lt;tt&gt;null&lt;/tt&gt;  if the cause is unavailable, unknown, or not a &lt;tt&gt;Throwable&lt;/tt&gt;" name="cause"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="the &lt;tt&gt;Throwable&lt;/tt&gt; that caused this exception, or &lt;tt&gt;null&lt;/tt&gt;          if the cause is unavailable, unknown, or not a &lt;tt&gt;Throwable&lt;/tt&gt;" type="java.lang.Throwable" name="getCause"></dev:method>
			<dev:method visibility="public" type="void" name="printStackTrace"></dev:method>
			<dev:method visibility="public" type="void" name="printStackTrace">
				<dev:params>
					<dev:param type="java.io.PrintStream" comment="the &lt;tt&gt;PrintStream&lt;/tt&gt; to which the exception and its stack trace  should be written" name="s"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="printStackTrace">
				<dev:params>
					<dev:param type="java.io.PrintWriter" comment="the &lt;tt&gt;PrintWriter&lt;/tt&gt; to which the exception and its stack trace  should be written" name="s"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setReason">
				<dev:params>
					<dev:param type="java.lang.String" comment="The reason for the exception." name="reason"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="java.lang.String" name="getReason"></dev:method>
			<dev:method visibility="public" type="void" name="setReasonCode">
				<dev:params>
					<dev:param type="int" comment="The reason for the exception.  This is intended to be an   HTTP status code." name="code"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="int" name="getReasonCode"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.dr1_0_0.HttpException" serializable="true" name="org.apache.commons.httpclient.dr1_0_0.HttpContentTooLargeException">
		<dev:methods>
			<dev:constructor visibility="public" name="HttpContentTooLargeException">
				<dev:params>
					<dev:param type="java.lang.String" name="message"></dev:param>
					<dev:param type="int" name="maxlen"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="the maximum anticipated content length in bytes." type="int" name="getMaxLength"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.dr1_0_0.HttpConstants">
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;US-ASCII&quot;" const="US-ASCII" name="HTTP_ELEMENT_CHARSET" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;ISO-8859-1&quot;" const="ISO-8859-1" name="DEFAULT_CONTENT_CHARSET" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="HttpConstants"></dev:constructor>
			<dev:method visibility="public" returncomment="The resulting byte array." type="byte[]" name="getBytes" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the string to be encoded" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The resulting string." type="java.lang.String" name="getString" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="the byte array to be encoded" name="data"></dev:param>
					<dev:param type="int" comment="the index of the first byte to encode" name="offset"></dev:param>
					<dev:param type="int" comment="the number of bytes to encode" name="length"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The resulting string." type="java.lang.String" name="getString" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="the byte array to be encoded" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The resulting byte array." type="byte[]" name="getContentBytes" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the string to be encoded" name="data"></dev:param>
					<dev:param type="java.lang.String" comment="the desired character encoding" name="charset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The result of the conversion." type="java.lang.String" name="getContentString" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="the byte array to be encoded" name="data"></dev:param>
					<dev:param type="int" comment="the index of the first byte to encode" name="offset"></dev:param>
					<dev:param type="int" comment="the number of bytes to encode" name="length"></dev:param>
					<dev:param type="java.lang.String" comment="the desired character encoding" name="charset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The result of the conversion." type="java.lang.String" name="getContentString" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="the byte array to be encoded" name="data"></dev:param>
					<dev:param type="java.lang.String" comment="the desired character encoding" name="charset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The byte array as above." type="byte[]" name="getContentBytes" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the string to be encoded" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The string representation of the byte array." type="java.lang.String" name="getContentString" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="the byte array to be encoded" name="data"></dev:param>
					<dev:param type="int" comment="the index of the first byte to encode" name="offset"></dev:param>
					<dev:param type="int" comment="the number of bytes to encode" name="length"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The string representation of the byte array." type="java.lang.String" name="getContentString" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="the byte array to be encoded" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The string as a byte array." type="byte[]" name="getAsciiBytes" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the string to be encoded" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The string representation of the byte array" type="java.lang.String" name="getAsciiString" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="the byte array to be encoded" name="data"></dev:param>
					<dev:param type="int" comment="the index of the first byte to encode" name="offset"></dev:param>
					<dev:param type="int" comment="the number of bytes to encode" name="length"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The string representation of the byte array" type="java.lang.String" name="getAsciiString" static="true">
				<dev:params>
					<dev:param type="byte[]" comment="the byte array to be encoded" name="data"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class abstract="true" name="org.apache.commons.httpclient.dr1_0_0.HttpConnectionManager"></dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.dr1_0_0.HttpConnection">
		<dev:fields></dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="HttpConnection">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host to connect to" name="host"></dev:param>
					<dev:param type="int" comment="the port to connect to" name="port"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpConnection">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host to connect to" name="host"></dev:param>
					<dev:param type="int" comment="the port to connect to" name="port"></dev:param>
					<dev:param type="org.apache.commons.httpclient.protocol.dr1_0_0.Protocol" comment="the protocol to use" name="protocol"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpConnection">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host to connect to" name="host"></dev:param>
					<dev:param type="java.lang.String" comment="the virtual host requests will be sent to" name="virtualHost"></dev:param>
					<dev:param type="int" comment="the port to connect to" name="port"></dev:param>
					<dev:param type="org.apache.commons.httpclient.protocol.dr1_0_0.Protocol" comment="the protocol to use" name="protocol"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpConnection">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host to proxy via" name="proxyHost"></dev:param>
					<dev:param type="int" comment="the port to proxy via" name="proxyPort"></dev:param>
					<dev:param type="java.lang.String" comment="the host to connect to" name="host"></dev:param>
					<dev:param type="int" comment="the port to connect to" name="port"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpConnection">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HostConfiguration" comment="the host/proxy/protocol to use" name="hostConfiguration"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpConnection">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host to proxy via" name="proxyHost"></dev:param>
					<dev:param type="int" comment="the port to proxy via" name="proxyPort"></dev:param>
					<dev:param type="java.lang.String" comment="the host to connect to. Parameter value must be non-null." name="host"></dev:param>
					<dev:param type="java.lang.String" comment="No longer applicable." name="virtualHost"></dev:param>
					<dev:param type="int" comment="the port to connect to" name="port"></dev:param>
					<dev:param type="org.apache.commons.httpclient.protocol.dr1_0_0.Protocol" comment="The protocol to use. Parameter value must be non-null." name="protocol"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpConnection">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host to proxy via" name="proxyHost"></dev:param>
					<dev:param type="int" comment="the port to proxy via" name="proxyPort"></dev:param>
					<dev:param type="java.lang.String" comment="the host to connect to. Parameter value must be non-null." name="host"></dev:param>
					<dev:param type="int" comment="the port to connect to" name="port"></dev:param>
					<dev:param type="org.apache.commons.httpclient.protocol.dr1_0_0.Protocol" comment="The protocol to use. Parameter value must be non-null." name="protocol"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="the host." type="java.lang.String" name="getHost"></dev:method>
			<dev:method visibility="public" type="void" name="setHost">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host to connect to. Parameter value must be non-null." name="host"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the virtual host." type="java.lang.String" name="getVirtualHost"></dev:method>
			<dev:method visibility="public" type="void" name="setVirtualHost">
				<dev:params>
					<dev:param type="java.lang.String" comment="the virtual host name that should be used instead of          physical host name when sending HTTP requests. Virtual host          name can be set to &lt;tt&gt; null&lt;/tt&gt; if virtual host name is not         to be used" name="host"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the port." type="int" name="getPort"></dev:method>
			<dev:method visibility="public" type="void" name="setPort">
				<dev:params>
					<dev:param type="int" comment="the port to connect to" name="port"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the proxy host." type="java.lang.String" name="getProxyHost"></dev:method>
			<dev:method visibility="public" type="void" name="setProxyHost">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host to proxy through." name="host"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the proxy port." type="int" name="getProxyPort"></dev:method>
			<dev:method visibility="public" type="void" name="setProxyPort">
				<dev:params>
					<dev:param type="int" comment="the port of the host to proxy through." name="port"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; if connected over a secure protocol." type="boolean" name="isSecure"></dev:method>
			<dev:method visibility="public" returncomment="The protocol" type="org.apache.commons.httpclient.protocol.dr1_0_0.Protocol" name="getProtocol"></dev:method>
			<dev:method visibility="public" type="void" name="setProtocol">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.protocol.dr1_0_0.Protocol" comment="The protocol to use." name="protocol"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="InetAddress the local address to be used when creating Sockets" type="java.net.InetAddress" name="getLocalAddress"></dev:method>
			<dev:method visibility="public" type="void" name="setLocalAddress">
				<dev:params>
					<dev:param type="java.net.InetAddress" comment="the local address to use" name="localAddress"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt; if the connection is open" type="boolean" name="isOpen"></dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt; if the connection was stale and therefore closed,   &lt;code&gt;false&lt;/code&gt; otherwise." type="boolean" name="closeIfStale"></dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt; if enabled" type="boolean" name="isStaleCheckingEnabled"></dev:method>
			<dev:method visibility="public" type="void" name="setStaleCheckingEnabled">
				<dev:params>
					<dev:param type="boolean" comment="&lt;code&gt;true&lt;/code&gt; to enable isStale()" name="staleCheckEnabled"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; if a proxy is used to establish the connection,   &lt;tt&gt;false&lt;/tt&gt; otherwise." type="boolean" name="isProxied"></dev:method>
			<dev:method visibility="public" type="void" name="setLastResponseInputStream">
				<dev:params>
					<dev:param type="java.io.InputStream" comment="The stream associated with an HttpMethod." name="inStream"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="An {@link InputStream} corresponding to the body of the last   response." type="java.io.InputStream" name="getLastResponseInputStream"></dev:method>
			<dev:method visibility="public" returncomment="HTTP parameters." type="org.apache.commons.httpclient.params.dr1_0_0.HttpConnectionParams" name="getParams"></dev:method>
			<dev:method visibility="public" type="void" name="setParams">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.params.dr1_0_0.HttpConnectionParams" name="params"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setSoTimeout">
				<dev:params>
					<dev:param type="int" comment="the timeout value" name="timeout"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setSocketTimeout">
				<dev:params>
					<dev:param type="int" comment="the timeout value" name="timeout"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the timeout value" type="int" name="getSoTimeout"></dev:method>
			<dev:method visibility="public" type="void" name="setConnectionTimeout">
				<dev:params>
					<dev:param type="int" comment="The timeout in milliseconds. 0 means timeout is not used." name="timeout"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="open"></dev:method>
			<dev:method visibility="public" type="void" name="tunnelCreated"></dev:method>
			<dev:method visibility="public" returncomment="true if conncetion is not proxied or tunneled through a transparent  proxy; false otherwise." type="boolean" name="isTransparent"></dev:method>
			<dev:method visibility="public" type="void" name="flushRequestOutputStream"></dev:method>
			<dev:method visibility="public" returncomment="a stream to write the request to" type="java.io.OutputStream" name="getRequestOutputStream"></dev:method>
			<dev:method visibility="public" returncomment="InputStream The response input stream." type="java.io.InputStream" name="getResponseInputStream"></dev:method>
			<dev:method visibility="public" returncomment="boolean &lt;tt&gt;true&lt;/tt&gt; if input data is available,                   &lt;tt&gt;false&lt;/tt&gt; otherwise." type="boolean" name="isResponseAvailable"></dev:method>
			<dev:method visibility="public" returncomment="boolean &lt;tt&gt;true&lt;/tt&gt; if input data is availble,                   &lt;tt&gt;false&lt;/tt&gt; otherwise." type="boolean" name="isResponseAvailable">
				<dev:params>
					<dev:param type="int" comment="The number milliseconds to wait for input data to become available" name="timeout"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="write">
				<dev:params>
					<dev:param type="byte[]" comment="the data to be written" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="write">
				<dev:params>
					<dev:param type="byte[]" comment="array containing the data to be written." name="data"></dev:param>
					<dev:param type="int" comment="the start offset in the data." name="offset"></dev:param>
					<dev:param type="int" comment="the number of bytes to write." name="length"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="writeLine">
				<dev:params>
					<dev:param type="byte[]" comment="the bytes to be written" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="writeLine"></dev:method>
			<dev:method visibility="public" type="void" name="print">
				<dev:params>
					<dev:param type="java.lang.String" comment="the string to be written" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="print">
				<dev:params>
					<dev:param type="java.lang.String" comment="the string to be written" name="data"></dev:param>
					<dev:param type="java.lang.String" comment="the charset to use for writing the data" name="charset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="printLine">
				<dev:params>
					<dev:param type="java.lang.String" comment="the data to be written" name="data"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="printLine">
				<dev:params>
					<dev:param type="java.lang.String" comment="the data to be written" name="data"></dev:param>
					<dev:param type="java.lang.String" comment="the charset to use for writing the data" name="charset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="printLine"></dev:method>
			<dev:method visibility="public" returncomment="a line from the response" type="java.lang.String" name="readLine"></dev:method>
			<dev:method visibility="public" returncomment="a line from the response" type="java.lang.String" name="readLine">
				<dev:params>
					<dev:param type="java.lang.String" comment="the charset to use for reading the data" name="charset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="shutdownOutput"></dev:method>
			<dev:method visibility="public" type="void" name="close"></dev:method>
			<dev:method visibility="public" returncomment="HttpConnectionManager" type="org.apache.commons.httpclient.dr1_0_0.HttpConnectionManager" name="getHttpConnectionManager"></dev:method>
			<dev:method visibility="public" type="void" name="setHttpConnectionManager">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpConnectionManager" comment="The httpConnectionManager to set" name="httpConnectionManager"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="releaseConnection"></dev:method>
			<dev:method visibility="public" returncomment="the size of the buffer for the socket OutputStream, -1 if the value  has not been set and the socket has not been opened" type="int" name="getSendBufferSize"></dev:method>
			<dev:method visibility="public" type="void" name="setSendBufferSize">
				<dev:params>
					<dev:param type="int" comment="the size to set for the socket OutputStream" name="sendBufferSize"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Error" serializable="true" name="org.apache.commons.httpclient.dr1_0_0.HttpClientError"></dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.dr1_0_0.HttpClient">
		<dev:methods>
			<dev:constructor visibility="public" name="HttpClient"></dev:constructor>
			<dev:constructor visibility="public" name="HttpClient">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.params.dr1_0_0.HttpClientParams" comment="The {@link HttpClientParams parameters} to use." name="params"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpClient">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.params.dr1_0_0.HttpClientParams" comment="The {@link HttpClientParams parameters} to use." name="params"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpConnectionManager" comment="The {@link HttpConnectionManager connection manager}  to use." name="httpConnectionManager"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HttpClient">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpConnectionManager" comment="The {@link HttpConnectionManager connection manager}  to use." name="httpConnectionManager"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="the shared client state" type="org.apache.commons.httpclient.dr1_0_0.HttpState" name="getState"></dev:method>
			<dev:method visibility="public" type="void" name="setState">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpState" comment="the new {@link HttpState HTTP state} for the client" name="state"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setStrictMode">
				<dev:params>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; for strict mode, &lt;tt&gt;false&lt;/tt&gt; otherwise" name="strictMode"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; if strict mode is enabled, &lt;tt&gt;false&lt;/tt&gt; otherwise" type="boolean" name="isStrictMode"></dev:method>
			<dev:method visibility="public" type="void" name="setTimeout">
				<dev:params>
					<dev:param type="int" comment="Timeout in milliseconds" name="newTimeoutInMilliseconds"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setHttpConnectionFactoryTimeout">
				<dev:params>
					<dev:param type="long" comment="the timeout in milliseconds" name="timeout"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setConnectionTimeout">
				<dev:params>
					<dev:param type="int" comment="Timeout in milliseconds." name="newTimeoutInMilliseconds"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the method&apos;s response code" type="int" name="executeMethod">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpMethod" comment="the {@link HttpMethod HTTP method} to execute." name="method"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the method&apos;s response code" type="int" name="executeMethod">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HostConfiguration" comment="The {@link HostConfiguration host configuration} to use.  If &lt;code&gt;null&lt;/code&gt;, the host configuration returned by {@link #getHostConfiguration} will be used." name="hostConfiguration"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpMethod" comment="the {@link HttpMethod HTTP method} to execute." name="method"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the method&apos;s response code" type="int" name="executeMethod">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HostConfiguration" comment="The {@link HostConfiguration host configuration} to use.  If &lt;code&gt;null&lt;/code&gt;, the host configuration returned by {@link #getHostConfiguration} will be used." name="hostconfig"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpMethod" comment="the {@link HttpMethod HTTP method} to execute." name="method"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpState" comment="the {@link HttpState HTTP state} to use when executing the method.  If &lt;code&gt;null&lt;/code&gt;, the state returned by {@link #getState} will be used." name="state"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The default host." type="java.lang.String" name="getHost"></dev:method>
			<dev:method visibility="public" returncomment="The default port." type="int" name="getPort"></dev:method>
			<dev:method visibility="public" returncomment="{@link HostConfiguration host configuration}" type="org.apache.commons.httpclient.dr1_0_0.HostConfiguration" name="getHostConfiguration"></dev:method>
			<dev:method visibility="public" type="void" name="setHostConfiguration">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HostConfiguration" comment="The {@link HostConfiguration host configuration} to set" name="hostConfiguration"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="{@link HttpConnectionManager HTTP connection manager}" type="org.apache.commons.httpclient.dr1_0_0.HttpConnectionManager" name="getHttpConnectionManager"></dev:method>
			<dev:method visibility="public" type="void" name="setHttpConnectionManager">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpConnectionManager" comment="The {@link HttpConnectionManager HTTP connection manager}   to set" name="httpConnectionManager"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="org.apache.commons.httpclient.params.dr1_0_0.HttpClientParams" name="getParams"></dev:method>
			<dev:method visibility="public" type="void" name="setParams">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.params.dr1_0_0.HttpClientParams" name="params"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.dr1_0_0.HostConfiguration">
		<dev:extends>
			<dev:extend name="java.lang.Cloneable"></dev:extend>
		</dev:extends>
		<dev:fields>
			<dev:field visibility="public" fulltype="org.apache.commons.httpclient.dr1_0_0.HostConfiguration" type="HostConfiguration" final="true" name="ANY_HOST_CONFIGURATION" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="HostConfiguration"></dev:constructor>
			<dev:constructor visibility="public" name="HostConfiguration">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HostConfiguration" comment="the hostConfiguration to copy" name="hostConfiguration"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="java.lang.Object" name="clone"></dev:method>
			<dev:method visibility="public" type="java.lang.String" name="toString"></dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt; if the connection&apos;s host information equals that of this  configuration" type="boolean" name="hostEquals">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpConnection" comment="the connection to test against" name="connection"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt; if the connection&apos;s proxy information equals that of this  configuration" type="boolean" name="proxyEquals">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpConnection" comment="the connection to test against" name="connection"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt; if the host is set." type="boolean" name="isHostSet"></dev:method>
			<dev:method visibility="public" type="void" name="setHost">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpHost" comment="the host" name="host"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setHost">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host(IP or DNS name)" name="host"></dev:param>
					<dev:param type="int" comment="The port" name="port"></dev:param>
					<dev:param type="java.lang.String" comment="The protocol." name="protocol"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setHost">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host(IP or DNS name)" name="host"></dev:param>
					<dev:param type="java.lang.String" comment="the virtual host name or &lt;code&gt;null&lt;/code&gt;" name="virtualHost"></dev:param>
					<dev:param type="int" comment="the host port or -1 to use protocol default" name="port"></dev:param>
					<dev:param type="org.apache.commons.httpclient.protocol.dr1_0_0.Protocol" comment="the protocol" name="protocol"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setHost">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host(IP or DNS name)" name="host"></dev:param>
					<dev:param type="int" comment="The port" name="port"></dev:param>
					<dev:param type="org.apache.commons.httpclient.protocol.dr1_0_0.Protocol" comment="the protocol" name="protocol"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setHost">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host(IP or DNS name)" name="host"></dev:param>
					<dev:param type="int" comment="The port" name="port"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setHost">
				<dev:params>
					<dev:param type="java.lang.String" comment="The host(IP or DNS name)." name="host"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setHost">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.URI" comment="the URI." name="uri"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The host url." type="java.lang.String" name="getHostURL"></dev:method>
			<dev:method visibility="public" returncomment="the host(IP or DNS name), or &lt;code&gt;null&lt;/code&gt; if not set" type="java.lang.String" name="getHost"></dev:method>
			<dev:method visibility="public" returncomment="the virtual host name, or &lt;code&gt;null&lt;/code&gt; if not set" type="java.lang.String" name="getVirtualHost"></dev:method>
			<dev:method visibility="public" returncomment="the host port, or &lt;code&gt;-1&lt;/code&gt; if not set" type="int" name="getPort"></dev:method>
			<dev:method visibility="public" returncomment="The protocol." type="org.apache.commons.httpclient.protocol.dr1_0_0.Protocol" name="getProtocol"></dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt; if a proxy server has been set." type="boolean" name="isProxySet"></dev:method>
			<dev:method visibility="public" type="void" name="setProxyHost">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.ProxyHost" comment="the proxy host" name="proxyHost"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setProxy">
				<dev:params>
					<dev:param type="java.lang.String" comment="The proxy host" name="proxyHost"></dev:param>
					<dev:param type="int" comment="The proxy port" name="proxyPort"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the proxy host, or &lt;code&gt;null&lt;/code&gt; if not set" type="java.lang.String" name="getProxyHost"></dev:method>
			<dev:method visibility="public" returncomment="the proxy port, or &lt;code&gt;-1&lt;/code&gt; if not set" type="int" name="getProxyPort"></dev:method>
			<dev:method visibility="public" type="void" name="setLocalAddress">
				<dev:params>
					<dev:param type="java.net.InetAddress" comment="the local address to use" name="localAddress"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the local address to be used when creating Sockets, or &lt;code&gt;null&lt;/code&gt;" type="java.net.InetAddress" name="getLocalAddress"></dev:method>
			<dev:method visibility="public" returncomment="HTTP parameters." type="org.apache.commons.httpclient.params.dr1_0_0.HostParams" name="getParams"></dev:method>
			<dev:method visibility="public" type="void" name="setParams">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.params.dr1_0_0.HostParams" name="params"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="boolean" name="equals">
				<dev:params>
					<dev:param type="java.lang.Object" name="o"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="int" name="hashCode"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.dr1_0_0.HeaderGroup">
		<dev:methods>
			<dev:constructor visibility="public" name="HeaderGroup"></dev:constructor>
			<dev:method visibility="public" type="void" name="clear"></dev:method>
			<dev:method visibility="public" type="void" name="addHeader">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Header" comment="the header to add" name="header"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="removeHeader">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Header" comment="the header to remove" name="header"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setHeaders">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.Header[]" comment="the headers to set" name="headers"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="a header with a condensed value or &lt;code&gt;null&lt;/code&gt; if no  headers by the given name are present" type="org.apache.commons.httpclient.dr1_0_0.Header" name="getCondensedHeader">
				<dev:params>
					<dev:param type="java.lang.String" comment="the name of the header(s) to get" name="name"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="an array of length &gt;= 0" type="org.apache.commons.httpclient.dr1_0_0.Header[]" name="getHeaders">
				<dev:params>
					<dev:param type="java.lang.String" comment="the name of the header(s) to get" name="name"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the first header or &lt;code&gt;null&lt;/code&gt;" type="org.apache.commons.httpclient.dr1_0_0.Header" name="getFirstHeader">
				<dev:params>
					<dev:param type="java.lang.String" comment="the name of the header to get" name="name"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the last header or &lt;code&gt;null&lt;/code&gt;" type="org.apache.commons.httpclient.dr1_0_0.Header" name="getLastHeader">
				<dev:params>
					<dev:param type="java.lang.String" comment="the name of the header to get" name="name"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="an array of length &gt;= 0" type="org.apache.commons.httpclient.dr1_0_0.Header[]" name="getAllHeaders"></dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt; if at least one header with the name is  contained, &lt;code&gt;false&lt;/code&gt; otherwise" type="boolean" name="containsHeader">
				<dev:params>
					<dev:param type="java.lang.String" comment="the header name to test for" name="name"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="iterator over this group of headers." type="java.util.Iterator" name="getIterator"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.dr1_0_0.NameValuePair" serializable="true" name="org.apache.commons.httpclient.dr1_0_0.HeaderElement">
		<dev:methods>
			<dev:constructor visibility="public" name="HeaderElement"></dev:constructor>
			<dev:constructor visibility="public" name="HeaderElement">
				<dev:params>
					<dev:param type="java.lang.String" comment="my name" name="name"></dev:param>
					<dev:param type="java.lang.String" comment="my (possibly &lt;tt&gt;null&lt;/tt&gt;) value" name="value"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HeaderElement">
				<dev:params>
					<dev:param type="java.lang.String" comment="my name" name="name"></dev:param>
					<dev:param type="java.lang.String" comment="my (possibly &lt;tt&gt;null&lt;/tt&gt;) value" name="value"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.NameValuePair[]" comment="my (possibly &lt;tt&gt;null&lt;/tt&gt;) parameters" name="parameters"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HeaderElement">
				<dev:params>
					<dev:param type="char[]" comment="the array of characters" name="chars"></dev:param>
					<dev:param type="int" comment="- the initial offset." name="offset"></dev:param>
					<dev:param type="int" comment="- the length." name="length"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="HeaderElement">
				<dev:params>
					<dev:param type="char[]" comment="the array of characters" name="chars"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="parameters as an array of {@link NameValuePair}s" type="org.apache.commons.httpclient.dr1_0_0.NameValuePair[]" name="getParameters"></dev:method>
			<dev:method visibility="public" returncomment="array of {@link HeaderElement}s." type="org.apache.commons.httpclient.dr1_0_0.HeaderElement[]" final="true" name="parseElements" static="true">
				<dev:params>
					<dev:param type="char[]" comment="the array of char representation of the header value                      (as received from the web server)." name="headerValue"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="array of {@link HeaderElement}s." type="org.apache.commons.httpclient.dr1_0_0.HeaderElement[]" final="true" name="parseElements" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the string representation of the header value                      (as received from the web server)." name="headerValue"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="array of {@link HeaderElement}s." type="org.apache.commons.httpclient.dr1_0_0.HeaderElement[]" final="true" name="parse" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the string representation of the header value                      (as received from the web server)." name="headerValue"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="NameValuePair parameter with the given name" type="org.apache.commons.httpclient.dr1_0_0.NameValuePair" name="getParameterByName">
				<dev:params>
					<dev:param type="java.lang.String" comment="The name to search by." name="name"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.dr1_0_0.NameValuePair" serializable="true" name="org.apache.commons.httpclient.dr1_0_0.Header">
		<dev:methods>
			<dev:constructor visibility="public" name="Header"></dev:constructor>
			<dev:constructor visibility="public" name="Header">
				<dev:params>
					<dev:param type="java.lang.String" comment="the header name" name="name"></dev:param>
					<dev:param type="java.lang.String" comment="the header value" name="value"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="Header">
				<dev:params>
					<dev:param type="java.lang.String" comment="the header name" name="name"></dev:param>
					<dev:param type="java.lang.String" comment="the header value" name="value"></dev:param>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; if the header is autogenerated,   &lt;tt&gt;false&lt;/tt&gt; otherwise." name="isAutogenerated"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="stringHEAD" type="java.lang.String" name="toExternalForm"></dev:method>
			<dev:method visibility="public" returncomment="stringHEAD" type="java.lang.String" name="toString"></dev:method>
			<dev:method visibility="public" returncomment="an array of header elements" type="org.apache.commons.httpclient.dr1_0_0.HeaderElement[]" name="getValues"></dev:method>
			<dev:method visibility="public" returncomment="an array of header elements" type="org.apache.commons.httpclient.dr1_0_0.HeaderElement[]" name="getElements"></dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; if the header is autogenerated,   &lt;tt&gt;false&lt;/tt&gt; otherwise." type="boolean" name="isAutogenerated"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.dr1_0_0.DefaultMethodRetryHandler">
		<dev:extends>
			<dev:extend name="org.apache.commons.httpclient.dr1_0_0.MethodRetryHandler"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="DefaultMethodRetryHandler"></dev:constructor>
			<dev:method visibility="public" type="boolean" name="retryMethod">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpMethod" name="method"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpConnection" name="connection"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpRecoverableException" name="recoverableException"></dev:param>
					<dev:param type="int" name="executionCount"></dev:param>
					<dev:param type="boolean" name="requestSent"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt; if this handler will retry methods that have   successfully sent their request, &lt;code&gt;false&lt;/code&gt; otherwise" type="boolean" name="isRequestSentRetryEnabled"></dev:method>
			<dev:method visibility="public" returncomment="the maximum number of times a method will be retried" type="int" name="getRetryCount"></dev:method>
			<dev:method visibility="public" type="void" name="setRequestSentRetryEnabled">
				<dev:params>
					<dev:param type="boolean" comment="a flag indicating if methods that have   successfully sent their request should be retried" name="requestSentRetryEnabled"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setRetryCount">
				<dev:params>
					<dev:param type="int" comment="the maximum number of times a method can be retried" name="retryCount"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.dr1_0_0.DefaultHttpMethodRetryHandler">
		<dev:extends>
			<dev:extend name="org.apache.commons.httpclient.dr1_0_0.HttpMethodRetryHandler"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="DefaultHttpMethodRetryHandler">
				<dev:params>
					<dev:param type="int" comment="the number of times a method will be retried" name="retryCount"></dev:param>
					<dev:param type="boolean" comment="if true, methods that have successfully sent their request will be retried" name="requestSentRetryEnabled"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="DefaultHttpMethodRetryHandler"></dev:constructor>
			<dev:method visibility="public" type="boolean" name="retryMethod">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpMethod" name="method"></dev:param>
					<dev:param type="java.io.IOException" name="exception"></dev:param>
					<dev:param type="int" name="executionCount"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt; if this handler will retry methods that have   successfully sent their request, &lt;code&gt;false&lt;/code&gt; otherwise" type="boolean" name="isRequestSentRetryEnabled"></dev:method>
			<dev:method visibility="public" returncomment="the maximum number of times a method will be retried" type="int" name="getRetryCount"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class abstract="true" name="org.apache.commons.httpclient.dr1_0_0.Credentials"></dev:class>
	<dev:class superclass="org.apache.commons.httpclient.dr1_0_0.NameValuePair" serializable="true" name="org.apache.commons.httpclient.dr1_0_0.Cookie">
		<dev:extends>
			<dev:extend name="java.io.Serializable"></dev:extend>
			<dev:extend name="java.util.Comparator"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="Cookie"></dev:constructor>
			<dev:constructor visibility="public" name="Cookie">
				<dev:params>
					<dev:param type="java.lang.String" comment="the domain this cookie can be sent to" name="domain"></dev:param>
					<dev:param type="java.lang.String" comment="the cookie name" name="name"></dev:param>
					<dev:param type="java.lang.String" comment="the cookie value" name="value"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="Cookie">
				<dev:params>
					<dev:param type="java.lang.String" comment="the domain this cookie can be sent to" name="domain"></dev:param>
					<dev:param type="java.lang.String" comment="the cookie name" name="name"></dev:param>
					<dev:param type="java.lang.String" comment="the cookie value" name="value"></dev:param>
					<dev:param type="java.lang.String" comment="the path prefix for which this cookie can be sent" name="path"></dev:param>
					<dev:param type="java.util.Date" comment="the {@link Date} at which this cookie expires,                 or &lt;tt&gt;null&lt;/tt&gt; if the cookie expires at the end                 of the session" name="expires"></dev:param>
					<dev:param type="boolean" comment="if true this cookie can only be sent over secure  connections" name="secure"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="Cookie">
				<dev:params>
					<dev:param type="java.lang.String" comment="the domain this cookie can be sent to" name="domain"></dev:param>
					<dev:param type="java.lang.String" comment="the cookie name" name="name"></dev:param>
					<dev:param type="java.lang.String" comment="the cookie value" name="value"></dev:param>
					<dev:param type="java.lang.String" comment="the path prefix for which this cookie can be sent" name="path"></dev:param>
					<dev:param type="int" comment="the number of seconds for which this cookie is valid.                maxAge is expected to be a non-negative number.                 &lt;tt&gt;-1&lt;/tt&gt; signifies that the cookie should never expire." name="maxAge"></dev:param>
					<dev:param type="boolean" comment="if &lt;tt&gt;true&lt;/tt&gt; this cookie can only be sent over secure  connections" name="secure"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="comment" type="java.lang.String" name="getComment"></dev:method>
			<dev:method visibility="public" type="void" name="setComment">
				<dev:params>
					<dev:param type="java.lang.String" comment="" name="comment"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="Expiration {@link Date}, or &lt;tt&gt;null&lt;/tt&gt;." type="java.util.Date" name="getExpiryDate"></dev:method>
			<dev:method visibility="public" type="void" name="setExpiryDate">
				<dev:params>
					<dev:param type="java.util.Date" comment="the {@link Date} after which this cookie is no longer valid." name="expiryDate"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;false&lt;/tt&gt; if the cookie should be discarded at the end          of the &quot;session&quot;; &lt;tt&gt;true&lt;/tt&gt; otherwise" type="boolean" name="isPersistent"></dev:method>
			<dev:method visibility="public" returncomment="the value of the domain attribute" type="java.lang.String" name="getDomain"></dev:method>
			<dev:method visibility="public" type="void" name="setDomain">
				<dev:params>
					<dev:param type="java.lang.String" comment="The value of the domain attribute" name="domain"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The value of the path attribute." type="java.lang.String" name="getPath"></dev:method>
			<dev:method visibility="public" type="void" name="setPath">
				<dev:params>
					<dev:param type="java.lang.String" comment="The value of the path attribute" name="path"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt; if this cookie should only be sent over secure connections." type="boolean" name="getSecure"></dev:method>
			<dev:method visibility="public" type="void" name="setSecure">
				<dev:params>
					<dev:param type="boolean" comment="The value of the secure attribute" name="secure"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the version of the cookie." type="int" name="getVersion"></dev:method>
			<dev:method visibility="public" type="void" name="setVersion">
				<dev:params>
					<dev:param type="int" comment="the version of the cookie." name="version"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; if the cookie has expired." type="boolean" name="isExpired"></dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; if the cookie expired." type="boolean" name="isExpired">
				<dev:params>
					<dev:param type="java.util.Date" comment="The current time." name="now"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setPathAttributeSpecified">
				<dev:params>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; if the cookie&apos;s path was explicitly   set, &lt;tt&gt;false&lt;/tt&gt; otherwise." name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="value &lt;tt&gt;true&lt;/tt&gt; if the cookie&apos;s path was explicitly   set, &lt;tt&gt;false&lt;/tt&gt; otherwise." type="boolean" name="isPathAttributeSpecified"></dev:method>
			<dev:method visibility="public" type="void" name="setDomainAttributeSpecified">
				<dev:params>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; if the cookie&apos;s domain was explicitly   set, &lt;tt&gt;false&lt;/tt&gt; otherwise." name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="value &lt;tt&gt;true&lt;/tt&gt; if the cookie&apos;s domain was explicitly   set, &lt;tt&gt;false&lt;/tt&gt; otherwise." type="boolean" name="isDomainAttributeSpecified"></dev:method>
			<dev:method visibility="public" returncomment="A hash code" type="int" name="hashCode"></dev:method>
			<dev:method visibility="public" returncomment="true if the two objects are equal." type="boolean" name="equals">
				<dev:params>
					<dev:param type="java.lang.Object" comment="The object to compare against." name="obj"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="string." type="java.lang.String" name="toExternalForm"></dev:method>
			<dev:method visibility="public" returncomment="See {@link java.util.Comparator#compare(Object,Object)}" type="int" name="compare">
				<dev:params>
					<dev:param type="java.lang.Object" comment="The first object to be compared" name="o1"></dev:param>
					<dev:param type="java.lang.Object" comment="The second object to be compared" name="o2"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="string." type="java.lang.String" name="toString"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.io.InputStream" name="org.apache.commons.httpclient.dr1_0_0.ContentLengthInputStream">
		<dev:methods>
			<dev:constructor visibility="public" name="ContentLengthInputStream">
				<dev:params>
					<dev:param type="java.io.InputStream" comment="The stream to wrap" name="in"></dev:param>
					<dev:param type="int" comment="The maximum number of bytes that can be read from  the stream. Subsequent read operations will return -1." name="contentLength"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="ContentLengthInputStream">
				<dev:params>
					<dev:param type="java.io.InputStream" comment="The stream to wrap" name="in"></dev:param>
					<dev:param type="long" comment="The maximum number of bytes that can be read from  the stream. Subsequent read operations will return -1." name="contentLength"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="void" name="close"></dev:method>
			<dev:method visibility="public" returncomment="The next byte or -1 if the end of stream has been reached." type="int" name="read"></dev:method>
			<dev:method visibility="public" returncomment="The number of bytes read, or -1 if the end of content has been   reached." type="int" name="read">
				<dev:params>
					<dev:param type="byte[]" comment="The byte array to fill." name="b"></dev:param>
					<dev:param type="int" comment="Start filling at this position." name="off"></dev:param>
					<dev:param type="int" comment="The number of bytes to attempt to read." name="len"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The number of bytes read into the buffer." type="int" name="read">
				<dev:params>
					<dev:param type="byte[]" comment="The byte array to put the new data in." name="b"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The actual number of bytes skipped. &lt;= 0 if no bytes  are skipped." type="long" name="skip">
				<dev:params>
					<dev:param type="long" comment="The number of bytes to skip." name="n"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="int" name="available"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.io.InterruptedIOException" serializable="true" name="org.apache.commons.httpclient.dr1_0_0.ConnectTimeoutException"></dev:class>
	<dev:class superclass="org.apache.commons.httpclient.dr1_0_0.HttpMethodBase" name="org.apache.commons.httpclient.dr1_0_0.ConnectMethod">
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;CONNECT&quot;" const="CONNECT" name="NAME" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="ConnectMethod"></dev:constructor>
			<dev:constructor visibility="public" name="ConnectMethod">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpMethod" comment="the {@link HttpMethod method} to execute after connecting       to the server" name="method"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="ConnectMethod">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HostConfiguration" name="targethost"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="the String &quot;CONNECT&quot;" type="java.lang.String" name="getName"></dev:method>
			<dev:method visibility="public" type="java.lang.String" name="getPath"></dev:method>
			<dev:method visibility="public" type="org.apache.commons.httpclient.dr1_0_0.URI" name="getURI"></dev:method>
			<dev:method visibility="public" returncomment="the http status code from execution" type="int" name="execute">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpState" comment="the current http state" name="state"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpConnection" comment="the connection to write to" name="conn"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.dr1_0_0.ConnectTimeoutException" serializable="true" name="org.apache.commons.httpclient.dr1_0_0.ConnectionPoolTimeoutException"></dev:class>
	<dev:class superclass="org.apache.commons.httpclient.dr1_0_0.RedirectException" serializable="true" name="org.apache.commons.httpclient.dr1_0_0.CircularRedirectException"></dev:class>
	<dev:class superclass="java.io.OutputStream" name="org.apache.commons.httpclient.dr1_0_0.ChunkedOutputStream">
		<dev:methods>
			<dev:constructor visibility="public" name="ChunkedOutputStream">
				<dev:params>
					<dev:param type="java.io.OutputStream" comment="to wrap" name="stream"></dev:param>
					<dev:param type="int" comment="minimum chunk size (excluding last chunk)" name="bufferSize"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="ChunkedOutputStream">
				<dev:params>
					<dev:param type="java.io.OutputStream" comment="" name="stream"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="void" name="finish"></dev:method>
			<dev:method visibility="public" type="void" name="write">
				<dev:params>
					<dev:param type="int" comment="The byte to be written" name="b"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="write">
				<dev:params>
					<dev:param type="byte[]" comment="" name="b"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="write">
				<dev:params>
					<dev:param type="byte[]" name="src"></dev:param>
					<dev:param type="int" name="off"></dev:param>
					<dev:param type="int" name="len"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="flush"></dev:method>
			<dev:method visibility="public" type="void" name="close"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.io.InputStream" name="org.apache.commons.httpclient.dr1_0_0.ChunkedInputStream">
		<dev:methods>
			<dev:constructor visibility="public" name="ChunkedInputStream">
				<dev:params>
					<dev:param type="java.io.InputStream" comment="the raw input stream" name="in"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpMethod" comment="the HTTP method to associate this input stream with. Can be &lt;tt&gt;null&lt;/tt&gt;." name="method"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="ChunkedInputStream">
				<dev:params>
					<dev:param type="java.io.InputStream" comment="the raw input stream" name="in"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="-1 of the end of the stream has been reached or the next data  byte" type="int" name="read"></dev:method>
			<dev:method visibility="public" returncomment="The number of bytes returned or -1 if the end of stream has been  reached." type="int" name="read">
				<dev:params>
					<dev:param type="byte[]" comment="The byte array that will hold the contents from the stream." name="b"></dev:param>
					<dev:param type="int" comment="The offset into the byte array at which bytes will start to be  placed." name="off"></dev:param>
					<dev:param type="int" comment="the maximum number of bytes that can be returned." name="len"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The number of bytes returned or -1 if the end of stream has been  reached." type="int" name="read">
				<dev:params>
					<dev:param type="byte[]" comment="The byte array that will hold the contents from the stream." name="b"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="close"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.dr1_0_0.HttpMethodBase" name="org.apache.commons.httpclient.methods.dr1_0_0.TraceMethod">
		<dev:methods>
			<dev:constructor visibility="public" name="TraceMethod">
				<dev:params>
					<dev:param type="java.lang.String" comment="either an absolute or relative URI" name="uri"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="&lt;tt&gt;&quot;TRACE&quot;&lt;/tt&gt;" type="java.lang.String" name="getName"></dev:method>
			<dev:method visibility="public" type="void" name="recycle"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.methods.dr1_0_0.StringRequestEntity">
		<dev:extends>
			<dev:extend name="org.apache.commons.httpclient.methods.dr1_0_0.RequestEntity"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="StringRequestEntity">
				<dev:params>
					<dev:param type="java.lang.String" comment="The content to set." name="content"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="StringRequestEntity">
				<dev:params>
					<dev:param type="java.lang.String" comment="The content to set." name="content"></dev:param>
					<dev:param type="java.lang.String" comment="The type of the content, or &lt;code&gt;null&lt;/code&gt;.  The value retured     by {@link #getContentType()}.  If this content type contains a charset and the charset    parameter is null, the content&apos;s type charset will be used." name="contentType"></dev:param>
					<dev:param type="java.lang.String" comment="The charset of the content, or &lt;code&gt;null&lt;/code&gt;.  Used to convert the     content to bytes.  If the content type does not contain a charset and charset is not null,    then the charset will be appended to the content type." name="charset"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="java.lang.String" name="getContentType"></dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt;" type="boolean" name="isRepeatable"></dev:method>
			<dev:method visibility="public" type="void" name="writeRequest">
				<dev:params>
					<dev:param type="java.io.OutputStream" name="out"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The length of the content." type="long" name="getContentLength"></dev:method>
			<dev:method visibility="public" returncomment="Returns the content." type="java.lang.String" name="getContent"></dev:method>
			<dev:method visibility="public" returncomment="Returns the charset used to convert the content to bytes. &lt;code&gt;null&lt;/code&gt; if  no charset as been specified." type="java.lang.String" name="getCharset"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class abstract="true" name="org.apache.commons.httpclient.methods.dr1_0_0.RequestEntity"></dev:class>
	<dev:class superclass="org.apache.commons.httpclient.methods.dr1_0_0.EntityEnclosingMethod" name="org.apache.commons.httpclient.methods.dr1_0_0.PutMethod">
		<dev:methods>
			<dev:constructor visibility="public" name="PutMethod"></dev:constructor>
			<dev:constructor visibility="public" name="PutMethod">
				<dev:params>
					<dev:param type="java.lang.String" comment="either an absolute or relative URI" name="uri"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="&lt;tt&gt;&quot;PUT&quot;&lt;/tt&gt;" type="java.lang.String" name="getName"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.methods.dr1_0_0.EntityEnclosingMethod" name="org.apache.commons.httpclient.methods.dr1_0_0.PostMethod">
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;application/x-www-form-urlencoded&quot;" const="application/x-www-form-urlencoded" name="FORM_URL_ENCODED_CONTENT_TYPE" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="PostMethod"></dev:constructor>
			<dev:constructor visibility="public" name="PostMethod">
				<dev:params>
					<dev:param type="java.lang.String" comment="either an absolute or relative URI" name="uri"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="&lt;tt&gt;&quot;POST&quot;&lt;/tt&gt;" type="java.lang.String" name="getName"></dev:method>
			<dev:method visibility="public" type="void" name="setParameter">
				<dev:params>
					<dev:param type="java.lang.String" comment="name of the parameter" name="parameterName"></dev:param>
					<dev:param type="java.lang.String" comment="value of the parameter" name="parameterValue"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="If a parameter exists with the name argument, the coresponding          NameValuePair is returned.  Otherwise null." type="org.apache.commons.httpclient.dr1_0_0.NameValuePair" name="getParameter">
				<dev:params>
					<dev:param type="java.lang.String" comment="name of the parameter" name="paramName"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="An array of the current parameters" type="org.apache.commons.httpclient.dr1_0_0.NameValuePair[]" name="getParameters"></dev:method>
			<dev:method visibility="public" type="void" name="addParameter">
				<dev:params>
					<dev:param type="java.lang.String" comment="The parameter name to add." name="paramName"></dev:param>
					<dev:param type="java.lang.String" comment="The parameter value to add." name="paramValue"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="addParameter">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.NameValuePair" comment="The parameter to add." name="param"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="addParameters">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.NameValuePair[]" comment="The array of parameters to add." name="parameters"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="true if at least one parameter was removed" type="boolean" name="removeParameter">
				<dev:params>
					<dev:param type="java.lang.String" comment="The parameter name to remove." name="paramName"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="true if a parameter was removed." type="boolean" name="removeParameter">
				<dev:params>
					<dev:param type="java.lang.String" comment="The parameter name to remove." name="paramName"></dev:param>
					<dev:param type="java.lang.String" comment="The parameter value to remove." name="paramValue"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setRequestBody">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.NameValuePair[]" comment="The array of parameters to add." name="parametersBody"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.dr1_0_0.HttpMethodBase" name="org.apache.commons.httpclient.methods.dr1_0_0.OptionsMethod">
		<dev:methods>
			<dev:constructor visibility="public" name="OptionsMethod"></dev:constructor>
			<dev:constructor visibility="public" name="OptionsMethod">
				<dev:params>
					<dev:param type="java.lang.String" comment="either an absolute or relative URI" name="uri"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="&quot;OPTIONS&quot;" type="java.lang.String" name="getName"></dev:method>
			<dev:method visibility="public" returncomment="true if the specified method is allowed." type="boolean" name="isAllowed">
				<dev:params>
					<dev:param type="java.lang.String" comment="The method to check." name="method"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="An enumeration of all the allowed methods." type="java.util.Enumeration" name="getAllowedMethods"></dev:method>
			<dev:method visibility="public" returncomment="true if a content-length header will be expected by the server" type="boolean" name="needContentLength"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.methods.dr1_0_0.ExpectContinueMethod" name="org.apache.commons.httpclient.methods.dr1_0_0.MultipartPostMethod">
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;multipart/form-data&quot;" const="multipart/form-data" name="MULTIPART_FORM_CONTENT_TYPE" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="MultipartPostMethod"></dev:constructor>
			<dev:constructor visibility="public" name="MultipartPostMethod">
				<dev:params>
					<dev:param type="java.lang.String" comment="either an absolute or relative URI" name="uri"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="&lt;tt&gt;&quot;POST&quot;&lt;/tt&gt;" type="java.lang.String" name="getName"></dev:method>
			<dev:method visibility="public" type="void" name="addParameter">
				<dev:params>
					<dev:param type="java.lang.String" comment="The name of the parameter." name="parameterName"></dev:param>
					<dev:param type="java.lang.String" comment="The value of the parameter." name="parameterValue"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="addParameter">
				<dev:params>
					<dev:param type="java.lang.String" comment="The name of the parameter" name="parameterName"></dev:param>
					<dev:param type="java.io.File" comment="The name of the file." name="parameterFile"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="addParameter">
				<dev:params>
					<dev:param type="java.lang.String" comment="The name of the parameter" name="parameterName"></dev:param>
					<dev:param type="java.lang.String" comment="The file name" name="fileName"></dev:param>
					<dev:param type="java.io.File" comment="The file" name="parameterFile"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="addPart">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.methods.multipart.dr1_0_0.Part" comment="The part to add." name="part"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="an array of containing all parts" type="org.apache.commons.httpclient.methods.multipart.dr1_0_0.Part[]" name="getParts"></dev:method>
			<dev:method visibility="public" type="void" name="recycle"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.methods.dr1_0_0.InputStreamRequestEntity">
		<dev:extends>
			<dev:extend name="org.apache.commons.httpclient.methods.dr1_0_0.RequestEntity"></dev:extend>
		</dev:extends>
		<dev:fields>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="-2" const="-2" name="CONTENT_LENGTH_AUTO" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="InputStreamRequestEntity">
				<dev:params>
					<dev:param type="java.io.InputStream" comment="The content to set." name="content"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="InputStreamRequestEntity">
				<dev:params>
					<dev:param type="java.io.InputStream" comment="The content to set." name="content"></dev:param>
					<dev:param type="java.lang.String" comment="The type of the content, or &lt;code&gt;null&lt;/code&gt;." name="contentType"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="InputStreamRequestEntity">
				<dev:params>
					<dev:param type="java.io.InputStream" comment="The content to set." name="content"></dev:param>
					<dev:param type="long" comment="The content size in bytes or a negative number if not known.   If {@link #CONTENT_LENGTH_AUTO} is given the content will be buffered in order to    determine its size when {@link #getContentLength()} is called." name="contentLength"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="InputStreamRequestEntity">
				<dev:params>
					<dev:param type="java.io.InputStream" comment="The content to set." name="content"></dev:param>
					<dev:param type="long" comment="The content size in bytes or a negative number if not known.   If {@link #CONTENT_LENGTH_AUTO} is given the content will be buffered in order to    determine its size when {@link #getContentLength()} is called." name="contentLength"></dev:param>
					<dev:param type="java.lang.String" comment="The type of the content, or &lt;code&gt;null&lt;/code&gt;." name="contentType"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="java.lang.String" name="getContentType"></dev:method>
			<dev:method visibility="public" type="boolean" name="isRepeatable"></dev:method>
			<dev:method visibility="public" type="void" name="writeRequest">
				<dev:params>
					<dev:param type="java.io.OutputStream" name="out"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="long" name="getContentLength"></dev:method>
			<dev:method visibility="public" returncomment="Returns the content." type="java.io.InputStream" name="getContent"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.dr1_0_0.HttpMethodBase" name="org.apache.commons.httpclient.methods.dr1_0_0.HeadMethod">
		<dev:methods>
			<dev:constructor visibility="public" name="HeadMethod"></dev:constructor>
			<dev:constructor visibility="public" name="HeadMethod">
				<dev:params>
					<dev:param type="java.lang.String" comment="either an absolute or relative URI" name="uri"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="&lt;tt&gt;&quot;HEAD&quot;&lt;/tt&gt;" type="java.lang.String" name="getName"></dev:method>
			<dev:method visibility="public" type="void" name="recycle"></dev:method>
			<dev:method visibility="public" returncomment="The period of time in milliseconds to wait for a response           body from a non-compliant server. &lt;tt&gt;-1&lt;/tt&gt; returned when           non-compliant response body check is disabled" type="int" name="getBodyCheckTimeout"></dev:method>
			<dev:method visibility="public" type="void" name="setBodyCheckTimeout">
				<dev:params>
					<dev:param type="int" comment="The period of time in milliseconds to wait for a response           body from a non-compliant server. &lt;tt&gt;-1&lt;/tt&gt; can be used to           disable non-compliant response body check" name="timeout"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.dr1_0_0.HttpMethodBase" name="org.apache.commons.httpclient.methods.dr1_0_0.GetMethod">
		<dev:methods>
			<dev:constructor visibility="public" name="GetMethod"></dev:constructor>
			<dev:constructor visibility="public" name="GetMethod">
				<dev:params>
					<dev:param type="java.lang.String" comment="either an absolute or relative URI" name="uri"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="&lt;tt&gt;&quot;GET&quot;&lt;/tt&gt;" type="java.lang.String" name="getName"></dev:method>
			<dev:method visibility="public" type="void" name="recycle"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.methods.dr1_0_0.FileRequestEntity">
		<dev:extends>
			<dev:extend name="org.apache.commons.httpclient.methods.dr1_0_0.RequestEntity"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="FileRequestEntity">
				<dev:params>
					<dev:param type="java.io.File" name="file"></dev:param>
					<dev:param type="java.lang.String" name="contentType"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="long" name="getContentLength"></dev:method>
			<dev:method visibility="public" type="java.lang.String" name="getContentType"></dev:method>
			<dev:method visibility="public" type="boolean" name="isRepeatable"></dev:method>
			<dev:method visibility="public" type="void" name="writeRequest">
				<dev:params>
					<dev:param type="java.io.OutputStream" name="out"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.dr1_0_0.HttpMethodBase" abstract="true" name="org.apache.commons.httpclient.methods.dr1_0_0.ExpectContinueMethod">
		<dev:methods>
			<dev:constructor visibility="public" name="ExpectContinueMethod"></dev:constructor>
			<dev:constructor visibility="public" name="ExpectContinueMethod">
				<dev:params>
					<dev:param type="java.lang.String" comment="either an absolute or relative URI" name="uri"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; if &apos;Expect: 100-Continue&apos; handshake is to  be used, &lt;tt&gt;false&lt;/tt&gt; otherwise." type="boolean" name="getUseExpectHeader"></dev:method>
			<dev:method visibility="public" type="void" name="setUseExpectHeader">
				<dev:params>
					<dev:param type="boolean" comment="boolean value" name="value"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.methods.dr1_0_0.ExpectContinueMethod" abstract="true" name="org.apache.commons.httpclient.methods.dr1_0_0.EntityEnclosingMethod">
		<dev:fields>
			<dev:field visibility="public" fulltype="long" type="long" final="true" constexpr="-2l" const="-2" name="CONTENT_LENGTH_AUTO" static="true"></dev:field>
			<dev:field visibility="public" fulltype="long" type="long" final="true" constexpr="-1l" const="-1" name="CONTENT_LENGTH_CHUNKED" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="EntityEnclosingMethod"></dev:constructor>
			<dev:constructor visibility="public" name="EntityEnclosingMethod">
				<dev:params>
					<dev:param type="java.lang.String" comment="either an absolute or relative URI" name="uri"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="&lt;code&gt;false&lt;/code&gt;." type="boolean" name="getFollowRedirects"></dev:method>
			<dev:method visibility="public" type="void" name="setFollowRedirects">
				<dev:params>
					<dev:param type="boolean" comment="must always be &lt;code&gt;false&lt;/code&gt;" name="followRedirects"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setRequestContentLength">
				<dev:params>
					<dev:param type="int" comment="size in bytes or any of CONTENT_LENGTH_AUTO,         CONTENT_LENGTH_CHUNKED. If number of bytes or CONTENT_LENGTH_CHUNKED         is specified the content will not be buffered internally and the         Content-Length header of the request will be used. In this case         the user is responsible to supply the correct content length.         If CONTENT_LENGTH_AUTO is specified the request will be buffered         before it is sent over the network." name="length"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="java.lang.String" name="getRequestCharSet"></dev:method>
			<dev:method visibility="public" type="void" name="setRequestContentLength">
				<dev:params>
					<dev:param type="long" comment="size in bytes or any of CONTENT_LENGTH_AUTO,         CONTENT_LENGTH_CHUNKED. If number of bytes or CONTENT_LENGTH_CHUNKED         is specified the content will not be buffered internally and the         Content-Length header of the request will be used. In this case         the user is responsible to supply the correct content length.         If CONTENT_LENGTH_AUTO is specified the request will be buffered         before it is sent over the network." name="length"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setContentChunked">
				<dev:params>
					<dev:param type="boolean" comment="&lt;code&gt;true&lt;/code&gt; if the content should be chunked" name="chunked"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setRequestBody">
				<dev:params>
					<dev:param type="java.io.InputStream" comment="Request body content as {@link java.io.InputStream}" name="body"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setRequestBody">
				<dev:params>
					<dev:param type="java.lang.String" comment="Request body content as a string" name="body"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="recycle"></dev:method>
			<dev:method visibility="public" returncomment="Returns the requestEntity." type="org.apache.commons.httpclient.methods.dr1_0_0.RequestEntity" name="getRequestEntity"></dev:method>
			<dev:method visibility="public" type="void" name="setRequestEntity">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.methods.dr1_0_0.RequestEntity" comment="The requestEntity to set." name="requestEntity"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.dr1_0_0.HttpMethodBase" name="org.apache.commons.httpclient.methods.dr1_0_0.DeleteMethod">
		<dev:methods>
			<dev:constructor visibility="public" name="DeleteMethod"></dev:constructor>
			<dev:constructor visibility="public" name="DeleteMethod">
				<dev:params>
					<dev:param type="java.lang.String" comment="either an absolute or relative URI" name="uri"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="&lt;tt&gt;&quot;DELETE&quot;&lt;/tt&gt;" type="java.lang.String" name="getName"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.methods.dr1_0_0.ByteArrayRequestEntity">
		<dev:extends>
			<dev:extend name="org.apache.commons.httpclient.methods.dr1_0_0.RequestEntity"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="ByteArrayRequestEntity">
				<dev:params>
					<dev:param type="byte[]" comment="The content to set." name="content"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="ByteArrayRequestEntity">
				<dev:params>
					<dev:param type="byte[]" comment="The content to set." name="content"></dev:param>
					<dev:param type="java.lang.String" comment="The content type to set or &lt;code&gt;null&lt;/code&gt;." name="contentType"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt;" type="boolean" name="isRepeatable"></dev:method>
			<dev:method visibility="public" type="java.lang.String" name="getContentType"></dev:method>
			<dev:method visibility="public" type="void" name="writeRequest">
				<dev:params>
					<dev:param type="java.io.OutputStream" name="out"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The length of the content." type="long" name="getContentLength"></dev:method>
			<dev:method visibility="public" returncomment="Returns the content." type="byte[]" name="getContent"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.methods.multipart.dr1_0_0.PartBase" name="org.apache.commons.httpclient.methods.multipart.dr1_0_0.StringPart">
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;text/plain&quot;" const="text/plain" name="DEFAULT_CONTENT_TYPE" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;US-ASCII&quot;" const="US-ASCII" name="DEFAULT_CHARSET" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;8bit&quot;" const="8bit" name="DEFAULT_TRANSFER_ENCODING" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="StringPart">
				<dev:params>
					<dev:param type="java.lang.String" comment="The name of the part" name="name"></dev:param>
					<dev:param type="java.lang.String" comment="the string to post" name="value"></dev:param>
					<dev:param type="java.lang.String" comment="the charset to be used to encode the string, if &lt;code&gt;null&lt;/code&gt;   the {@link #DEFAULT_CHARSET default} is used" name="charset"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="StringPart">
				<dev:params>
					<dev:param type="java.lang.String" comment="The name of the part" name="name"></dev:param>
					<dev:param type="java.lang.String" comment="the string to post" name="value"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="void" name="setCharSet">
				<dev:params>
					<dev:param type="java.lang.String" name="charSet"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class abstract="true" name="org.apache.commons.httpclient.methods.multipart.dr1_0_0.PartSource"></dev:class>
	<dev:class superclass="org.apache.commons.httpclient.methods.multipart.dr1_0_0.Part" abstract="true" name="org.apache.commons.httpclient.methods.multipart.dr1_0_0.PartBase">
		<dev:methods>
			<dev:constructor visibility="public" name="PartBase">
				<dev:params>
					<dev:param type="java.lang.String" comment="The name of the part" name="name"></dev:param>
					<dev:param type="java.lang.String" comment="The content type, or &lt;code&gt;null&lt;/code&gt;" name="contentType"></dev:param>
					<dev:param type="java.lang.String" comment="The character encoding, or &lt;code&gt;null&lt;/code&gt;" name="charSet"></dev:param>
					<dev:param type="java.lang.String" comment="The transfer encoding, or &lt;code&gt;null&lt;/code&gt;" name="transferEncoding"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="The name." type="java.lang.String" name="getName"></dev:method>
			<dev:method visibility="public" returncomment="String The name." type="java.lang.String" name="getContentType"></dev:method>
			<dev:method visibility="public" returncomment="String The name." type="java.lang.String" name="getCharSet"></dev:method>
			<dev:method visibility="public" returncomment="String The name." type="java.lang.String" name="getTransferEncoding"></dev:method>
			<dev:method visibility="public" type="void" name="setCharSet">
				<dev:params>
					<dev:param type="java.lang.String" comment="the character encoding, or &lt;code&gt;null&lt;/code&gt; to exclude the character   encoding header" name="charSet"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setContentType">
				<dev:params>
					<dev:param type="java.lang.String" comment="the content type, or &lt;code&gt;null&lt;/code&gt; to exclude the content type header" name="contentType"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setName">
				<dev:params>
					<dev:param type="java.lang.String" comment="" name="name"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setTransferEncoding">
				<dev:params>
					<dev:param type="java.lang.String" comment="the transfer encoding, or &lt;code&gt;null&lt;/code&gt; to exclude the   transfer encoding header" name="transferEncoding"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" abstract="true" name="org.apache.commons.httpclient.methods.multipart.dr1_0_0.Part">
		<dev:fields></dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="Part"></dev:constructor>
			<dev:method visibility="public" returncomment="the boundary string" type="java.lang.String" name="getBoundary" static="true"></dev:method>
			<dev:method visibility="public" returncomment="The name." type="java.lang.String" name="getName"></dev:method>
			<dev:method visibility="public" returncomment="the content type, or &lt;code&gt;null&lt;/code&gt; to exclude the content type header" type="java.lang.String" name="getContentType"></dev:method>
			<dev:method visibility="public" returncomment="the character encoding, or &lt;code&gt;null&lt;/code&gt; to exclude the character   encoding header" type="java.lang.String" name="getCharSet"></dev:method>
			<dev:method visibility="public" returncomment="the transfer encoding, or &lt;code&gt;null&lt;/code&gt; to exclude the transfer encoding header" type="java.lang.String" name="getTransferEncoding"></dev:method>
			<dev:method visibility="public" returncomment="&lt;code&gt;true&lt;/code&gt; if {@link #sendData(OutputStream)} can be successfully called   more than once." type="boolean" name="isRepeatable"></dev:method>
			<dev:method visibility="public" type="void" name="send">
				<dev:params>
					<dev:param type="java.io.OutputStream" comment="The output stream" name="out"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="long The length." type="long" name="length"></dev:method>
			<dev:method visibility="public" returncomment="A string representation of this object." type="java.lang.String" name="toString"></dev:method>
			<dev:method visibility="public" type="void" name="sendParts" static="true">
				<dev:params>
					<dev:param type="java.io.OutputStream" comment="The stream to write to." name="out"></dev:param>
					<dev:param type="org.apache.commons.httpclient.methods.multipart.dr1_0_0.Part[]" comment="The parts to write." name="parts"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="sendParts" static="true">
				<dev:params>
					<dev:param type="java.io.OutputStream" comment="The stream to write to." name="out"></dev:param>
					<dev:param type="org.apache.commons.httpclient.methods.multipart.dr1_0_0.Part[]" comment="The parts to write." name="parts"></dev:param>
					<dev:param type="byte[]" comment="The ASCII bytes to use as the part boundary." name="partBoundary"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The total length" type="long" name="getLengthOfParts" static="true">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.methods.multipart.dr1_0_0.Part[]" comment="The parts." name="parts"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The total length" type="long" name="getLengthOfParts" static="true">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.methods.multipart.dr1_0_0.Part[]" comment="The parts." name="parts"></dev:param>
					<dev:param type="byte[]" comment="The ASCII bytes to use as the part boundary." name="partBoundary"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.methods.multipart.dr1_0_0.MultipartRequestEntity">
		<dev:extends>
			<dev:extend name="org.apache.commons.httpclient.methods.dr1_0_0.RequestEntity"></dev:extend>
		</dev:extends>
		<dev:fields></dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="MultipartRequestEntity">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.methods.multipart.dr1_0_0.Part[]" comment="The parts to include." name="parts"></dev:param>
					<dev:param type="org.apache.commons.httpclient.params.dr1_0_0.HttpMethodParams" comment="The params of the HttpMethod using this entity." name="params"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="boolean" name="isRepeatable"></dev:method>
			<dev:method visibility="public" type="void" name="writeRequest">
				<dev:params>
					<dev:param type="java.io.OutputStream" name="out"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="long" name="getContentLength"></dev:method>
			<dev:method visibility="public" type="java.lang.String" name="getContentType"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.methods.multipart.dr1_0_0.FilePartSource">
		<dev:extends>
			<dev:extend name="org.apache.commons.httpclient.methods.multipart.dr1_0_0.PartSource"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="FilePartSource">
				<dev:params>
					<dev:param type="java.io.File" comment="the FilePart source File." name="file"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="FilePartSource">
				<dev:params>
					<dev:param type="java.lang.String" comment="the file name of the FilePart" name="fileName"></dev:param>
					<dev:param type="java.io.File" comment="the source File for the FilePart" name="file"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="the length of the file." type="long" name="getLength"></dev:method>
			<dev:method visibility="public" returncomment="the filename." type="java.lang.String" name="getFileName"></dev:method>
			<dev:method visibility="public" returncomment="the new input stream." type="java.io.InputStream" name="createInputStream"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.methods.multipart.dr1_0_0.PartBase" name="org.apache.commons.httpclient.methods.multipart.dr1_0_0.FilePart">
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;application/octet-stream&quot;" const="application/octet-stream" name="DEFAULT_CONTENT_TYPE" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;ISO-8859-1&quot;" const="ISO-8859-1" name="DEFAULT_CHARSET" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;binary&quot;" const="binary" name="DEFAULT_TRANSFER_ENCODING" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="FilePart">
				<dev:params>
					<dev:param type="java.lang.String" comment="the name for this part" name="name"></dev:param>
					<dev:param type="org.apache.commons.httpclient.methods.multipart.dr1_0_0.PartSource" comment="the source for this part" name="partSource"></dev:param>
					<dev:param type="java.lang.String" comment="the content type for this part, if &lt;code&gt;null&lt;/code&gt; the   {@link #DEFAULT_CONTENT_TYPE default} is used" name="contentType"></dev:param>
					<dev:param type="java.lang.String" comment="the charset encoding for this part, if &lt;code&gt;null&lt;/code&gt; the   {@link #DEFAULT_CHARSET default} is used" name="charset"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="FilePart">
				<dev:params>
					<dev:param type="java.lang.String" comment="the name for this part" name="name"></dev:param>
					<dev:param type="org.apache.commons.httpclient.methods.multipart.dr1_0_0.PartSource" comment="the source for this part" name="partSource"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="FilePart">
				<dev:params>
					<dev:param type="java.lang.String" comment="the name of the file part" name="name"></dev:param>
					<dev:param type="java.io.File" comment="the file to post" name="file"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="FilePart">
				<dev:params>
					<dev:param type="java.lang.String" comment="the name of the file part" name="name"></dev:param>
					<dev:param type="java.io.File" comment="the file to post" name="file"></dev:param>
					<dev:param type="java.lang.String" comment="the content type for this part, if &lt;code&gt;null&lt;/code&gt; the   {@link #DEFAULT_CONTENT_TYPE default} is used" name="contentType"></dev:param>
					<dev:param type="java.lang.String" comment="the charset encoding for this part, if &lt;code&gt;null&lt;/code&gt; the   {@link #DEFAULT_CHARSET default} is used" name="charset"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="FilePart">
				<dev:params>
					<dev:param type="java.lang.String" comment="the name of the file part" name="name"></dev:param>
					<dev:param type="java.lang.String" comment="the file name" name="fileName"></dev:param>
					<dev:param type="java.io.File" comment="the file to post" name="file"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="FilePart">
				<dev:params>
					<dev:param type="java.lang.String" comment="the name of the file part" name="name"></dev:param>
					<dev:param type="java.lang.String" comment="the file name" name="fileName"></dev:param>
					<dev:param type="java.io.File" comment="the file to post" name="file"></dev:param>
					<dev:param type="java.lang.String" comment="the content type for this part, if &lt;code&gt;null&lt;/code&gt; the   {@link #DEFAULT_CONTENT_TYPE default} is used" name="contentType"></dev:param>
					<dev:param type="java.lang.String" comment="the charset encoding for this part, if &lt;code&gt;null&lt;/code&gt; the   {@link #DEFAULT_CHARSET default} is used" name="charset"></dev:param>
				</dev:params>
			</dev:constructor>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.methods.multipart.dr1_0_0.ByteArrayPartSource">
		<dev:extends>
			<dev:extend name="org.apache.commons.httpclient.methods.multipart.dr1_0_0.PartSource"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="ByteArrayPartSource">
				<dev:params>
					<dev:param type="java.lang.String" comment="the name of the file these bytes represent" name="fileName"></dev:param>
					<dev:param type="byte[]" comment="the content of this part" name="bytes"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="long" name="getLength"></dev:method>
			<dev:method visibility="public" type="java.lang.String" name="getFileName"></dev:method>
			<dev:method visibility="public" type="java.io.InputStream" name="createInputStream"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class abstract="true" name="org.apache.commons.httpclient.params.dr1_0_0.HttpParamsFactory"></dev:class>
	<dev:class abstract="true" name="org.apache.commons.httpclient.params.dr1_0_0.HttpParams"></dev:class>
	<dev:class superclass="org.apache.commons.httpclient.params.dr1_0_0.DefaultHttpParams" serializable="true" name="org.apache.commons.httpclient.params.dr1_0_0.HttpMethodParams">
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.useragent&quot;" const="http.useragent" name="USER_AGENT" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.protocol.version&quot;" const="http.protocol.version" name="PROTOCOL_VERSION" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.protocol.unambiguous-statusline&quot;" const="http.protocol.unambiguous-statusline" name="UNAMBIGUOUS_STATUS_LINE" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.protocol.single-cookie-header&quot;" const="http.protocol.single-cookie-header" name="SINGLE_COOKIE_HEADER" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.protocol.strict-transfer-encoding&quot;" const="http.protocol.strict-transfer-encoding" name="STRICT_TRANSFER_ENCODING" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.protocol.reject-head-body&quot;" const="http.protocol.reject-head-body" name="REJECT_HEAD_BODY" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.protocol.head-body-timeout&quot;" const="http.protocol.head-body-timeout" name="HEAD_BODY_CHECK_TIMEOUT" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.protocol.expect-continue&quot;" const="http.protocol.expect-continue" name="USE_EXPECT_CONTINUE" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.protocol.credential-charset&quot;" const="http.protocol.credential-charset" name="CREDENTIAL_CHARSET" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.protocol.element-charset&quot;" const="http.protocol.element-charset" name="HTTP_ELEMENT_CHARSET" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.protocol.uri-charset&quot;" const="http.protocol.uri-charset" name="HTTP_URI_CHARSET" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.protocol.content-charset&quot;" const="http.protocol.content-charset" name="HTTP_CONTENT_CHARSET" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.protocol.cookie-policy&quot;" const="http.protocol.cookie-policy" name="COOKIE_POLICY" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.protocol.warn-extra-input&quot;" const="http.protocol.warn-extra-input" name="WARN_EXTRA_INPUT" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.protocol.status-line-garbage-limit&quot;" const="http.protocol.status-line-garbage-limit" name="STATUS_LINE_GARBAGE_LIMIT" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.socket.timeout&quot;" const="http.socket.timeout" name="SO_TIMEOUT" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.dateparser.patterns&quot;" const="http.dateparser.patterns" name="DATE_PATTERNS" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.method.retry-handler&quot;" const="http.method.retry-handler" name="RETRY_HANDLER" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.method.response.buffer.warnlimit&quot;" const="http.method.response.buffer.warnlimit" name="BUFFER_WARN_TRIGGER_LIMIT" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.virtual-host&quot;" const="http.virtual-host" name="VIRTUAL_HOST" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.method.multipart.boundary&quot;" const="http.method.multipart.boundary" name="MULTIPART_BOUNDARY" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="HttpMethodParams"></dev:constructor>
			<dev:constructor visibility="public" name="HttpMethodParams">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.params.dr1_0_0.HttpParams" comment="the parent collection to defer to, if a parameter  is not explictly set in the collection itself." name="defaults"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="The charset" type="java.lang.String" name="getHttpElementCharset"></dev:method>
			<dev:method visibility="public" type="void" name="setHttpElementCharset">
				<dev:params>
					<dev:param type="java.lang.String" comment="The charset" name="charset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The charset" type="java.lang.String" name="getContentCharset"></dev:method>
			<dev:method visibility="public" type="void" name="setUriCharset">
				<dev:params>
					<dev:param type="java.lang.String" comment="The charset" name="charset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The charset" type="java.lang.String" name="getUriCharset"></dev:method>
			<dev:method visibility="public" type="void" name="setContentCharset">
				<dev:params>
					<dev:param type="java.lang.String" comment="The charset" name="charset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The charset" type="java.lang.String" name="getCredentialCharset"></dev:method>
			<dev:method visibility="public" type="void" name="setCredentialCharset">
				<dev:params>
					<dev:param type="java.lang.String" comment="The charset" name="charset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="{@link HttpVersion HTTP protocol version}" type="org.apache.commons.httpclient.dr1_0_0.HttpVersion" name="getVersion"></dev:method>
			<dev:method visibility="public" type="void" name="setVersion">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpVersion" comment="the {@link HttpVersion HTTP protocol version}" name="version"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="{@link CookiePolicy cookie policy}" type="java.lang.String" name="getCookiePolicy"></dev:method>
			<dev:method visibility="public" type="void" name="setCookiePolicy">
				<dev:params>
					<dev:param type="java.lang.String" comment="the {@link CookiePolicy cookie policy}" name="policy"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="timeout in milliseconds" type="int" name="getSoTimeout"></dev:method>
			<dev:method visibility="public" type="void" name="setSoTimeout">
				<dev:params>
					<dev:param type="int" comment="Timeout in milliseconds" name="timeout"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setVirtualHost">
				<dev:params>
					<dev:param type="java.lang.String" comment="The host name" name="hostname"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The virtual host name" type="java.lang.String" name="getVirtualHost"></dev:method>
			<dev:method visibility="public" type="void" name="makeStrict"></dev:method>
			<dev:method visibility="public" type="void" name="makeLenient"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.params.dr1_0_0.DefaultHttpParams" serializable="true" name="org.apache.commons.httpclient.params.dr1_0_0.HttpConnectionParams">
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.socket.timeout&quot;" const="http.socket.timeout" name="SO_TIMEOUT" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.tcp.nodelay&quot;" const="http.tcp.nodelay" name="TCP_NODELAY" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.socket.sendbuffer&quot;" const="http.socket.sendbuffer" name="SO_SNDBUF" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.socket.receivebuffer&quot;" const="http.socket.receivebuffer" name="SO_RCVBUF" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.socket.linger&quot;" const="http.socket.linger" name="SO_LINGER" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.connection.timeout&quot;" const="http.connection.timeout" name="CONNECTION_TIMEOUT" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.connection.stalecheck&quot;" const="http.connection.stalecheck" name="STALE_CONNECTION_CHECK" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="HttpConnectionParams"></dev:constructor>
			<dev:method visibility="public" returncomment="timeout in milliseconds" type="int" name="getSoTimeout"></dev:method>
			<dev:method visibility="public" type="void" name="setSoTimeout">
				<dev:params>
					<dev:param type="int" comment="Timeout in milliseconds" name="timeout"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setTcpNoDelay">
				<dev:params>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; if the Nagle&apos;s algorithm is to NOT be used    (that is enable TCP_NODELAY), &lt;tt&gt;false&lt;/tt&gt; otherwise." name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; if the Nagle&apos;s algorithm is to NOT be used    (that is enable TCP_NODELAY), &lt;tt&gt;false&lt;/tt&gt; otherwise." type="boolean" name="getTcpNoDelay"></dev:method>
			<dev:method visibility="public" returncomment="the hint size of the send buffer" type="int" name="getSendBufferSize"></dev:method>
			<dev:method visibility="public" type="void" name="setSendBufferSize">
				<dev:params>
					<dev:param type="int" comment="the hint size of the send buffer" name="size"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the hint size of the send buffer" type="int" name="getReceiveBufferSize"></dev:method>
			<dev:method visibility="public" type="void" name="setReceiveBufferSize">
				<dev:params>
					<dev:param type="int" comment="the hint size of the send buffer" name="size"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the linger-on-close timeout" type="int" name="getLinger"></dev:method>
			<dev:method visibility="public" type="void" name="setLinger">
				<dev:params>
					<dev:param type="int" comment="the linger-on-close timeout" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="timeout in milliseconds." type="int" name="getConnectionTimeout"></dev:method>
			<dev:method visibility="public" type="void" name="setConnectionTimeout">
				<dev:params>
					<dev:param type="int" comment="Timeout in milliseconds." name="timeout"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; if stale connection check is to be used,     &lt;tt&gt;false&lt;/tt&gt; otherwise." type="boolean" name="isStaleCheckingEnabled"></dev:method>
			<dev:method visibility="public" type="void" name="setStaleCheckingEnabled">
				<dev:params>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; if stale connection check is to be used,     &lt;tt&gt;false&lt;/tt&gt; otherwise." name="value"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.params.dr1_0_0.HttpConnectionParams" serializable="true" name="org.apache.commons.httpclient.params.dr1_0_0.HttpConnectionManagerParams">
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.connection-manager.max-per-host&quot;" const="http.connection-manager.max-per-host" name="MAX_HOST_CONNECTIONS" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.connection-manager.max-total&quot;" const="http.connection-manager.max-total" name="MAX_TOTAL_CONNECTIONS" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="HttpConnectionManagerParams"></dev:constructor>
			<dev:method visibility="public" type="void" name="setDefaultMaxConnectionsPerHost">
				<dev:params>
					<dev:param type="int" comment="The default maximum." name="maxHostConnections"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setMaxConnectionsPerHost">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HostConfiguration" comment="The host config to set the maximum for.  Use   {@link HostConfiguration#ANY_HOST_CONFIGURATION} to configure the default value  per host." name="hostConfiguration"></dev:param>
					<dev:param type="int" comment="The maximum number of connections, &lt;code&gt;&gt; 0&lt;/code&gt;" name="maxHostConnections"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The default maximum." type="int" name="getDefaultMaxConnectionsPerHost"></dev:method>
			<dev:method visibility="public" returncomment="The maximum number of connections to be used for the given host config." type="int" name="getMaxConnectionsPerHost">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HostConfiguration" comment="The host config." name="hostConfiguration"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setMaxTotalConnections">
				<dev:params>
					<dev:param type="int" comment="The maximum number of connections allowed." name="maxTotalConnections"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The maximum number of connections allowed." type="int" name="getMaxTotalConnections"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.params.dr1_0_0.HttpMethodParams" serializable="true" name="org.apache.commons.httpclient.params.dr1_0_0.HttpClientParams">
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.connection-manager.timeout&quot;" const="http.connection-manager.timeout" name="CONNECTION_MANAGER_TIMEOUT" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.connection-manager.class&quot;" const="http.connection-manager.class" name="CONNECTION_MANAGER_CLASS" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.authentication.preemptive&quot;" const="http.authentication.preemptive" name="PREEMPTIVE_AUTHENTICATION" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.protocol.reject-relative-redirect&quot;" const="http.protocol.reject-relative-redirect" name="REJECT_RELATIVE_REDIRECT" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.protocol.max-redirects&quot;" const="http.protocol.max-redirects" name="MAX_REDIRECTS" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.protocol.allow-circular-redirects&quot;" const="http.protocol.allow-circular-redirects" name="ALLOW_CIRCULAR_REDIRECTS" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="HttpClientParams"></dev:constructor>
			<dev:constructor visibility="public" name="HttpClientParams">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.params.dr1_0_0.HttpParams" comment="the parent collection to defer to, if a parameter  is not explictly set in the collection itself." name="defaults"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="timeout in milliseconds." type="long" name="getConnectionManagerTimeout"></dev:method>
			<dev:method visibility="public" type="void" name="setConnectionManagerTimeout">
				<dev:params>
					<dev:param type="long" comment="the timeout in milliseconds" name="timeout"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="{@link org.apache.commons.httpclient.dr1_0_0.HttpConnectionManager HTTP connection manager}  factory class." type="java.lang.Class" name="getConnectionManagerClass"></dev:method>
			<dev:method visibility="public" type="void" name="setConnectionManagerClass">
				<dev:params>
					<dev:param type="java.lang.Class" comment="{@link org.apache.commons.httpclient.dr1_0_0.HttpConnectionManager HTTP connection manager}   factory class." name="clazz"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; if authentication should be attempted preemptively,    &lt;tt&gt;false&lt;/tt&gt; otherwise." type="boolean" name="isAuthenticationPreemptive"></dev:method>
			<dev:method visibility="public" type="void" name="setAuthenticationPreemptive">
				<dev:params>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; if authentication should be attempted preemptively,    &lt;tt&gt;false&lt;/tt&gt; otherwise." name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="makeStrict"></dev:method>
			<dev:method visibility="public" type="void" name="makeLenient"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.params.dr1_0_0.DefaultHttpParams" serializable="true" name="org.apache.commons.httpclient.params.dr1_0_0.HostParams">
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http.default-headers&quot;" const="http.default-headers" name="DEFAULT_HEADERS" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="HostParams"></dev:constructor>
			<dev:constructor visibility="public" name="HostParams">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.params.dr1_0_0.HttpParams" comment="the parent collection to defer to, if a parameter  is not explictly set in the collection itself." name="defaults"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="void" name="setVirtualHost">
				<dev:params>
					<dev:param type="java.lang.String" comment="The host name" name="hostname"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The virtual host name" type="java.lang.String" name="getVirtualHost"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.params.dr1_0_0.DefaultHttpParamsFactory">
		<dev:extends>
			<dev:extend name="org.apache.commons.httpclient.params.dr1_0_0.HttpParamsFactory"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="DefaultHttpParamsFactory"></dev:constructor>
			<dev:method visibility="public" type="org.apache.commons.httpclient.params.dr1_0_0.HttpParams" name="getDefaultParams"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" serializable="true" name="org.apache.commons.httpclient.params.dr1_0_0.DefaultHttpParams">
		<dev:extends>
			<dev:extend name="org.apache.commons.httpclient.params.dr1_0_0.HttpParams"></dev:extend>
			<dev:extend name="java.io.Serializable"></dev:extend>
			<dev:extend name="java.lang.Cloneable"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="DefaultHttpParams">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.params.dr1_0_0.HttpParams" comment="the parent collection to defer to, if a parameter  is not explictly set in the collection itself." name="defaults"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="DefaultHttpParams"></dev:constructor>
			<dev:method visibility="public" returncomment="the value returned from &lt;code&gt;HttpParamsFactory#getDefaultParams()&lt;/code&gt;" type="org.apache.commons.httpclient.params.dr1_0_0.HttpParams" name="getDefaultParams" static="true"></dev:method>
			<dev:method visibility="public" type="void" name="setHttpParamsFactory" static="true">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.params.dr1_0_0.HttpParamsFactory" comment="an instance of HttpParamsFactory" name="httpParamsFactory"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="org.apache.commons.httpclient.params.dr1_0_0.HttpParams" name="getDefaults"></dev:method>
			<dev:method visibility="public" type="void" name="setDefaults">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.params.dr1_0_0.HttpParams" name="params"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="java.lang.Object" name="getParameter">
				<dev:params>
					<dev:param type="java.lang.String" name="name"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setParameter">
				<dev:params>
					<dev:param type="java.lang.String" name="name"></dev:param>
					<dev:param type="java.lang.Object" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setParameters">
				<dev:params>
					<dev:param type="java.lang.String[]" comment="array of parameter name" name="names"></dev:param>
					<dev:param type="java.lang.Object" comment="parameter value" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="long" name="getLongParameter">
				<dev:params>
					<dev:param type="java.lang.String" name="name"></dev:param>
					<dev:param type="long" name="defaultValue"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setLongParameter">
				<dev:params>
					<dev:param type="java.lang.String" name="name"></dev:param>
					<dev:param type="long" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="int" name="getIntParameter">
				<dev:params>
					<dev:param type="java.lang.String" name="name"></dev:param>
					<dev:param type="int" name="defaultValue"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setIntParameter">
				<dev:params>
					<dev:param type="java.lang.String" name="name"></dev:param>
					<dev:param type="int" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="double" name="getDoubleParameter">
				<dev:params>
					<dev:param type="java.lang.String" name="name"></dev:param>
					<dev:param type="double" name="defaultValue"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setDoubleParameter">
				<dev:params>
					<dev:param type="java.lang.String" name="name"></dev:param>
					<dev:param type="double" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="boolean" name="getBooleanParameter">
				<dev:params>
					<dev:param type="java.lang.String" name="name"></dev:param>
					<dev:param type="boolean" name="defaultValue"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setBooleanParameter">
				<dev:params>
					<dev:param type="java.lang.String" name="name"></dev:param>
					<dev:param type="boolean" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="boolean" name="isParameterSet">
				<dev:params>
					<dev:param type="java.lang.String" name="name"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="boolean" name="isParameterSetLocally">
				<dev:params>
					<dev:param type="java.lang.String" name="name"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="boolean" name="isParameterTrue">
				<dev:params>
					<dev:param type="java.lang.String" name="name"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="boolean" name="isParameterFalse">
				<dev:params>
					<dev:param type="java.lang.String" name="name"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="clear"></dev:method>
			<dev:method visibility="public" type="java.lang.Object" name="clone"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.protocol.dr1_0_0.SSLProtocolSocketFactory">
		<dev:extends>
			<dev:extend name="org.apache.commons.httpclient.protocol.dr1_0_0.SecureProtocolSocketFactory"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="SSLProtocolSocketFactory"></dev:constructor>
			<dev:method visibility="public" type="java.net.Socket" name="createSocket">
				<dev:params>
					<dev:param type="java.lang.String" name="host"></dev:param>
					<dev:param type="int" name="port"></dev:param>
					<dev:param type="java.net.InetAddress" name="clientHost"></dev:param>
					<dev:param type="int" name="clientPort"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="Socket a new socket" type="java.net.Socket" name="createSocket">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host name/IP" name="host"></dev:param>
					<dev:param type="int" comment="the port on the host" name="port"></dev:param>
					<dev:param type="java.net.InetAddress" comment="the local host name/IP to bind the socket to" name="localAddress"></dev:param>
					<dev:param type="int" comment="the port on the local machine" name="localPort"></dev:param>
					<dev:param type="org.apache.commons.httpclient.params.dr1_0_0.HttpConnectionParams" comment="{@link HttpConnectionParams Http connection parameters}" name="params"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="java.net.Socket" name="createSocket">
				<dev:params>
					<dev:param type="java.lang.String" name="host"></dev:param>
					<dev:param type="int" name="port"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="java.net.Socket" name="createSocket">
				<dev:params>
					<dev:param type="java.net.Socket" name="socket"></dev:param>
					<dev:param type="java.lang.String" name="host"></dev:param>
					<dev:param type="int" name="port"></dev:param>
					<dev:param type="boolean" name="autoClose"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="boolean" name="equals">
				<dev:params>
					<dev:param type="java.lang.Object" name="obj"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="int" name="hashCode"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class abstract="true" name="org.apache.commons.httpclient.protocol.dr1_0_0.SecureProtocolSocketFactory">
		<dev:extends>
			<dev:extend name="org.apache.commons.httpclient.protocol.dr1_0_0.ProtocolSocketFactory"></dev:extend>
		</dev:extends>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.protocol.dr1_0_0.ReflectionSocketFactory"></dev:class>
	<dev:class abstract="true" name="org.apache.commons.httpclient.protocol.dr1_0_0.ProtocolSocketFactory"></dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.protocol.dr1_0_0.Protocol">
		<dev:methods>
			<dev:constructor visibility="public" name="Protocol">
				<dev:params>
					<dev:param type="java.lang.String" comment="the scheme (e.g. http, https)" name="scheme"></dev:param>
					<dev:param type="org.apache.commons.httpclient.protocol.dr1_0_0.ProtocolSocketFactory" comment="the factory for creating sockets for communication using  this protocol" name="factory"></dev:param>
					<dev:param type="int" comment="the port this protocol defaults to" name="defaultPort"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="Protocol">
				<dev:params>
					<dev:param type="java.lang.String" comment="the scheme (e.g. http, https)" name="scheme"></dev:param>
					<dev:param type="org.apache.commons.httpclient.protocol.dr1_0_0.SecureProtocolSocketFactory" comment="the factory for creating sockets for communication using  this protocol" name="factory"></dev:param>
					<dev:param type="int" comment="the port this protocol defaults to" name="defaultPort"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="void" name="registerProtocol" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the identifier for this protocol" name="id"></dev:param>
					<dev:param type="org.apache.commons.httpclient.protocol.dr1_0_0.Protocol" comment="the protocol to register" name="protocol"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="unregisterProtocol" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the ID of the protocol to remove" name="id"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="Protocol a protocol" type="org.apache.commons.httpclient.protocol.dr1_0_0.Protocol" name="getProtocol" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="the protocol ID" name="id"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="int" type="int" name="getDefaultPort"></dev:method>
			<dev:method visibility="public" returncomment="SocketFactory" type="org.apache.commons.httpclient.protocol.dr1_0_0.ProtocolSocketFactory" name="getSocketFactory"></dev:method>
			<dev:method visibility="public" returncomment="The scheme" type="java.lang.String" name="getScheme"></dev:method>
			<dev:method visibility="public" returncomment="true if this protocol is secure" type="boolean" name="isSecure"></dev:method>
			<dev:method visibility="public" returncomment="the given port or the defaultPort" type="int" name="resolvePort">
				<dev:params>
					<dev:param type="int" comment="the port to be resolved" name="port"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="a string representation of this object." type="java.lang.String" name="toString"></dev:method>
			<dev:method visibility="public" returncomment="true if the objects are equal." type="boolean" name="equals">
				<dev:params>
					<dev:param type="java.lang.Object" comment="The object to compare against." name="obj"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The hash code." type="int" name="hashCode"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.protocol.dr1_0_0.DefaultProtocolSocketFactory">
		<dev:extends>
			<dev:extend name="org.apache.commons.httpclient.protocol.dr1_0_0.ProtocolSocketFactory"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="DefaultProtocolSocketFactory"></dev:constructor>
			<dev:method visibility="public" type="java.net.Socket" name="createSocket">
				<dev:params>
					<dev:param type="java.lang.String" name="host"></dev:param>
					<dev:param type="int" name="port"></dev:param>
					<dev:param type="java.net.InetAddress" name="localAddress"></dev:param>
					<dev:param type="int" name="localPort"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="Socket a new socket" type="java.net.Socket" name="createSocket">
				<dev:params>
					<dev:param type="java.lang.String" comment="the host name/IP" name="host"></dev:param>
					<dev:param type="int" comment="the port on the host" name="port"></dev:param>
					<dev:param type="java.net.InetAddress" comment="the local host name/IP to bind the socket to" name="localAddress"></dev:param>
					<dev:param type="int" comment="the port on the local machine" name="localPort"></dev:param>
					<dev:param type="org.apache.commons.httpclient.params.dr1_0_0.HttpConnectionParams" comment="{@link HttpConnectionParams Http connection parameters}" name="params"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="java.net.Socket" name="createSocket">
				<dev:params>
					<dev:param type="java.lang.String" name="host"></dev:param>
					<dev:param type="int" name="port"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="boolean" name="equals">
				<dev:params>
					<dev:param type="java.lang.Object" name="obj"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="int" name="hashCode"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.protocol.dr1_0_0.ControllerThreadSocketFactory">
		<dev:class superclass="java.lang.Object" abstract="true" name="org.apache.commons.httpclient.protocol.dr1_0_0.ControllerThreadSocketFactory.SocketTask">
			<dev:extends>
				<dev:extend name="java.lang.Runnable"></dev:extend>
			</dev:extends>
			<dev:methods>
				<dev:constructor visibility="public" name="ControllerThreadSocketFactory.SocketTask"></dev:constructor>
				<dev:method visibility="public" type="void" name="doit"></dev:method>
				<dev:method visibility="public" type="void" name="run"></dev:method>
			</dev:methods>
		</dev:class>
	</dev:class>
	<dev:class superclass="java.lang.Object" abstract="true" name="org.apache.commons.httpclient.protocol.dr1_0_0.ControllerThreadSocketFactory.SocketTask">
		<dev:extends>
			<dev:extend name="java.lang.Runnable"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="ControllerThreadSocketFactory.SocketTask"></dev:constructor>
			<dev:method visibility="public" type="void" name="doit"></dev:method>
			<dev:method visibility="public" type="void" name="run"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.util.dr1_0_0.URIUtil">
		<dev:fields></dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="URIUtil"></dev:constructor>
			<dev:method visibility="public" returncomment="the basename string; an empty string if the path ends with slash" type="java.lang.String" name="getName" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="a string regarded an URI" name="uri"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the query string; &lt;code&gt;null&lt;/code&gt; if empty or undefined" type="java.lang.String" name="getQuery" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="a string regarded an URI" name="uri"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the path string" type="java.lang.String" name="getPath" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="a string regarded an URI" name="uri"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the path and query string" type="java.lang.String" name="getPathQuery" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="a string regarded an URI" name="uri"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the string from the path part" type="java.lang.String" name="getFromPath" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="a string regarded an URI" name="uri"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the escaped string" type="java.lang.String" name="encodeAll" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="an unescaped string" name="unescaped"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the escaped string" type="java.lang.String" name="encodeAll" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="an unescaped string" name="unescaped"></dev:param>
					<dev:param type="java.lang.String" comment="the charset" name="charset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the escaped string" type="java.lang.String" name="encodeWithinAuthority" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="an unescaped string" name="unescaped"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the escaped string" type="java.lang.String" name="encodeWithinAuthority" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="an unescaped string" name="unescaped"></dev:param>
					<dev:param type="java.lang.String" comment="the charset" name="charset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the escaped string" type="java.lang.String" name="encodePathQuery" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="an unescaped string" name="unescaped"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the escaped string" type="java.lang.String" name="encodePathQuery" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="an unescaped string" name="unescaped"></dev:param>
					<dev:param type="java.lang.String" comment="the charset" name="charset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the escaped string" type="java.lang.String" name="encodeWithinPath" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="an unescaped string" name="unescaped"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the escaped string" type="java.lang.String" name="encodeWithinPath" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="an unescaped string" name="unescaped"></dev:param>
					<dev:param type="java.lang.String" comment="the charset" name="charset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the escaped string" type="java.lang.String" name="encodePath" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="an unescaped string" name="unescaped"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the escaped string" type="java.lang.String" name="encodePath" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="an unescaped string" name="unescaped"></dev:param>
					<dev:param type="java.lang.String" comment="the charset" name="charset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the escaped string" type="java.lang.String" name="encodeWithinQuery" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="an unescaped string" name="unescaped"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the escaped string" type="java.lang.String" name="encodeWithinQuery" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="an unescaped string" name="unescaped"></dev:param>
					<dev:param type="java.lang.String" comment="the charset" name="charset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the escaped string" type="java.lang.String" name="encodeQuery" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="an unescaped string" name="unescaped"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the escaped string" type="java.lang.String" name="encodeQuery" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="an unescaped string" name="unescaped"></dev:param>
					<dev:param type="java.lang.String" comment="the charset" name="charset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the escaped string" type="java.lang.String" name="encode" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="a string" name="unescaped"></dev:param>
					<dev:param type="java.util.BitSet" comment="allowed characters not to be escaped" name="allowed"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the escaped string" type="java.lang.String" name="encode" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="a string" name="unescaped"></dev:param>
					<dev:param type="java.util.BitSet" comment="allowed characters not to be escaped" name="allowed"></dev:param>
					<dev:param type="java.lang.String" comment="the charset" name="charset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the unescaped string" type="java.lang.String" name="decode" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="a string" name="escaped"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the unescaped string" type="java.lang.String" name="decode" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="a string" name="escaped"></dev:param>
					<dev:param type="java.lang.String" comment="the charset" name="charset"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
		<dev:class superclass="org.apache.commons.httpclient.dr1_0_0.URI" serializable="true" name="org.apache.commons.httpclient.util.dr1_0_0.URIUtil.Coder">
			<dev:methods>
				<dev:method visibility="public" returncomment="the escaped and encoded string" type="char[]" name="encode" static="true">
					<dev:params>
						<dev:param type="java.lang.String" comment="an unescaped component" name="unescapedComponent"></dev:param>
						<dev:param type="java.util.BitSet" comment="allowed characters not to be escaped" name="allowed"></dev:param>
						<dev:param type="java.lang.String" comment="the charset to encode" name="charset"></dev:param>
					</dev:params>
				</dev:method>
				<dev:method visibility="public" returncomment="the escaped and encoded string" type="java.lang.String" name="decode" static="true">
					<dev:params>
						<dev:param type="char[]" comment="an being-unescaped component" name="escapedComponent"></dev:param>
						<dev:param type="java.lang.String" comment="the charset to decode" name="charset"></dev:param>
					</dev:params>
				</dev:method>
				<dev:method visibility="public" returncomment="true if the given character array is 7 bit ASCII-compatible." type="boolean" name="verifyEscaped" static="true">
					<dev:params>
						<dev:param type="char[]" comment="given characters" name="original"></dev:param>
					</dev:params>
				</dev:method>
				<dev:method visibility="public" returncomment="the replaced string" type="java.lang.String" name="replace" static="true">
					<dev:params>
						<dev:param type="java.lang.String" comment="a given string" name="original"></dev:param>
						<dev:param type="char[]" comment="a replacing character array" name="from"></dev:param>
						<dev:param type="char[]" comment="a replaced character array" name="to"></dev:param>
					</dev:params>
				</dev:method>
				<dev:method visibility="public" returncomment="the replaced string" type="java.lang.String" name="replace" static="true">
					<dev:params>
						<dev:param type="java.lang.String" comment="a given string" name="original"></dev:param>
						<dev:param type="char" comment="a replacing character array" name="from"></dev:param>
						<dev:param type="char" comment="a replaced character array" name="to"></dev:param>
					</dev:params>
				</dev:method>
			</dev:methods>
		</dev:class>
	</dev:class>
	<dev:class superclass="org.apache.commons.httpclient.dr1_0_0.URI" serializable="true" name="org.apache.commons.httpclient.util.dr1_0_0.URIUtil.Coder">
		<dev:methods>
			<dev:method visibility="public" returncomment="the escaped and encoded string" type="char[]" name="encode" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="an unescaped component" name="unescapedComponent"></dev:param>
					<dev:param type="java.util.BitSet" comment="allowed characters not to be escaped" name="allowed"></dev:param>
					<dev:param type="java.lang.String" comment="the charset to encode" name="charset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the escaped and encoded string" type="java.lang.String" name="decode" static="true">
				<dev:params>
					<dev:param type="char[]" comment="an being-unescaped component" name="escapedComponent"></dev:param>
					<dev:param type="java.lang.String" comment="the charset to decode" name="charset"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="true if the given character array is 7 bit ASCII-compatible." type="boolean" name="verifyEscaped" static="true">
				<dev:params>
					<dev:param type="char[]" comment="given characters" name="original"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the replaced string" type="java.lang.String" name="replace" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="a given string" name="original"></dev:param>
					<dev:param type="char[]" comment="a replacing character array" name="from"></dev:param>
					<dev:param type="char[]" comment="a replaced character array" name="to"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="the replaced string" type="java.lang.String" name="replace" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="a given string" name="original"></dev:param>
					<dev:param type="char" comment="a replacing character array" name="from"></dev:param>
					<dev:param type="char" comment="a replaced character array" name="to"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.util.dr1_0_0.TimeoutController">
		<dev:class superclass="java.lang.Exception" serializable="true" name="org.apache.commons.httpclient.util.dr1_0_0.TimeoutController.TimeoutException"></dev:class>
	</dev:class>
	<dev:class superclass="java.lang.Exception" serializable="true" name="org.apache.commons.httpclient.util.dr1_0_0.TimeoutController.TimeoutException"></dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.util.dr1_0_0.ParameterParser">
		<dev:methods>
			<dev:constructor visibility="public" name="ParameterParser"></dev:constructor>
			<dev:method visibility="public" returncomment="a list of {@link NameValuePair}s" type="java.util.List" name="parse">
				<dev:params>
					<dev:param type="java.lang.String" comment="the string that contains a sequence of name/value pairs" name="str"></dev:param>
					<dev:param type="char" name="separator"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="a list of {@link NameValuePair}s" type="java.util.List" name="parse">
				<dev:params>
					<dev:param type="char[]" comment="the array of characters that contains a sequence of   name/value pairs" name="chars"></dev:param>
					<dev:param type="char" name="separator"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="a list of {@link NameValuePair}s" type="java.util.List" name="parse">
				<dev:params>
					<dev:param type="char[]" comment="the array of characters that contains a sequence of   name/value pairs" name="chars"></dev:param>
					<dev:param type="int" comment="- the initial offset." name="offset"></dev:param>
					<dev:param type="int" comment="- the length." name="length"></dev:param>
					<dev:param type="char" name="separator"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.util.dr1_0_0.ParameterFormatter">
		<dev:methods>
			<dev:constructor visibility="public" name="ParameterFormatter"></dev:constructor>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; if all parameter values must be enclosed in   quotation marks, &lt;tt&gt;false&lt;/tt&gt; otherwise" type="boolean" name="isAlwaysUseQuotes"></dev:method>
			<dev:method visibility="public" type="void" name="setAlwaysUseQuotes">
				<dev:params>
					<dev:param type="boolean" comment="" name="alwaysUseQuotes"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="formatValue" static="true">
				<dev:params>
					<dev:param type="java.lang.StringBuffer" comment="output buffer" name="buffer"></dev:param>
					<dev:param type="java.lang.String" comment="the parameter value to be formatted" name="value"></dev:param>
					<dev:param type="boolean" comment="&lt;tt&gt;true&lt;/tt&gt; if the parameter value must   be enclosed in quotation marks, even if it does not contain any special   characters&lt;tt&gt;, false&lt;/tt&gt; only if the parameter value contains   potentially unsafe special characters" name="alwaysUseQuotes"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="format">
				<dev:params>
					<dev:param type="java.lang.StringBuffer" comment="output buffer" name="buffer"></dev:param>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.NameValuePair" comment="the parameter to be formatted" name="param"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="RFC 2616 conformant textual representaion of the   attribute/value pair" type="java.lang.String" name="format">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.NameValuePair" comment="the parameter to be formatted" name="param"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.util.dr1_0_0.LangUtils">
		<dev:fields>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="17" const="17" name="HASH_SEED" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="37" const="37" name="HASH_OFFSET" static="true"></dev:field>
		</dev:fields>
	</dev:class>
	<dev:class superclass="java.lang.Thread" name="org.apache.commons.httpclient.util.dr1_0_0.IdleConnectionTimeoutThread">
		<dev:methods>
			<dev:constructor visibility="public" name="IdleConnectionTimeoutThread"></dev:constructor>
			<dev:method visibility="public" type="void" name="addConnectionManager">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpConnectionManager" comment="The connection manager to add" name="connectionManager"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="removeConnectionManager">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpConnectionManager" comment="The connection manager to remove" name="connectionManager"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="run"></dev:method>
			<dev:method visibility="public" type="void" name="shutdown"></dev:method>
			<dev:method visibility="public" type="void" name="setConnectionTimeout">
				<dev:params>
					<dev:param type="long" comment="The connection timeout in milliseconds" name="connectionTimeout"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setTimeoutInterval">
				<dev:params>
					<dev:param type="long" comment="The timeout interval in milliseconds" name="timeoutInterval"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.util.dr1_0_0.IdleConnectionHandler">
		<dev:methods>
			<dev:constructor visibility="public" name="IdleConnectionHandler"></dev:constructor>
			<dev:method visibility="public" type="void" name="add">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpConnection" comment="the connection to add" name="connection"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="remove">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpConnection" comment="" name="connection"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="removeAll"></dev:method>
			<dev:method visibility="public" type="void" name="closeIdleConnections">
				<dev:params>
					<dev:param type="long" comment="the minimum idle time, in milliseconds, for connections to be closed" name="idleTime"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.net.HttpURLConnection" name="org.apache.commons.httpclient.util.dr1_0_0.HttpURLConnection">
		<dev:methods>
			<dev:constructor visibility="public" name="HttpURLConnection">
				<dev:params>
					<dev:param type="org.apache.commons.httpclient.dr1_0_0.HttpMethod" comment="the theMethod that was used to connect to the HTTP         server and which contains the returned data." name="method"></dev:param>
					<dev:param type="java.net.URL" comment="the URL to which we are connected (includes query string)" name="url"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" returncomment="The input stream." type="java.io.InputStream" name="getInputStream"></dev:method>
			<dev:method visibility="public" type="java.io.InputStream" name="getErrorStream"></dev:method>
			<dev:method visibility="public" type="void" name="disconnect"></dev:method>
			<dev:method visibility="public" type="void" name="connect"></dev:method>
			<dev:method visibility="public" returncomment="true if we are using a proxy." type="boolean" name="usingProxy"></dev:method>
			<dev:method visibility="public" returncomment="The request method." type="java.lang.String" name="getRequestMethod"></dev:method>
			<dev:method visibility="public" returncomment="The response code." type="int" name="getResponseCode"></dev:method>
			<dev:method visibility="public" returncomment="The response message" type="java.lang.String" name="getResponseMessage"></dev:method>
			<dev:method visibility="public" returncomment="the header field." type="java.lang.String" name="getHeaderField">
				<dev:params>
					<dev:param type="java.lang.String" comment="the name of the header" name="name"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The header field key." type="java.lang.String" name="getHeaderFieldKey">
				<dev:params>
					<dev:param type="int" comment="The key position" name="keyPosition"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The header field." type="java.lang.String" name="getHeaderField">
				<dev:params>
					<dev:param type="int" comment="The position" name="position"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="The URL." type="java.net.URL" name="getURL"></dev:method>
			<dev:method visibility="public" type="void" name="setInstanceFollowRedirects">
				<dev:params>
					<dev:param type="boolean" name="isFollowingRedirects"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="boolean" name="getInstanceFollowRedirects"></dev:method>
			<dev:method visibility="public" type="void" name="setRequestMethod">
				<dev:params>
					<dev:param type="java.lang.String" name="method"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="java.security.Permission" name="getPermission"></dev:method>
			<dev:method visibility="public" type="java.lang.Object" name="getContent"></dev:method>
			<dev:method visibility="public" type="java.lang.Object" name="getContent">
				<dev:params>
					<dev:param type="java.lang.Class[]" name="classes"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="java.io.OutputStream" name="getOutputStream"></dev:method>
			<dev:method visibility="public" type="void" name="setDoInput">
				<dev:params>
					<dev:param type="boolean" name="isInput"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="boolean" name="getDoInput"></dev:method>
			<dev:method visibility="public" type="void" name="setDoOutput">
				<dev:params>
					<dev:param type="boolean" name="isOutput"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="boolean" name="getDoOutput"></dev:method>
			<dev:method visibility="public" type="void" name="setAllowUserInteraction">
				<dev:params>
					<dev:param type="boolean" name="isAllowInteraction"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="boolean" name="getAllowUserInteraction"></dev:method>
			<dev:method visibility="public" type="void" name="setUseCaches">
				<dev:params>
					<dev:param type="boolean" name="isUsingCaches"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="boolean" name="getUseCaches"></dev:method>
			<dev:method visibility="public" type="void" name="setIfModifiedSince">
				<dev:params>
					<dev:param type="long" name="modificationDate"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="long" name="getIfModifiedSince"></dev:method>
			<dev:method visibility="public" type="boolean" name="getDefaultUseCaches"></dev:method>
			<dev:method visibility="public" type="void" name="setDefaultUseCaches">
				<dev:params>
					<dev:param type="boolean" name="isUsingCaches"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setRequestProperty">
				<dev:params>
					<dev:param type="java.lang.String" name="key"></dev:param>
					<dev:param type="java.lang.String" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="java.lang.String" name="getRequestProperty">
				<dev:params>
					<dev:param type="java.lang.String" name="key"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.util.dr1_0_0.ExceptionUtil">
		<dev:methods>
			<dev:constructor visibility="public" name="ExceptionUtil"></dev:constructor>
			<dev:method visibility="public" type="void" name="initCause" static="true">
				<dev:params>
					<dev:param type="java.lang.Throwable" comment="The throwable." name="throwable"></dev:param>
					<dev:param type="java.lang.Throwable" comment="The cause of the throwable." name="cause"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="&lt;tt&gt;true&lt;/tt&gt; if the exception signals socket timeout, &lt;tt&gt;false&lt;/tt&gt;   otherwise." type="boolean" name="isSocketTimeoutException" static="true">
				<dev:params>
					<dev:param type="java.io.InterruptedIOException" comment="an instance of InterruptedIOException class." name="e"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.util.dr1_0_0.EncodingUtil"></dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.util.dr1_0_0.DateUtil">
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;EEE, dd MMM yyyy HH:mm:ss zzz&quot;" const="EEE, dd MMM yyyy HH:mm:ss zzz" name="PATTERN_RFC1123" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;EEEE, dd-MMM-yy HH:mm:ss zzz&quot;" const="EEEE, dd-MMM-yy HH:mm:ss zzz" name="PATTERN_RFC1036" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;EEE MMM d HH:mm:ss yyyy&quot;" const="EEE MMM d HH:mm:ss yyyy" name="PATTERN_ASCTIME" static="true"></dev:field>
		</dev:fields>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.httpclient.util.dr1_0_0.DateParser">
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;EEE, dd MMM yyyy HH:mm:ss zzz&quot;" const="EEE, dd MMM yyyy HH:mm:ss zzz" name="PATTERN_RFC1123" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;EEEE, dd-MMM-yy HH:mm:ss zzz&quot;" const="EEEE, dd-MMM-yy HH:mm:ss zzz" name="PATTERN_RFC1036" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;EEE MMM d HH:mm:ss yyyy&quot;" const="EEE MMM d HH:mm:ss yyyy" name="PATTERN_ASCTIME" static="true"></dev:field>
		</dev:fields>
	</dev:class>
	<dev:class superclass="java.lang.Exception" serializable="true" name="org.apache.commons.httpclient.util.dr1_0_0.DateParseException"></dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.logging.dr1_0_0.LogSource">
		<dev:fields></dev:fields>
	</dev:class>
	<dev:class superclass="java.lang.Object" abstract="true" name="org.apache.commons.logging.dr1_0_0.LogFactory">
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;priority&quot;" const="priority" name="PRIORITY_KEY" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;use_tccl&quot;" const="use_tccl" name="TCCL_KEY" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.apache.commons.logging.dr1_0_0.LogFactory&quot;" const="org.apache.commons.logging.dr1_0_0.LogFactory" name="FACTORY_PROPERTY" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.apache.commons.logging.impl.dr1_0_0.LogFactoryImpl&quot;" const="org.apache.commons.logging.impl.dr1_0_0.LogFactoryImpl" name="FACTORY_DEFAULT" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;commons-logging.properties&quot;" const="commons-logging.properties" name="FACTORY_PROPERTIES" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.apache.commons.logging.diagnostics.dest&quot;" const="org.apache.commons.logging.diagnostics.dest" name="DIAGNOSTICS_DEST_PROPERTY" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.apache.commons.logging.dr1_0_0.LogFactory.HashtableImpl&quot;" const="org.apache.commons.logging.dr1_0_0.LogFactory.HashtableImpl" name="HASHTABLE_IMPLEMENTATION_PROPERTY" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:method visibility="public" type="java.lang.Object" name="getAttribute">
				<dev:params>
					<dev:param type="java.lang.String" comment="Name of the attribute to return" name="name"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="java.lang.String[]" name="getAttributeNames"></dev:method>
			<dev:method visibility="public" type="org.apache.commons.logging.dr1_0_0.Log" name="getInstance">
				<dev:params>
					<dev:param type="java.lang.Class" comment="Class for which a suitable Log name will be derived" name="clazz"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="org.apache.commons.logging.dr1_0_0.Log" name="getInstance">
				<dev:params>
					<dev:param type="java.lang.String" comment="Logical name of the &lt;code&gt;Log&lt;/code&gt; instance to be   returned (the meaning of this name is only known to the underlying   logging implementation that is being wrapped)" name="name"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="release"></dev:method>
			<dev:method visibility="public" type="void" name="removeAttribute">
				<dev:params>
					<dev:param type="java.lang.String" comment="Name of the attribute to remove" name="name"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setAttribute">
				<dev:params>
					<dev:param type="java.lang.String" comment="Name of the attribute to set" name="name"></dev:param>
					<dev:param type="java.lang.Object" comment="Value of the attribute to set, or &lt;code&gt;null&lt;/code&gt;   to remove any setting for this attribute" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="org.apache.commons.logging.dr1_0_0.LogFactory" name="getFactory" static="true"></dev:method>
			<dev:method visibility="public" type="org.apache.commons.logging.dr1_0_0.Log" name="getLog" static="true">
				<dev:params>
					<dev:param type="java.lang.Class" comment="Class from which a log name will be derived" name="clazz"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="org.apache.commons.logging.dr1_0_0.Log" name="getLog" static="true">
				<dev:params>
					<dev:param type="java.lang.String" comment="Logical name of the &lt;code&gt;Log&lt;/code&gt; instance to be   returned (the meaning of this name is only known to the underlying   logging implementation that is being wrapped)" name="name"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="release" static="true">
				<dev:params>
					<dev:param type="java.lang.ClassLoader" comment="ClassLoader for which to release the LogFactory" name="classLoader"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="releaseAll" static="true"></dev:method>
			<dev:method visibility="public" returncomment="a string of form classname@hashcode, or &quot;null&quot; if param o is null." type="java.lang.String" name="objectId" static="true">
				<dev:params>
					<dev:param type="java.lang.Object" comment="may be null." name="o"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.RuntimeException" serializable="true" name="org.apache.commons.logging.dr1_0_0.LogConfigurationException">
		<dev:fields></dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="LogConfigurationException"></dev:constructor>
			<dev:constructor visibility="public" name="LogConfigurationException">
				<dev:params>
					<dev:param type="java.lang.String" comment="The detail message" name="message"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="LogConfigurationException">
				<dev:params>
					<dev:param type="java.lang.Throwable" comment="The underlying cause" name="cause"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:constructor visibility="public" name="LogConfigurationException">
				<dev:params>
					<dev:param type="java.lang.String" comment="The detail message" name="message"></dev:param>
					<dev:param type="java.lang.Throwable" comment="The underlying cause" name="cause"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="java.lang.Throwable" name="getCause"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class abstract="true" name="org.apache.commons.logging.dr1_0_0.Log"></dev:class>
	<dev:class superclass="java.util.Hashtable" serializable="true" name="org.apache.commons.logging.impl.dr1_0_0.WeakHashtable">
		<dev:methods>
			<dev:constructor visibility="public" name="WeakHashtable"></dev:constructor>
			<dev:method visibility="public" type="boolean" name="containsKey">
				<dev:params>
					<dev:param type="java.lang.Object" name="key"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="java.util.Enumeration" name="elements"></dev:method>
			<dev:method visibility="public" type="java.util.Set" name="entrySet"></dev:method>
			<dev:method visibility="public" type="java.lang.Object" name="get">
				<dev:params>
					<dev:param type="java.lang.Object" name="key"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="java.util.Enumeration" name="keys"></dev:method>
			<dev:method visibility="public" type="java.util.Set" name="keySet"></dev:method>
			<dev:method visibility="public" type="java.lang.Object" name="put">
				<dev:params>
					<dev:param type="java.lang.Object" name="key"></dev:param>
					<dev:param type="java.lang.Object" name="value"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="putAll">
				<dev:params>
					<dev:param type="java.util.Map" name="t"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="java.util.Collection" name="values"></dev:method>
			<dev:method visibility="public" type="java.lang.Object" name="remove">
				<dev:params>
					<dev:param type="java.lang.Object" name="key"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="boolean" name="isEmpty"></dev:method>
			<dev:method visibility="public" type="int" name="size"></dev:method>
			<dev:method visibility="public" type="java.lang.String" name="toString"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" serializable="true" name="org.apache.commons.logging.impl.dr1_0_0.SimpleLog">
		<dev:extends>
			<dev:extend name="org.apache.commons.logging.dr1_0_0.Log"></dev:extend>
			<dev:extend name="java.io.Serializable"></dev:extend>
		</dev:extends>
		<dev:fields>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="1" const="1" name="LOG_LEVEL_TRACE" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="2" const="2" name="LOG_LEVEL_DEBUG" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="3" const="3" name="LOG_LEVEL_INFO" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="4" const="4" name="LOG_LEVEL_WARN" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="5" const="5" name="LOG_LEVEL_ERROR" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="6" const="6" name="LOG_LEVEL_FATAL" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="0" const="0" name="LOG_LEVEL_ALL" static="true"></dev:field>
			<dev:field visibility="public" fulltype="int" type="int" final="true" constexpr="7" const="7" name="LOG_LEVEL_OFF" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="SimpleLog">
				<dev:params>
					<dev:param type="java.lang.String" comment="log name" name="name"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="void" name="setLevel">
				<dev:params>
					<dev:param type="int" comment="new logging level" name="currentLogLevel"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="int" name="getLevel"></dev:method>
			<dev:method visibility="public" type="void" final="true" name="debug">
				<dev:params>
					<dev:param type="java.lang.Object" comment="to log" name="message"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" final="true" name="debug">
				<dev:params>
					<dev:param type="java.lang.Object" comment="to log" name="message"></dev:param>
					<dev:param type="java.lang.Throwable" comment="log this cause" name="t"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" final="true" name="trace">
				<dev:params>
					<dev:param type="java.lang.Object" comment="to log" name="message"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" final="true" name="trace">
				<dev:params>
					<dev:param type="java.lang.Object" comment="to log" name="message"></dev:param>
					<dev:param type="java.lang.Throwable" comment="log this cause" name="t"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" final="true" name="info">
				<dev:params>
					<dev:param type="java.lang.Object" comment="to log" name="message"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" final="true" name="info">
				<dev:params>
					<dev:param type="java.lang.Object" comment="to log" name="message"></dev:param>
					<dev:param type="java.lang.Throwable" comment="log this cause" name="t"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" final="true" name="warn">
				<dev:params>
					<dev:param type="java.lang.Object" comment="to log" name="message"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" final="true" name="warn">
				<dev:params>
					<dev:param type="java.lang.Object" comment="to log" name="message"></dev:param>
					<dev:param type="java.lang.Throwable" comment="log this cause" name="t"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" final="true" name="error">
				<dev:params>
					<dev:param type="java.lang.Object" comment="to log" name="message"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" final="true" name="error">
				<dev:params>
					<dev:param type="java.lang.Object" comment="to log" name="message"></dev:param>
					<dev:param type="java.lang.Throwable" comment="log this cause" name="t"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" final="true" name="fatal">
				<dev:params>
					<dev:param type="java.lang.Object" comment="to log" name="message"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" final="true" name="fatal">
				<dev:params>
					<dev:param type="java.lang.Object" comment="to log" name="message"></dev:param>
					<dev:param type="java.lang.Throwable" comment="log this cause" name="t"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="boolean" final="true" name="isDebugEnabled"></dev:method>
			<dev:method visibility="public" type="boolean" final="true" name="isErrorEnabled"></dev:method>
			<dev:method visibility="public" type="boolean" final="true" name="isFatalEnabled"></dev:method>
			<dev:method visibility="public" type="boolean" final="true" name="isInfoEnabled"></dev:method>
			<dev:method visibility="public" type="boolean" final="true" name="isTraceEnabled"></dev:method>
			<dev:method visibility="public" type="boolean" final="true" name="isWarnEnabled"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" name="org.apache.commons.logging.impl.dr1_0_0.ServletContextCleaner">
		<dev:extends>
			<dev:extend name="javax.servlet.ServletContextListener"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="ServletContextCleaner"></dev:constructor>
			<dev:method visibility="public" type="void" name="contextDestroyed">
				<dev:params>
					<dev:param type="javax.servlet.ServletContextEvent" name="sce"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="contextInitialized">
				<dev:params>
					<dev:param type="javax.servlet.ServletContextEvent" name="sce"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="java.lang.Object" serializable="true" name="org.apache.commons.logging.impl.dr1_0_0.NoOpLog">
		<dev:extends>
			<dev:extend name="org.apache.commons.logging.dr1_0_0.Log"></dev:extend>
			<dev:extend name="java.io.Serializable"></dev:extend>
		</dev:extends>
		<dev:methods>
			<dev:constructor visibility="public" name="NoOpLog"></dev:constructor>
			<dev:constructor visibility="public" name="NoOpLog">
				<dev:params>
					<dev:param type="java.lang.String" name="name"></dev:param>
				</dev:params>
			</dev:constructor>
			<dev:method visibility="public" type="void" name="trace">
				<dev:params>
					<dev:param type="java.lang.Object" name="message"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="trace">
				<dev:params>
					<dev:param type="java.lang.Object" name="message"></dev:param>
					<dev:param type="java.lang.Throwable" name="t"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="debug">
				<dev:params>
					<dev:param type="java.lang.Object" name="message"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="debug">
				<dev:params>
					<dev:param type="java.lang.Object" name="message"></dev:param>
					<dev:param type="java.lang.Throwable" name="t"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="info">
				<dev:params>
					<dev:param type="java.lang.Object" name="message"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="info">
				<dev:params>
					<dev:param type="java.lang.Object" name="message"></dev:param>
					<dev:param type="java.lang.Throwable" name="t"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="warn">
				<dev:params>
					<dev:param type="java.lang.Object" name="message"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="warn">
				<dev:params>
					<dev:param type="java.lang.Object" name="message"></dev:param>
					<dev:param type="java.lang.Throwable" name="t"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="error">
				<dev:params>
					<dev:param type="java.lang.Object" name="message"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="error">
				<dev:params>
					<dev:param type="java.lang.Object" name="message"></dev:param>
					<dev:param type="java.lang.Throwable" name="t"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="fatal">
				<dev:params>
					<dev:param type="java.lang.Object" name="message"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="fatal">
				<dev:params>
					<dev:param type="java.lang.Object" name="message"></dev:param>
					<dev:param type="java.lang.Throwable" name="t"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" returncomment="false" type="boolean" final="true" name="isDebugEnabled"></dev:method>
			<dev:method visibility="public" returncomment="false" type="boolean" final="true" name="isErrorEnabled"></dev:method>
			<dev:method visibility="public" returncomment="false" type="boolean" final="true" name="isFatalEnabled"></dev:method>
			<dev:method visibility="public" returncomment="false" type="boolean" final="true" name="isInfoEnabled"></dev:method>
			<dev:method visibility="public" returncomment="false" type="boolean" final="true" name="isTraceEnabled"></dev:method>
			<dev:method visibility="public" returncomment="false" type="boolean" final="true" name="isWarnEnabled"></dev:method>
		</dev:methods>
	</dev:class>
	<dev:class superclass="org.apache.commons.logging.dr1_0_0.LogFactory" name="org.apache.commons.logging.impl.dr1_0_0.LogFactoryImpl">
		<dev:fields>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.apache.commons.logging.dr1_0_0.Log&quot;" const="org.apache.commons.logging.dr1_0_0.Log" name="LOG_PROPERTY" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.apache.commons.logging.dr1_0_0.Log.allowFlawedContext&quot;" const="org.apache.commons.logging.dr1_0_0.Log.allowFlawedContext" name="ALLOW_FLAWED_CONTEXT_PROPERTY" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.apache.commons.logging.dr1_0_0.Log.allowFlawedDiscovery&quot;" const="org.apache.commons.logging.dr1_0_0.Log.allowFlawedDiscovery" name="ALLOW_FLAWED_DISCOVERY_PROPERTY" static="true"></dev:field>
			<dev:field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.apache.commons.logging.dr1_0_0.Log.allowFlawedHierarchy&quot;" const="org.apache.commons.logging.dr1_0_0.Log.allowFlawedHierarchy" name="ALLOW_FLAWED_HIERARCHY_PROPERTY" static="true"></dev:field>
		</dev:fields>
		<dev:methods>
			<dev:constructor visibility="public" name="LogFactoryImpl"></dev:constructor>
			<dev:method visibility="public" type="java.lang.Object" name="getAttribute">
				<dev:params>
					<dev:param type="java.lang.String" comment="Name of the attribute to return" name="name"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="java.lang.String[]" name="getAttributeNames"></dev:method>
			<dev:method visibility="public" type="org.apache.commons.logging.dr1_0_0.Log" name="getInstance">
				<dev:params>
					<dev:param type="java.lang.Class" comment="Class for which a suitable Log name will be derived" name="clazz"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="org.apache.commons.logging.dr1_0_0.Log" name="getInstance">
				<dev:params>
					<dev:param type="java.lang.String" comment="Logical name of the &lt;code&gt;Log&lt;/code&gt; instance to be   returned (the meaning of this name is only known to the underlying   logging implementation that is being wrapped)" name="name"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="release"></dev:method>
			<dev:method visibility="public" type="void" name="removeAttribute">
				<dev:params>
					<dev:param type="java.lang.String" comment="Name of the attribute to remove" name="name"></dev:param>
				</dev:params>
			</dev:method>
			<dev:method visibility="public" type="void" name="setAttribute">
				<dev:params>
					<dev:param type="java.lang.String" comment="Name of the attribute to set" name="name"></dev:param>
					<dev:param type="java.lang.Object" comment="Value of the attribute to set, or &lt;code&gt;null&lt;/code&gt;   to remove any setting for this attribute" name="value"></dev:param>
				</dev:params>
			</dev:method>
		</dev:methods>
	</dev:class>
	</dev:type-info>
	&components;
</dev:module>